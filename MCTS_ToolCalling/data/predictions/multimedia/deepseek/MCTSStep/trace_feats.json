[[[0, 0], [0, 1], [0, 2], [1, 3], [1, 4], [1, 5], [2, 6], [2, 7], [2, 8], [3, 9], [3, 10], [3, 11], [4, 12], [4, 13], [4, 14]], [[0, 1], [1, 2], [2, 3], [3, 4]], {"0": {"ucb": 1.6915149882393594, "p_ucb": 1.6915149882393594, "var_p_ucb": 1.8902695340883735, "action": "\n", "prob": 1.0}, "1": {"ucb": 2.537272482359039, "p_ucb": 2.537272482359039, "var_p_ucb": 2.8354043011325603, "action": "\n", "prob": 1.0}, "2": {"ucb": 2.537272482359039, "p_ucb": 2.537272482359039, "var_p_ucb": 2.8354043011325603, "action": "\n", "prob": 1.0}, "3": {"ucb": 2.09629414793641, "p_ucb": 1.886664733142769, "var_p_ucb": 2.045367308771497, "action": "Tool Call of Step 2:Call Text-to-Audio tool with input: 'input text' and output: 'output audio'\n", "prob": 0.9}, "4": {"ucb": 4.19258829587282, "p_ucb": 3.5637000514918973, "var_p_ucb": 3.8634715832350497, "action": "Tool Call of Step 2:Call Audio-to-Text tool with input: 'output audio' and output: 'output text'\n", "prob": 0.85}, "5": {"ucb": 4.19258829587282, "p_ucb": 3.773329466285538, "var_p_ucb": 4.090734617542994, "action": "Tool Call of Step 2:Call Text-to-Audio tool with input: 'output text' and output: 'output audio'\n", "prob": 0.9}, "6": {"ucb": 3.3302184446307908, "p_ucb": 2.9971966001677117, "var_p_ucb": 3.193785920534579, "action": "Tool Call of Step 2:Call Text-to-Audio tool with input: 'input text' and output: 'output audio'\n", "prob": 0.9}, "7": {"ucb": 3.3302184446307908, "p_ucb": 2.830685677936172, "var_p_ucb": 3.0163533693937685, "action": "Tool Call of Step 2:Call Audio-to-Text tool with input: 'output audio' and output: 'output text'\n", "prob": 0.85}, "8": {"ucb": 3.3302184446307908, "p_ucb": 2.9971966001677117, "var_p_ucb": 3.193785920534579, "action": "Tool Call of Step 2:Call Text-to-Audio tool with input: 'output text' and output: 'output audio'\n", "prob": 0.9}, "9": {"ucb": 3.3302184446307908, "p_ucb": 2.9971966001677117, "var_p_ucb": 3.193785920534579, "action": "Tool Call of Step 2:Call Text-to-Audio tool with input: 'input text' and output: 'output audio'\n", "prob": 0.9}, "10": {"ucb": 3.3302184446307908, "p_ucb": 2.830685677936172, "var_p_ucb": 3.0163533693937685, "action": "Tool Call of Step 2:Call Audio-to-Text tool with input: 'output audio' and output: 'output text'\n", "prob": 0.85}, "11": {"ucb": 3.3302184446307908, "p_ucb": 2.9971966001677117, "var_p_ucb": 3.193785920534579, "action": "Tool Call of Step 2:Call Text-to-Audio tool with input: 'output text' and output: 'output audio'\n", "prob": 0.9}, "12": {"ucb": 3.3302184446307908, "p_ucb": 3.3302184446307908, "var_p_ucb": 3.5486510228161983, "action": "\n", "prob": 1.0}, "13": {"ucb": 3.3302184446307908, "p_ucb": 3.3302184446307908, "var_p_ucb": 3.5486510228161983, "action": "\n", "prob": 1.0}, "14": {"ucb": 3.3302184446307908, "p_ucb": 3.3302184446307908, "var_p_ucb": 3.5486510228161983, "action": "\n", "prob": 1.0}}, {"0": {"state": "\n    You are tasked with breaking down a complex user request into solvable sub-tasks by creating a task plan.\n\n    Problem Description:\n\n    # TASK LIST #:\n{\"id\": \"Image Downloader\", \"desc\": \"Downloads an image from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"image\"]}\n{\"id\": \"Video Downloader\", \"desc\": \"Downloads a video from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"video\"]}\n{\"id\": \"Audio Downloader\", \"desc\": \"Downloads an audio file from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Text Downloader\", \"desc\": \"Downloads the text content from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Search\", \"desc\": \"Searches for a specific text or keyword on the internet.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Image Search\", \"desc\": \"Searches for images on the internet based on a given query.\", \"input-type\": [\"text\"], \"output-type\": [\"Image\"]}\n{\"id\": \"Image Search (by Image)\", \"desc\": \"Performs a similar image search using an input image.\", \"input-type\": [\"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"URL Extractor\", \"desc\": \"Extracts URL from text\", \"input-type\": [\"text\"], \"output-type\": [\"url\"]}\n{\"id\": \"Video Search\", \"desc\": \"Searches for videos on the internet based on a given query.\", \"input-type\": [\"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Text-to-Image\", \"desc\": \"Generates an image based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"image\"]}\n{\"id\": \"Text-to-Video\", \"desc\": \"Generates a video based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Text-to-Audio\", \"desc\": \"Generates an audio file based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Image-to-Text\", \"desc\": \"Extracts text from an input image using Optical Character Recognition (OCR).\", \"input-type\": [\"image\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio-to-Text\", \"desc\": \"Transcribes speech from an audio file into text.\", \"input-type\": [\"audio\"], \"output-type\": [\"text\"]}\n{\"id\": \"Video-to-Text\", \"desc\": \"Transcribes speech from a video file into text.\", \"input-type\": [\"video\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio Noise Reduction\", \"desc\": \"Reduces background noise or unwanted sounds from a given audio file.\", \"input-type\": [\"audio\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Audio Effects\", \"desc\": \"Applies various audio effects to a given audio file according to human instruction, such as reverb, chorus, or equalization.\", \"input-type\": [\"audio\", \"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Audio Splicer\", \"desc\": \"Combines two audio files into a single output file.\", \"input-type\": [\"audio\", \"audio\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Voice Changer\", \"desc\": \"Modifies the characteristics of a recorded voice according to human instruction, such as tone, pitch, or gender.\", \"input-type\": [\"audio\", \"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Text Summarizer\", \"desc\": \"Summarizes a given text into a shorter version while retaining the main points.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Translator\", \"desc\": \"Translates a given text from one language to english.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Sentiment Analysis\", \"desc\": \"Analyzes the sentiment of a given text, identifying if it is positive, negative, or neutral.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Grammar Checker\", \"desc\": \"Checks a given text for grammatical errors and suggests corrections.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Simplifier\", \"desc\": \"Rewrites a given text in a simpler and more understandable manner.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Expander\", \"desc\": \"Expands a given short text into a more detailed and descriptive version.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Keyword Extractor\", \"desc\": \"Extracts the most important keywords and phrases from a given text.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Paraphraser\", \"desc\": \"Rewrites a given text using different words while maintaining its original meaning.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Article Spinner\", \"desc\": \"Rewrites a given article using synonyms and syntax changes to create a new, unique version.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Topic Generator\", \"desc\": \"Generates a list of relevant topics or ideas based on a given input.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio-to-Image\", \"desc\": \"Generates an image that visually represents a given audio, such as a waveform or spectrogram.\", \"input-type\": [\"audio\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image-to-Video\", \"desc\": \"Creates a slideshow video using two input images.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video-to-Audio\", \"desc\": \"Extracts the audio track from a given video file.\", \"input-type\": [\"video\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Video-to-Image\", \"desc\": \"Extracts a still image from a given video.\", \"input-type\": [\"video\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Stitcher\", \"desc\": \"Stitches together two input images to create a panorama or collage.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Colorizer\", \"desc\": \"Adds color to a black and white input image using deep learning techniques.\", \"input-type\": [\"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Style Transfer\", \"desc\": \"Applies the visual style of one image (style) to the content of another image (content) using neural style transfer techniques.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Video Stabilizer\", \"desc\": \"Stabilizes a shaky input video to produce a smoother output video.\", \"input-type\": [\"video\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Speed Changer\", \"desc\": \"Adjusts the playback speed of a given video according to human instruction, either speeding it up or slowing it down.\", \"input-type\": [\"video\", \"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Synchronization\", \"desc\": \"Synchronizes the timing of an existing voiceover or audio file with the visuals of a given video.\", \"input-type\": [\"video\", \"audio\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Voiceover\", \"desc\": \"Adds a voiceover to a given video using a provided script or text.\", \"input-type\": [\"video\", \"text\"], \"output-type\": [\"video\"]}\n\n        \n# GOAL #: Based on the above tools, I want you generate task steps and task nodes to solve the # USER REQUEST #. \n        The format must in a strict JSON format, like: {\"task_steps\": [one or more concrete steps, format as Step x: step description], \"task_nodes\": [{\"task\": \"tool name must be from # TASK LIST #\", \"arguments\": [ a concise list of arguments for the tool. Either original text, or user-mentioned filename, or tag '<node-j>' (start from 0) to refer to the output of the j-th node. ]}], \"task_links\": [{\"source\": \"task name i\", \"target\": \"task name j\"}]} \n        \n        # REQUIREMENTS #: \n        1. the generated task steps and task nodes can resolve the given user request # USER REQUEST # perfectly. Task name must be selected from # TASK LIST #;\n\n        2. the task steps should strictly aligned with the task nodes, and the number of task steps should be same with the task nodes;\n\n        3. the dependencies among task steps should align with the argument dependencies of the task nodes;\n\n        4. the tool arguments should be align with the input-type field of # TASK LIST #;\n\n        5. The task links (task_links) should reflect the temporal dependencies among task nodes, i.e. the order in which the APIs are invoked;\n\n        \nHere are provided examples for your reference.\n\n# EXAMPLE #:\n# USER REQUEST #: Please create a panorama using two images 'example1.jpg' and 'example2.jpg'.\n# RESULT #: {\"task_steps\": [\"Step 1: Use Image Stitcher to stitch together two images.\"], \"task_nodes\": [{\"task\": \"Image Stitcher\", \"arguments\": [\"example1.jpg\", \"example2.jpg\"]}], \"task_links\": []}\n    \n\n\n    # USER REQUEST #: I have an example.mp4 video file with a speech that I would like to transcribe into text, paraphrase the transcribed text while maintaining the original meaning, and then turn that paraphrased text into an audio file. Finally, I want to merge the generated audio file with another example.wav audio file.\n    now please generate your result in a strict JSON format:\n    # RESULT #:\n\n    Below is an example of step-by-step tool calls for planning a task to decompose a complex request into sub-tasks:\n\n    ```json\n    [\n    {\"Step 1\": \"Call tool 1 with input: 'input 1 name and content' and output: 'output 1 name and content'\"}\n    {\"Step 2\": \"Call tool 2 with input: 'input 2 name and content' and output: 'output 2 name and content'\"}\n    {\"Step 3\": \"Finish\"}\n    ]\n    ```\n    Based on this example, generate step-by-step tool calls to solve the given problem by breaking it down into sub-tasks and forming a connected path.\n\n    -----Tool Calls-----\n    ", "value": null}, "1": {"state": "\n    You are tasked with breaking down a complex user request into solvable sub-tasks by creating a task plan.\n\n    Problem Description:\n\n    # TASK LIST #:\n{\"id\": \"Image Downloader\", \"desc\": \"Downloads an image from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"image\"]}\n{\"id\": \"Video Downloader\", \"desc\": \"Downloads a video from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"video\"]}\n{\"id\": \"Audio Downloader\", \"desc\": \"Downloads an audio file from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Text Downloader\", \"desc\": \"Downloads the text content from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Search\", \"desc\": \"Searches for a specific text or keyword on the internet.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Image Search\", \"desc\": \"Searches for images on the internet based on a given query.\", \"input-type\": [\"text\"], \"output-type\": [\"Image\"]}\n{\"id\": \"Image Search (by Image)\", \"desc\": \"Performs a similar image search using an input image.\", \"input-type\": [\"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"URL Extractor\", \"desc\": \"Extracts URL from text\", \"input-type\": [\"text\"], \"output-type\": [\"url\"]}\n{\"id\": \"Video Search\", \"desc\": \"Searches for videos on the internet based on a given query.\", \"input-type\": [\"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Text-to-Image\", \"desc\": \"Generates an image based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"image\"]}\n{\"id\": \"Text-to-Video\", \"desc\": \"Generates a video based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Text-to-Audio\", \"desc\": \"Generates an audio file based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Image-to-Text\", \"desc\": \"Extracts text from an input image using Optical Character Recognition (OCR).\", \"input-type\": [\"image\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio-to-Text\", \"desc\": \"Transcribes speech from an audio file into text.\", \"input-type\": [\"audio\"], \"output-type\": [\"text\"]}\n{\"id\": \"Video-to-Text\", \"desc\": \"Transcribes speech from a video file into text.\", \"input-type\": [\"video\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio Noise Reduction\", \"desc\": \"Reduces background noise or unwanted sounds from a given audio file.\", \"input-type\": [\"audio\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Audio Effects\", \"desc\": \"Applies various audio effects to a given audio file according to human instruction, such as reverb, chorus, or equalization.\", \"input-type\": [\"audio\", \"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Audio Splicer\", \"desc\": \"Combines two audio files into a single output file.\", \"input-type\": [\"audio\", \"audio\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Voice Changer\", \"desc\": \"Modifies the characteristics of a recorded voice according to human instruction, such as tone, pitch, or gender.\", \"input-type\": [\"audio\", \"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Text Summarizer\", \"desc\": \"Summarizes a given text into a shorter version while retaining the main points.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Translator\", \"desc\": \"Translates a given text from one language to english.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Sentiment Analysis\", \"desc\": \"Analyzes the sentiment of a given text, identifying if it is positive, negative, or neutral.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Grammar Checker\", \"desc\": \"Checks a given text for grammatical errors and suggests corrections.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Simplifier\", \"desc\": \"Rewrites a given text in a simpler and more understandable manner.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Expander\", \"desc\": \"Expands a given short text into a more detailed and descriptive version.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Keyword Extractor\", \"desc\": \"Extracts the most important keywords and phrases from a given text.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Paraphraser\", \"desc\": \"Rewrites a given text using different words while maintaining its original meaning.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Article Spinner\", \"desc\": \"Rewrites a given article using synonyms and syntax changes to create a new, unique version.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Topic Generator\", \"desc\": \"Generates a list of relevant topics or ideas based on a given input.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio-to-Image\", \"desc\": \"Generates an image that visually represents a given audio, such as a waveform or spectrogram.\", \"input-type\": [\"audio\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image-to-Video\", \"desc\": \"Creates a slideshow video using two input images.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video-to-Audio\", \"desc\": \"Extracts the audio track from a given video file.\", \"input-type\": [\"video\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Video-to-Image\", \"desc\": \"Extracts a still image from a given video.\", \"input-type\": [\"video\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Stitcher\", \"desc\": \"Stitches together two input images to create a panorama or collage.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Colorizer\", \"desc\": \"Adds color to a black and white input image using deep learning techniques.\", \"input-type\": [\"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Style Transfer\", \"desc\": \"Applies the visual style of one image (style) to the content of another image (content) using neural style transfer techniques.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Video Stabilizer\", \"desc\": \"Stabilizes a shaky input video to produce a smoother output video.\", \"input-type\": [\"video\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Speed Changer\", \"desc\": \"Adjusts the playback speed of a given video according to human instruction, either speeding it up or slowing it down.\", \"input-type\": [\"video\", \"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Synchronization\", \"desc\": \"Synchronizes the timing of an existing voiceover or audio file with the visuals of a given video.\", \"input-type\": [\"video\", \"audio\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Voiceover\", \"desc\": \"Adds a voiceover to a given video using a provided script or text.\", \"input-type\": [\"video\", \"text\"], \"output-type\": [\"video\"]}\n\n        \n# GOAL #: Based on the above tools, I want you generate task steps and task nodes to solve the # USER REQUEST #. \n        The format must in a strict JSON format, like: {\"task_steps\": [one or more concrete steps, format as Step x: step description], \"task_nodes\": [{\"task\": \"tool name must be from # TASK LIST #\", \"arguments\": [ a concise list of arguments for the tool. Either original text, or user-mentioned filename, or tag '<node-j>' (start from 0) to refer to the output of the j-th node. ]}], \"task_links\": [{\"source\": \"task name i\", \"target\": \"task name j\"}]} \n        \n        # REQUIREMENTS #: \n        1. the generated task steps and task nodes can resolve the given user request # USER REQUEST # perfectly. Task name must be selected from # TASK LIST #;\n\n        2. the task steps should strictly aligned with the task nodes, and the number of task steps should be same with the task nodes;\n\n        3. the dependencies among task steps should align with the argument dependencies of the task nodes;\n\n        4. the tool arguments should be align with the input-type field of # TASK LIST #;\n\n        5. The task links (task_links) should reflect the temporal dependencies among task nodes, i.e. the order in which the APIs are invoked;\n\n        \nHere are provided examples for your reference.\n\n# EXAMPLE #:\n# USER REQUEST #: Please create a panorama using two images 'example1.jpg' and 'example2.jpg'.\n# RESULT #: {\"task_steps\": [\"Step 1: Use Image Stitcher to stitch together two images.\"], \"task_nodes\": [{\"task\": \"Image Stitcher\", \"arguments\": [\"example1.jpg\", \"example2.jpg\"]}], \"task_links\": []}\n    \n\n\n    # USER REQUEST #: I have an example.mp4 video file with a speech that I would like to transcribe into text, paraphrase the transcribed text while maintaining the original meaning, and then turn that paraphrased text into an audio file. Finally, I want to merge the generated audio file with another example.wav audio file.\n    now please generate your result in a strict JSON format:\n    # RESULT #:\n\n    Below is an example of step-by-step tool calls for planning a task to decompose a complex request into sub-tasks:\n\n    ```json\n    [\n    {\"Step 1\": \"Call tool 1 with input: 'input 1 name and content' and output: 'output 1 name and content'\"}\n    {\"Step 2\": \"Call tool 2 with input: 'input 2 name and content' and output: 'output 2 name and content'\"}\n    {\"Step 3\": \"Finish\"}\n    ]\n    ```\n    Based on this example, generate step-by-step tool calls to solve the given problem by breaking it down into sub-tasks and forming a connected path.\n\n    -----Tool Calls-----\n    \n", "value": 0.0}, "2": {"state": "\n    You are tasked with breaking down a complex user request into solvable sub-tasks by creating a task plan.\n\n    Problem Description:\n\n    # TASK LIST #:\n{\"id\": \"Image Downloader\", \"desc\": \"Downloads an image from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"image\"]}\n{\"id\": \"Video Downloader\", \"desc\": \"Downloads a video from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"video\"]}\n{\"id\": \"Audio Downloader\", \"desc\": \"Downloads an audio file from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Text Downloader\", \"desc\": \"Downloads the text content from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Search\", \"desc\": \"Searches for a specific text or keyword on the internet.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Image Search\", \"desc\": \"Searches for images on the internet based on a given query.\", \"input-type\": [\"text\"], \"output-type\": [\"Image\"]}\n{\"id\": \"Image Search (by Image)\", \"desc\": \"Performs a similar image search using an input image.\", \"input-type\": [\"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"URL Extractor\", \"desc\": \"Extracts URL from text\", \"input-type\": [\"text\"], \"output-type\": [\"url\"]}\n{\"id\": \"Video Search\", \"desc\": \"Searches for videos on the internet based on a given query.\", \"input-type\": [\"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Text-to-Image\", \"desc\": \"Generates an image based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"image\"]}\n{\"id\": \"Text-to-Video\", \"desc\": \"Generates a video based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Text-to-Audio\", \"desc\": \"Generates an audio file based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Image-to-Text\", \"desc\": \"Extracts text from an input image using Optical Character Recognition (OCR).\", \"input-type\": [\"image\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio-to-Text\", \"desc\": \"Transcribes speech from an audio file into text.\", \"input-type\": [\"audio\"], \"output-type\": [\"text\"]}\n{\"id\": \"Video-to-Text\", \"desc\": \"Transcribes speech from a video file into text.\", \"input-type\": [\"video\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio Noise Reduction\", \"desc\": \"Reduces background noise or unwanted sounds from a given audio file.\", \"input-type\": [\"audio\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Audio Effects\", \"desc\": \"Applies various audio effects to a given audio file according to human instruction, such as reverb, chorus, or equalization.\", \"input-type\": [\"audio\", \"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Audio Splicer\", \"desc\": \"Combines two audio files into a single output file.\", \"input-type\": [\"audio\", \"audio\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Voice Changer\", \"desc\": \"Modifies the characteristics of a recorded voice according to human instruction, such as tone, pitch, or gender.\", \"input-type\": [\"audio\", \"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Text Summarizer\", \"desc\": \"Summarizes a given text into a shorter version while retaining the main points.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Translator\", \"desc\": \"Translates a given text from one language to english.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Sentiment Analysis\", \"desc\": \"Analyzes the sentiment of a given text, identifying if it is positive, negative, or neutral.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Grammar Checker\", \"desc\": \"Checks a given text for grammatical errors and suggests corrections.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Simplifier\", \"desc\": \"Rewrites a given text in a simpler and more understandable manner.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Expander\", \"desc\": \"Expands a given short text into a more detailed and descriptive version.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Keyword Extractor\", \"desc\": \"Extracts the most important keywords and phrases from a given text.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Paraphraser\", \"desc\": \"Rewrites a given text using different words while maintaining its original meaning.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Article Spinner\", \"desc\": \"Rewrites a given article using synonyms and syntax changes to create a new, unique version.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Topic Generator\", \"desc\": \"Generates a list of relevant topics or ideas based on a given input.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio-to-Image\", \"desc\": \"Generates an image that visually represents a given audio, such as a waveform or spectrogram.\", \"input-type\": [\"audio\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image-to-Video\", \"desc\": \"Creates a slideshow video using two input images.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video-to-Audio\", \"desc\": \"Extracts the audio track from a given video file.\", \"input-type\": [\"video\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Video-to-Image\", \"desc\": \"Extracts a still image from a given video.\", \"input-type\": [\"video\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Stitcher\", \"desc\": \"Stitches together two input images to create a panorama or collage.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Colorizer\", \"desc\": \"Adds color to a black and white input image using deep learning techniques.\", \"input-type\": [\"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Style Transfer\", \"desc\": \"Applies the visual style of one image (style) to the content of another image (content) using neural style transfer techniques.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Video Stabilizer\", \"desc\": \"Stabilizes a shaky input video to produce a smoother output video.\", \"input-type\": [\"video\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Speed Changer\", \"desc\": \"Adjusts the playback speed of a given video according to human instruction, either speeding it up or slowing it down.\", \"input-type\": [\"video\", \"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Synchronization\", \"desc\": \"Synchronizes the timing of an existing voiceover or audio file with the visuals of a given video.\", \"input-type\": [\"video\", \"audio\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Voiceover\", \"desc\": \"Adds a voiceover to a given video using a provided script or text.\", \"input-type\": [\"video\", \"text\"], \"output-type\": [\"video\"]}\n\n        \n# GOAL #: Based on the above tools, I want you generate task steps and task nodes to solve the # USER REQUEST #. \n        The format must in a strict JSON format, like: {\"task_steps\": [one or more concrete steps, format as Step x: step description], \"task_nodes\": [{\"task\": \"tool name must be from # TASK LIST #\", \"arguments\": [ a concise list of arguments for the tool. Either original text, or user-mentioned filename, or tag '<node-j>' (start from 0) to refer to the output of the j-th node. ]}], \"task_links\": [{\"source\": \"task name i\", \"target\": \"task name j\"}]} \n        \n        # REQUIREMENTS #: \n        1. the generated task steps and task nodes can resolve the given user request # USER REQUEST # perfectly. Task name must be selected from # TASK LIST #;\n\n        2. the task steps should strictly aligned with the task nodes, and the number of task steps should be same with the task nodes;\n\n        3. the dependencies among task steps should align with the argument dependencies of the task nodes;\n\n        4. the tool arguments should be align with the input-type field of # TASK LIST #;\n\n        5. The task links (task_links) should reflect the temporal dependencies among task nodes, i.e. the order in which the APIs are invoked;\n\n        \nHere are provided examples for your reference.\n\n# EXAMPLE #:\n# USER REQUEST #: Please create a panorama using two images 'example1.jpg' and 'example2.jpg'.\n# RESULT #: {\"task_steps\": [\"Step 1: Use Image Stitcher to stitch together two images.\"], \"task_nodes\": [{\"task\": \"Image Stitcher\", \"arguments\": [\"example1.jpg\", \"example2.jpg\"]}], \"task_links\": []}\n    \n\n\n    # USER REQUEST #: I have an example.mp4 video file with a speech that I would like to transcribe into text, paraphrase the transcribed text while maintaining the original meaning, and then turn that paraphrased text into an audio file. Finally, I want to merge the generated audio file with another example.wav audio file.\n    now please generate your result in a strict JSON format:\n    # RESULT #:\n\n    Below is an example of step-by-step tool calls for planning a task to decompose a complex request into sub-tasks:\n\n    ```json\n    [\n    {\"Step 1\": \"Call tool 1 with input: 'input 1 name and content' and output: 'output 1 name and content'\"}\n    {\"Step 2\": \"Call tool 2 with input: 'input 2 name and content' and output: 'output 2 name and content'\"}\n    {\"Step 3\": \"Finish\"}\n    ]\n    ```\n    Based on this example, generate step-by-step tool calls to solve the given problem by breaking it down into sub-tasks and forming a connected path.\n\n    -----Tool Calls-----\n    \n", "value": 0.0}, "3": {"state": "\n    You are tasked with breaking down a complex user request into solvable sub-tasks by creating a task plan.\n\n    Problem Description:\n\n    # TASK LIST #:\n{\"id\": \"Image Downloader\", \"desc\": \"Downloads an image from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"image\"]}\n{\"id\": \"Video Downloader\", \"desc\": \"Downloads a video from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"video\"]}\n{\"id\": \"Audio Downloader\", \"desc\": \"Downloads an audio file from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Text Downloader\", \"desc\": \"Downloads the text content from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Search\", \"desc\": \"Searches for a specific text or keyword on the internet.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Image Search\", \"desc\": \"Searches for images on the internet based on a given query.\", \"input-type\": [\"text\"], \"output-type\": [\"Image\"]}\n{\"id\": \"Image Search (by Image)\", \"desc\": \"Performs a similar image search using an input image.\", \"input-type\": [\"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"URL Extractor\", \"desc\": \"Extracts URL from text\", \"input-type\": [\"text\"], \"output-type\": [\"url\"]}\n{\"id\": \"Video Search\", \"desc\": \"Searches for videos on the internet based on a given query.\", \"input-type\": [\"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Text-to-Image\", \"desc\": \"Generates an image based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"image\"]}\n{\"id\": \"Text-to-Video\", \"desc\": \"Generates a video based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Text-to-Audio\", \"desc\": \"Generates an audio file based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Image-to-Text\", \"desc\": \"Extracts text from an input image using Optical Character Recognition (OCR).\", \"input-type\": [\"image\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio-to-Text\", \"desc\": \"Transcribes speech from an audio file into text.\", \"input-type\": [\"audio\"], \"output-type\": [\"text\"]}\n{\"id\": \"Video-to-Text\", \"desc\": \"Transcribes speech from a video file into text.\", \"input-type\": [\"video\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio Noise Reduction\", \"desc\": \"Reduces background noise or unwanted sounds from a given audio file.\", \"input-type\": [\"audio\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Audio Effects\", \"desc\": \"Applies various audio effects to a given audio file according to human instruction, such as reverb, chorus, or equalization.\", \"input-type\": [\"audio\", \"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Audio Splicer\", \"desc\": \"Combines two audio files into a single output file.\", \"input-type\": [\"audio\", \"audio\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Voice Changer\", \"desc\": \"Modifies the characteristics of a recorded voice according to human instruction, such as tone, pitch, or gender.\", \"input-type\": [\"audio\", \"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Text Summarizer\", \"desc\": \"Summarizes a given text into a shorter version while retaining the main points.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Translator\", \"desc\": \"Translates a given text from one language to english.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Sentiment Analysis\", \"desc\": \"Analyzes the sentiment of a given text, identifying if it is positive, negative, or neutral.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Grammar Checker\", \"desc\": \"Checks a given text for grammatical errors and suggests corrections.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Simplifier\", \"desc\": \"Rewrites a given text in a simpler and more understandable manner.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Expander\", \"desc\": \"Expands a given short text into a more detailed and descriptive version.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Keyword Extractor\", \"desc\": \"Extracts the most important keywords and phrases from a given text.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Paraphraser\", \"desc\": \"Rewrites a given text using different words while maintaining its original meaning.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Article Spinner\", \"desc\": \"Rewrites a given article using synonyms and syntax changes to create a new, unique version.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Topic Generator\", \"desc\": \"Generates a list of relevant topics or ideas based on a given input.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio-to-Image\", \"desc\": \"Generates an image that visually represents a given audio, such as a waveform or spectrogram.\", \"input-type\": [\"audio\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image-to-Video\", \"desc\": \"Creates a slideshow video using two input images.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video-to-Audio\", \"desc\": \"Extracts the audio track from a given video file.\", \"input-type\": [\"video\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Video-to-Image\", \"desc\": \"Extracts a still image from a given video.\", \"input-type\": [\"video\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Stitcher\", \"desc\": \"Stitches together two input images to create a panorama or collage.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Colorizer\", \"desc\": \"Adds color to a black and white input image using deep learning techniques.\", \"input-type\": [\"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Style Transfer\", \"desc\": \"Applies the visual style of one image (style) to the content of another image (content) using neural style transfer techniques.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Video Stabilizer\", \"desc\": \"Stabilizes a shaky input video to produce a smoother output video.\", \"input-type\": [\"video\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Speed Changer\", \"desc\": \"Adjusts the playback speed of a given video according to human instruction, either speeding it up or slowing it down.\", \"input-type\": [\"video\", \"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Synchronization\", \"desc\": \"Synchronizes the timing of an existing voiceover or audio file with the visuals of a given video.\", \"input-type\": [\"video\", \"audio\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Voiceover\", \"desc\": \"Adds a voiceover to a given video using a provided script or text.\", \"input-type\": [\"video\", \"text\"], \"output-type\": [\"video\"]}\n\n        \n# GOAL #: Based on the above tools, I want you generate task steps and task nodes to solve the # USER REQUEST #. \n        The format must in a strict JSON format, like: {\"task_steps\": [one or more concrete steps, format as Step x: step description], \"task_nodes\": [{\"task\": \"tool name must be from # TASK LIST #\", \"arguments\": [ a concise list of arguments for the tool. Either original text, or user-mentioned filename, or tag '<node-j>' (start from 0) to refer to the output of the j-th node. ]}], \"task_links\": [{\"source\": \"task name i\", \"target\": \"task name j\"}]} \n        \n        # REQUIREMENTS #: \n        1. the generated task steps and task nodes can resolve the given user request # USER REQUEST # perfectly. Task name must be selected from # TASK LIST #;\n\n        2. the task steps should strictly aligned with the task nodes, and the number of task steps should be same with the task nodes;\n\n        3. the dependencies among task steps should align with the argument dependencies of the task nodes;\n\n        4. the tool arguments should be align with the input-type field of # TASK LIST #;\n\n        5. The task links (task_links) should reflect the temporal dependencies among task nodes, i.e. the order in which the APIs are invoked;\n\n        \nHere are provided examples for your reference.\n\n# EXAMPLE #:\n# USER REQUEST #: Please create a panorama using two images 'example1.jpg' and 'example2.jpg'.\n# RESULT #: {\"task_steps\": [\"Step 1: Use Image Stitcher to stitch together two images.\"], \"task_nodes\": [{\"task\": \"Image Stitcher\", \"arguments\": [\"example1.jpg\", \"example2.jpg\"]}], \"task_links\": []}\n    \n\n\n    # USER REQUEST #: I have an example.mp4 video file with a speech that I would like to transcribe into text, paraphrase the transcribed text while maintaining the original meaning, and then turn that paraphrased text into an audio file. Finally, I want to merge the generated audio file with another example.wav audio file.\n    now please generate your result in a strict JSON format:\n    # RESULT #:\n\n    Below is an example of step-by-step tool calls for planning a task to decompose a complex request into sub-tasks:\n\n    ```json\n    [\n    {\"Step 1\": \"Call tool 1 with input: 'input 1 name and content' and output: 'output 1 name and content'\"}\n    {\"Step 2\": \"Call tool 2 with input: 'input 2 name and content' and output: 'output 2 name and content'\"}\n    {\"Step 3\": \"Finish\"}\n    ]\n    ```\n    Based on this example, generate step-by-step tool calls to solve the given problem by breaking it down into sub-tasks and forming a connected path.\n\n    -----Tool Calls-----\n    \n", "value": 0.0}, "4": {"state": "\n    You are tasked with breaking down a complex user request into solvable sub-tasks by creating a task plan.\n\n    Problem Description:\n\n    # TASK LIST #:\n{\"id\": \"Image Downloader\", \"desc\": \"Downloads an image from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"image\"]}\n{\"id\": \"Video Downloader\", \"desc\": \"Downloads a video from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"video\"]}\n{\"id\": \"Audio Downloader\", \"desc\": \"Downloads an audio file from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Text Downloader\", \"desc\": \"Downloads the text content from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Search\", \"desc\": \"Searches for a specific text or keyword on the internet.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Image Search\", \"desc\": \"Searches for images on the internet based on a given query.\", \"input-type\": [\"text\"], \"output-type\": [\"Image\"]}\n{\"id\": \"Image Search (by Image)\", \"desc\": \"Performs a similar image search using an input image.\", \"input-type\": [\"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"URL Extractor\", \"desc\": \"Extracts URL from text\", \"input-type\": [\"text\"], \"output-type\": [\"url\"]}\n{\"id\": \"Video Search\", \"desc\": \"Searches for videos on the internet based on a given query.\", \"input-type\": [\"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Text-to-Image\", \"desc\": \"Generates an image based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"image\"]}\n{\"id\": \"Text-to-Video\", \"desc\": \"Generates a video based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Text-to-Audio\", \"desc\": \"Generates an audio file based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Image-to-Text\", \"desc\": \"Extracts text from an input image using Optical Character Recognition (OCR).\", \"input-type\": [\"image\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio-to-Text\", \"desc\": \"Transcribes speech from an audio file into text.\", \"input-type\": [\"audio\"], \"output-type\": [\"text\"]}\n{\"id\": \"Video-to-Text\", \"desc\": \"Transcribes speech from a video file into text.\", \"input-type\": [\"video\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio Noise Reduction\", \"desc\": \"Reduces background noise or unwanted sounds from a given audio file.\", \"input-type\": [\"audio\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Audio Effects\", \"desc\": \"Applies various audio effects to a given audio file according to human instruction, such as reverb, chorus, or equalization.\", \"input-type\": [\"audio\", \"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Audio Splicer\", \"desc\": \"Combines two audio files into a single output file.\", \"input-type\": [\"audio\", \"audio\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Voice Changer\", \"desc\": \"Modifies the characteristics of a recorded voice according to human instruction, such as tone, pitch, or gender.\", \"input-type\": [\"audio\", \"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Text Summarizer\", \"desc\": \"Summarizes a given text into a shorter version while retaining the main points.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Translator\", \"desc\": \"Translates a given text from one language to english.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Sentiment Analysis\", \"desc\": \"Analyzes the sentiment of a given text, identifying if it is positive, negative, or neutral.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Grammar Checker\", \"desc\": \"Checks a given text for grammatical errors and suggests corrections.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Simplifier\", \"desc\": \"Rewrites a given text in a simpler and more understandable manner.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Expander\", \"desc\": \"Expands a given short text into a more detailed and descriptive version.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Keyword Extractor\", \"desc\": \"Extracts the most important keywords and phrases from a given text.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Paraphraser\", \"desc\": \"Rewrites a given text using different words while maintaining its original meaning.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Article Spinner\", \"desc\": \"Rewrites a given article using synonyms and syntax changes to create a new, unique version.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Topic Generator\", \"desc\": \"Generates a list of relevant topics or ideas based on a given input.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio-to-Image\", \"desc\": \"Generates an image that visually represents a given audio, such as a waveform or spectrogram.\", \"input-type\": [\"audio\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image-to-Video\", \"desc\": \"Creates a slideshow video using two input images.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video-to-Audio\", \"desc\": \"Extracts the audio track from a given video file.\", \"input-type\": [\"video\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Video-to-Image\", \"desc\": \"Extracts a still image from a given video.\", \"input-type\": [\"video\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Stitcher\", \"desc\": \"Stitches together two input images to create a panorama or collage.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Colorizer\", \"desc\": \"Adds color to a black and white input image using deep learning techniques.\", \"input-type\": [\"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Style Transfer\", \"desc\": \"Applies the visual style of one image (style) to the content of another image (content) using neural style transfer techniques.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Video Stabilizer\", \"desc\": \"Stabilizes a shaky input video to produce a smoother output video.\", \"input-type\": [\"video\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Speed Changer\", \"desc\": \"Adjusts the playback speed of a given video according to human instruction, either speeding it up or slowing it down.\", \"input-type\": [\"video\", \"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Synchronization\", \"desc\": \"Synchronizes the timing of an existing voiceover or audio file with the visuals of a given video.\", \"input-type\": [\"video\", \"audio\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Voiceover\", \"desc\": \"Adds a voiceover to a given video using a provided script or text.\", \"input-type\": [\"video\", \"text\"], \"output-type\": [\"video\"]}\n\n        \n# GOAL #: Based on the above tools, I want you generate task steps and task nodes to solve the # USER REQUEST #. \n        The format must in a strict JSON format, like: {\"task_steps\": [one or more concrete steps, format as Step x: step description], \"task_nodes\": [{\"task\": \"tool name must be from # TASK LIST #\", \"arguments\": [ a concise list of arguments for the tool. Either original text, or user-mentioned filename, or tag '<node-j>' (start from 0) to refer to the output of the j-th node. ]}], \"task_links\": [{\"source\": \"task name i\", \"target\": \"task name j\"}]} \n        \n        # REQUIREMENTS #: \n        1. the generated task steps and task nodes can resolve the given user request # USER REQUEST # perfectly. Task name must be selected from # TASK LIST #;\n\n        2. the task steps should strictly aligned with the task nodes, and the number of task steps should be same with the task nodes;\n\n        3. the dependencies among task steps should align with the argument dependencies of the task nodes;\n\n        4. the tool arguments should be align with the input-type field of # TASK LIST #;\n\n        5. The task links (task_links) should reflect the temporal dependencies among task nodes, i.e. the order in which the APIs are invoked;\n\n        \nHere are provided examples for your reference.\n\n# EXAMPLE #:\n# USER REQUEST #: Please create a panorama using two images 'example1.jpg' and 'example2.jpg'.\n# RESULT #: {\"task_steps\": [\"Step 1: Use Image Stitcher to stitch together two images.\"], \"task_nodes\": [{\"task\": \"Image Stitcher\", \"arguments\": [\"example1.jpg\", \"example2.jpg\"]}], \"task_links\": []}\n    \n\n\n    # USER REQUEST #: I have an example.mp4 video file with a speech that I would like to transcribe into text, paraphrase the transcribed text while maintaining the original meaning, and then turn that paraphrased text into an audio file. Finally, I want to merge the generated audio file with another example.wav audio file.\n    now please generate your result in a strict JSON format:\n    # RESULT #:\n\n    Below is an example of step-by-step tool calls for planning a task to decompose a complex request into sub-tasks:\n\n    ```json\n    [\n    {\"Step 1\": \"Call tool 1 with input: 'input 1 name and content' and output: 'output 1 name and content'\"}\n    {\"Step 2\": \"Call tool 2 with input: 'input 2 name and content' and output: 'output 2 name and content'\"}\n    {\"Step 3\": \"Finish\"}\n    ]\n    ```\n    Based on this example, generate step-by-step tool calls to solve the given problem by breaking it down into sub-tasks and forming a connected path.\n\n    -----Tool Calls-----\n    \nTool Call of Step 2:Call Text-to-Audio tool with input: 'input text' and output: 'output audio'\n", "value": 0.0}}]
[[[0, 0], [0, 1], [0, 2], [1, 3], [1, 4], [1, 5], [3, 6], [3, 7], [3, 8], [2, 9], [2, 10], [2, 11], [4, 12], [4, 13], [4, 14]], [[0, 1], [1, 3], [2, 2], [3, 4]], {"0": {"ucb": 1.9915149877893594, "p_ucb": 1.8223634889654234, "var_p_ucb": 2.0012425802295364, "action": "Tool Call of Step 1:Call Image Colorizer tool with input: 'example.jpg' and output: '<node-0>'\n", "prob": 0.9}, "1": {"ucb": 2.8372724819090394, "p_ucb": 2.3298179854372316, "var_p_ucb": 2.568323440456048, "action": "Tool Call of Step 1:Call Text-to-Image tool with input: '<node-0>' and output: 'output1.jpg'\n", "prob": 0.8}, "2": {"ucb": 2.8372724819090394, "p_ucb": 2.583545233673135, "var_p_ucb": 2.8518638705693045, "action": "Tool Call of Step 1:Call Image Stitcher tool with input: 'output1.jpg', 'example2.jpg' and output: 'output2.jpg'\n", "prob": 0.9}, "3": {"ucb": 2.39629414748641, "p_ucb": 2.39629414748641, "var_p_ucb": 2.5726303426294415, "action": "\n", "prob": 1.0}, "4": {"ucb": 4.19258829587282, "p_ucb": 4.19258829587282, "var_p_ucb": 4.5452606861588825, "action": "\n", "prob": 1.0}, "5": {"ucb": 4.19258829587282, "p_ucb": 4.19258829587282, "var_p_ucb": 4.5452606861588825, "action": "\n", "prob": 1.0}, "6": {"ucb": 3.3302184446307908, "p_ucb": 2.9971966001677117, "var_p_ucb": 3.193785920534579, "action": "Tool Call of Step 2:Call Text-to-Image tool with input: '<node-0>' and output: 'output1.jpg'\n", "prob": 0.9}, "7": {"ucb": 3.3302184446307908, "p_ucb": 2.830685677936172, "var_p_ucb": 3.0163533693937685, "action": "Tool Call of Step 2:Call Image Colorizer tool with input: 'output1.jpg' and output: 'output2.jpg'\n", "prob": 0.85}, "8": {"ucb": 3.3302184446307908, "p_ucb": 2.6641747557046327, "var_p_ucb": 2.8389208182529586, "action": "", "prob": 0.8}, "9": {"ucb": 3.3302184446307908, "p_ucb": 3.3302184446307908, "var_p_ucb": 3.5486510228161983, "action": "\n", "prob": 1.0}, "10": {"ucb": 3.3302184446307908, "p_ucb": 3.3302184446307908, "var_p_ucb": 3.5486510228161983, "action": "\n", "prob": 1.0}, "11": {"ucb": 3.3302184446307908, "p_ucb": 3.3302184446307908, "var_p_ucb": 3.5486510228161983, "action": "\n", "prob": 1.0}, "12": {"ucb": 3.3302184446307908, "p_ucb": 3.3302184446307908, "var_p_ucb": 3.5486510228161983, "action": "\n", "prob": 1.0}, "13": {"ucb": 3.3302184446307908, "p_ucb": 3.3302184446307908, "var_p_ucb": 3.5486510228161983, "action": "\n", "prob": 1.0}, "14": {"ucb": 3.3302184446307908, "p_ucb": 3.3302184446307908, "var_p_ucb": 3.5486510228161983, "action": "\n", "prob": 1.0}}, {"0": {"state": "\n    You are tasked with breaking down a complex user request into solvable sub-tasks by creating a task plan.\n\n    Problem Description:\n\n    # TASK LIST #:\n{\"id\": \"Image Downloader\", \"desc\": \"Downloads an image from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"image\"]}\n{\"id\": \"Video Downloader\", \"desc\": \"Downloads a video from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"video\"]}\n{\"id\": \"Audio Downloader\", \"desc\": \"Downloads an audio file from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Text Downloader\", \"desc\": \"Downloads the text content from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Search\", \"desc\": \"Searches for a specific text or keyword on the internet.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Image Search\", \"desc\": \"Searches for images on the internet based on a given query.\", \"input-type\": [\"text\"], \"output-type\": [\"Image\"]}\n{\"id\": \"Image Search (by Image)\", \"desc\": \"Performs a similar image search using an input image.\", \"input-type\": [\"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"URL Extractor\", \"desc\": \"Extracts URL from text\", \"input-type\": [\"text\"], \"output-type\": [\"url\"]}\n{\"id\": \"Video Search\", \"desc\": \"Searches for videos on the internet based on a given query.\", \"input-type\": [\"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Text-to-Image\", \"desc\": \"Generates an image based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"image\"]}\n{\"id\": \"Text-to-Video\", \"desc\": \"Generates a video based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Text-to-Audio\", \"desc\": \"Generates an audio file based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Image-to-Text\", \"desc\": \"Extracts text from an input image using Optical Character Recognition (OCR).\", \"input-type\": [\"image\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio-to-Text\", \"desc\": \"Transcribes speech from an audio file into text.\", \"input-type\": [\"audio\"], \"output-type\": [\"text\"]}\n{\"id\": \"Video-to-Text\", \"desc\": \"Transcribes speech from a video file into text.\", \"input-type\": [\"video\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio Noise Reduction\", \"desc\": \"Reduces background noise or unwanted sounds from a given audio file.\", \"input-type\": [\"audio\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Audio Effects\", \"desc\": \"Applies various audio effects to a given audio file according to human instruction, such as reverb, chorus, or equalization.\", \"input-type\": [\"audio\", \"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Audio Splicer\", \"desc\": \"Combines two audio files into a single output file.\", \"input-type\": [\"audio\", \"audio\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Voice Changer\", \"desc\": \"Modifies the characteristics of a recorded voice according to human instruction, such as tone, pitch, or gender.\", \"input-type\": [\"audio\", \"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Text Summarizer\", \"desc\": \"Summarizes a given text into a shorter version while retaining the main points.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Translator\", \"desc\": \"Translates a given text from one language to english.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Sentiment Analysis\", \"desc\": \"Analyzes the sentiment of a given text, identifying if it is positive, negative, or neutral.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Grammar Checker\", \"desc\": \"Checks a given text for grammatical errors and suggests corrections.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Simplifier\", \"desc\": \"Rewrites a given text in a simpler and more understandable manner.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Expander\", \"desc\": \"Expands a given short text into a more detailed and descriptive version.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Keyword Extractor\", \"desc\": \"Extracts the most important keywords and phrases from a given text.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Paraphraser\", \"desc\": \"Rewrites a given text using different words while maintaining its original meaning.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Article Spinner\", \"desc\": \"Rewrites a given article using synonyms and syntax changes to create a new, unique version.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Topic Generator\", \"desc\": \"Generates a list of relevant topics or ideas based on a given input.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio-to-Image\", \"desc\": \"Generates an image that visually represents a given audio, such as a waveform or spectrogram.\", \"input-type\": [\"audio\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image-to-Video\", \"desc\": \"Creates a slideshow video using two input images.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video-to-Audio\", \"desc\": \"Extracts the audio track from a given video file.\", \"input-type\": [\"video\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Video-to-Image\", \"desc\": \"Extracts a still image from a given video.\", \"input-type\": [\"video\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Stitcher\", \"desc\": \"Stitches together two input images to create a panorama or collage.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Colorizer\", \"desc\": \"Adds color to a black and white input image using deep learning techniques.\", \"input-type\": [\"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Style Transfer\", \"desc\": \"Applies the visual style of one image (style) to the content of another image (content) using neural style transfer techniques.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Video Stabilizer\", \"desc\": \"Stabilizes a shaky input video to produce a smoother output video.\", \"input-type\": [\"video\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Speed Changer\", \"desc\": \"Adjusts the playback speed of a given video according to human instruction, either speeding it up or slowing it down.\", \"input-type\": [\"video\", \"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Synchronization\", \"desc\": \"Synchronizes the timing of an existing voiceover or audio file with the visuals of a given video.\", \"input-type\": [\"video\", \"audio\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Voiceover\", \"desc\": \"Adds a voiceover to a given video using a provided script or text.\", \"input-type\": [\"video\", \"text\"], \"output-type\": [\"video\"]}\n\n        \n# GOAL #: Based on the above tools, I want you generate task steps and task nodes to solve the # USER REQUEST #. \n        The format must in a strict JSON format, like: {\"task_steps\": [one or more concrete steps, format as Step x: step description], \"task_nodes\": [{\"task\": \"tool name must be from # TASK LIST #\", \"arguments\": [ a concise list of arguments for the tool. Either original text, or user-mentioned filename, or tag '<node-j>' (start from 0) to refer to the output of the j-th node. ]}], \"task_links\": [{\"source\": \"task name i\", \"target\": \"task name j\"}]} \n        \n        # REQUIREMENTS #: \n        1. the generated task steps and task nodes can resolve the given user request # USER REQUEST # perfectly. Task name must be selected from # TASK LIST #;\n\n        2. the task steps should strictly aligned with the task nodes, and the number of task steps should be same with the task nodes;\n\n        3. the dependencies among task steps should align with the argument dependencies of the task nodes;\n\n        4. the tool arguments should be align with the input-type field of # TASK LIST #;\n\n        5. The task links (task_links) should reflect the temporal dependencies among task nodes, i.e. the order in which the APIs are invoked;\n\n        \nHere are provided examples for your reference.\n\n# EXAMPLE #:\n# USER REQUEST #: Please create a panorama using two images 'example1.jpg' and 'example2.jpg'.\n# RESULT #: {\"task_steps\": [\"Step 1: Use Image Stitcher to stitch together two images.\"], \"task_nodes\": [{\"task\": \"Image Stitcher\", \"arguments\": [\"example1.jpg\", \"example2.jpg\"]}], \"task_links\": []}\n    \n\n\n    # USER REQUEST #: I have a black and white image named 'example.jpg'. I would like to add color to this image using deep learning techniques.\n    now please generate your result in a strict JSON format:\n    # RESULT #:\n\n    Below is an example of step-by-step tool calls for planning a task to decompose a complex request into sub-tasks:\n\n    ```json\n    [\n    {\"Step 1\": \"Call tool 1 with input: 'input 1 name and content' and output: 'output 1 name and content'\"}\n    {\"Step 2\": \"Call tool 2 with input: 'input 2 name and content' and output: 'output 2 name and content'\"}\n    {\"Step 3\": \"Finish\"}\n    ]\n    ```\n    Based on this example, generate step-by-step tool calls to solve the given problem by breaking it down into sub-tasks and forming a connected path.\n\n    -----Tool Calls-----\n    ", "value": null}, "1": {"state": "\n    You are tasked with breaking down a complex user request into solvable sub-tasks by creating a task plan.\n\n    Problem Description:\n\n    # TASK LIST #:\n{\"id\": \"Image Downloader\", \"desc\": \"Downloads an image from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"image\"]}\n{\"id\": \"Video Downloader\", \"desc\": \"Downloads a video from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"video\"]}\n{\"id\": \"Audio Downloader\", \"desc\": \"Downloads an audio file from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Text Downloader\", \"desc\": \"Downloads the text content from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Search\", \"desc\": \"Searches for a specific text or keyword on the internet.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Image Search\", \"desc\": \"Searches for images on the internet based on a given query.\", \"input-type\": [\"text\"], \"output-type\": [\"Image\"]}\n{\"id\": \"Image Search (by Image)\", \"desc\": \"Performs a similar image search using an input image.\", \"input-type\": [\"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"URL Extractor\", \"desc\": \"Extracts URL from text\", \"input-type\": [\"text\"], \"output-type\": [\"url\"]}\n{\"id\": \"Video Search\", \"desc\": \"Searches for videos on the internet based on a given query.\", \"input-type\": [\"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Text-to-Image\", \"desc\": \"Generates an image based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"image\"]}\n{\"id\": \"Text-to-Video\", \"desc\": \"Generates a video based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Text-to-Audio\", \"desc\": \"Generates an audio file based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Image-to-Text\", \"desc\": \"Extracts text from an input image using Optical Character Recognition (OCR).\", \"input-type\": [\"image\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio-to-Text\", \"desc\": \"Transcribes speech from an audio file into text.\", \"input-type\": [\"audio\"], \"output-type\": [\"text\"]}\n{\"id\": \"Video-to-Text\", \"desc\": \"Transcribes speech from a video file into text.\", \"input-type\": [\"video\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio Noise Reduction\", \"desc\": \"Reduces background noise or unwanted sounds from a given audio file.\", \"input-type\": [\"audio\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Audio Effects\", \"desc\": \"Applies various audio effects to a given audio file according to human instruction, such as reverb, chorus, or equalization.\", \"input-type\": [\"audio\", \"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Audio Splicer\", \"desc\": \"Combines two audio files into a single output file.\", \"input-type\": [\"audio\", \"audio\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Voice Changer\", \"desc\": \"Modifies the characteristics of a recorded voice according to human instruction, such as tone, pitch, or gender.\", \"input-type\": [\"audio\", \"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Text Summarizer\", \"desc\": \"Summarizes a given text into a shorter version while retaining the main points.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Translator\", \"desc\": \"Translates a given text from one language to english.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Sentiment Analysis\", \"desc\": \"Analyzes the sentiment of a given text, identifying if it is positive, negative, or neutral.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Grammar Checker\", \"desc\": \"Checks a given text for grammatical errors and suggests corrections.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Simplifier\", \"desc\": \"Rewrites a given text in a simpler and more understandable manner.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Expander\", \"desc\": \"Expands a given short text into a more detailed and descriptive version.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Keyword Extractor\", \"desc\": \"Extracts the most important keywords and phrases from a given text.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Paraphraser\", \"desc\": \"Rewrites a given text using different words while maintaining its original meaning.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Article Spinner\", \"desc\": \"Rewrites a given article using synonyms and syntax changes to create a new, unique version.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Topic Generator\", \"desc\": \"Generates a list of relevant topics or ideas based on a given input.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio-to-Image\", \"desc\": \"Generates an image that visually represents a given audio, such as a waveform or spectrogram.\", \"input-type\": [\"audio\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image-to-Video\", \"desc\": \"Creates a slideshow video using two input images.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video-to-Audio\", \"desc\": \"Extracts the audio track from a given video file.\", \"input-type\": [\"video\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Video-to-Image\", \"desc\": \"Extracts a still image from a given video.\", \"input-type\": [\"video\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Stitcher\", \"desc\": \"Stitches together two input images to create a panorama or collage.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Colorizer\", \"desc\": \"Adds color to a black and white input image using deep learning techniques.\", \"input-type\": [\"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Style Transfer\", \"desc\": \"Applies the visual style of one image (style) to the content of another image (content) using neural style transfer techniques.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Video Stabilizer\", \"desc\": \"Stabilizes a shaky input video to produce a smoother output video.\", \"input-type\": [\"video\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Speed Changer\", \"desc\": \"Adjusts the playback speed of a given video according to human instruction, either speeding it up or slowing it down.\", \"input-type\": [\"video\", \"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Synchronization\", \"desc\": \"Synchronizes the timing of an existing voiceover or audio file with the visuals of a given video.\", \"input-type\": [\"video\", \"audio\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Voiceover\", \"desc\": \"Adds a voiceover to a given video using a provided script or text.\", \"input-type\": [\"video\", \"text\"], \"output-type\": [\"video\"]}\n\n        \n# GOAL #: Based on the above tools, I want you generate task steps and task nodes to solve the # USER REQUEST #. \n        The format must in a strict JSON format, like: {\"task_steps\": [one or more concrete steps, format as Step x: step description], \"task_nodes\": [{\"task\": \"tool name must be from # TASK LIST #\", \"arguments\": [ a concise list of arguments for the tool. Either original text, or user-mentioned filename, or tag '<node-j>' (start from 0) to refer to the output of the j-th node. ]}], \"task_links\": [{\"source\": \"task name i\", \"target\": \"task name j\"}]} \n        \n        # REQUIREMENTS #: \n        1. the generated task steps and task nodes can resolve the given user request # USER REQUEST # perfectly. Task name must be selected from # TASK LIST #;\n\n        2. the task steps should strictly aligned with the task nodes, and the number of task steps should be same with the task nodes;\n\n        3. the dependencies among task steps should align with the argument dependencies of the task nodes;\n\n        4. the tool arguments should be align with the input-type field of # TASK LIST #;\n\n        5. The task links (task_links) should reflect the temporal dependencies among task nodes, i.e. the order in which the APIs are invoked;\n\n        \nHere are provided examples for your reference.\n\n# EXAMPLE #:\n# USER REQUEST #: Please create a panorama using two images 'example1.jpg' and 'example2.jpg'.\n# RESULT #: {\"task_steps\": [\"Step 1: Use Image Stitcher to stitch together two images.\"], \"task_nodes\": [{\"task\": \"Image Stitcher\", \"arguments\": [\"example1.jpg\", \"example2.jpg\"]}], \"task_links\": []}\n    \n\n\n    # USER REQUEST #: I have a black and white image named 'example.jpg'. I would like to add color to this image using deep learning techniques.\n    now please generate your result in a strict JSON format:\n    # RESULT #:\n\n    Below is an example of step-by-step tool calls for planning a task to decompose a complex request into sub-tasks:\n\n    ```json\n    [\n    {\"Step 1\": \"Call tool 1 with input: 'input 1 name and content' and output: 'output 1 name and content'\"}\n    {\"Step 2\": \"Call tool 2 with input: 'input 2 name and content' and output: 'output 2 name and content'\"}\n    {\"Step 3\": \"Finish\"}\n    ]\n    ```\n    Based on this example, generate step-by-step tool calls to solve the given problem by breaking it down into sub-tasks and forming a connected path.\n\n    -----Tool Calls-----\n    Tool Call of Step 1:Call Image Colorizer tool with input: 'example.jpg' and output: '<node-0>'\n", "value": 0.33333333283333333}, "3": {"state": "\n    You are tasked with breaking down a complex user request into solvable sub-tasks by creating a task plan.\n\n    Problem Description:\n\n    # TASK LIST #:\n{\"id\": \"Image Downloader\", \"desc\": \"Downloads an image from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"image\"]}\n{\"id\": \"Video Downloader\", \"desc\": \"Downloads a video from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"video\"]}\n{\"id\": \"Audio Downloader\", \"desc\": \"Downloads an audio file from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Text Downloader\", \"desc\": \"Downloads the text content from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Search\", \"desc\": \"Searches for a specific text or keyword on the internet.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Image Search\", \"desc\": \"Searches for images on the internet based on a given query.\", \"input-type\": [\"text\"], \"output-type\": [\"Image\"]}\n{\"id\": \"Image Search (by Image)\", \"desc\": \"Performs a similar image search using an input image.\", \"input-type\": [\"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"URL Extractor\", \"desc\": \"Extracts URL from text\", \"input-type\": [\"text\"], \"output-type\": [\"url\"]}\n{\"id\": \"Video Search\", \"desc\": \"Searches for videos on the internet based on a given query.\", \"input-type\": [\"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Text-to-Image\", \"desc\": \"Generates an image based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"image\"]}\n{\"id\": \"Text-to-Video\", \"desc\": \"Generates a video based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Text-to-Audio\", \"desc\": \"Generates an audio file based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Image-to-Text\", \"desc\": \"Extracts text from an input image using Optical Character Recognition (OCR).\", \"input-type\": [\"image\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio-to-Text\", \"desc\": \"Transcribes speech from an audio file into text.\", \"input-type\": [\"audio\"], \"output-type\": [\"text\"]}\n{\"id\": \"Video-to-Text\", \"desc\": \"Transcribes speech from a video file into text.\", \"input-type\": [\"video\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio Noise Reduction\", \"desc\": \"Reduces background noise or unwanted sounds from a given audio file.\", \"input-type\": [\"audio\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Audio Effects\", \"desc\": \"Applies various audio effects to a given audio file according to human instruction, such as reverb, chorus, or equalization.\", \"input-type\": [\"audio\", \"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Audio Splicer\", \"desc\": \"Combines two audio files into a single output file.\", \"input-type\": [\"audio\", \"audio\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Voice Changer\", \"desc\": \"Modifies the characteristics of a recorded voice according to human instruction, such as tone, pitch, or gender.\", \"input-type\": [\"audio\", \"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Text Summarizer\", \"desc\": \"Summarizes a given text into a shorter version while retaining the main points.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Translator\", \"desc\": \"Translates a given text from one language to english.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Sentiment Analysis\", \"desc\": \"Analyzes the sentiment of a given text, identifying if it is positive, negative, or neutral.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Grammar Checker\", \"desc\": \"Checks a given text for grammatical errors and suggests corrections.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Simplifier\", \"desc\": \"Rewrites a given text in a simpler and more understandable manner.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Expander\", \"desc\": \"Expands a given short text into a more detailed and descriptive version.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Keyword Extractor\", \"desc\": \"Extracts the most important keywords and phrases from a given text.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Paraphraser\", \"desc\": \"Rewrites a given text using different words while maintaining its original meaning.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Article Spinner\", \"desc\": \"Rewrites a given article using synonyms and syntax changes to create a new, unique version.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Topic Generator\", \"desc\": \"Generates a list of relevant topics or ideas based on a given input.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio-to-Image\", \"desc\": \"Generates an image that visually represents a given audio, such as a waveform or spectrogram.\", \"input-type\": [\"audio\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image-to-Video\", \"desc\": \"Creates a slideshow video using two input images.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video-to-Audio\", \"desc\": \"Extracts the audio track from a given video file.\", \"input-type\": [\"video\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Video-to-Image\", \"desc\": \"Extracts a still image from a given video.\", \"input-type\": [\"video\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Stitcher\", \"desc\": \"Stitches together two input images to create a panorama or collage.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Colorizer\", \"desc\": \"Adds color to a black and white input image using deep learning techniques.\", \"input-type\": [\"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Style Transfer\", \"desc\": \"Applies the visual style of one image (style) to the content of another image (content) using neural style transfer techniques.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Video Stabilizer\", \"desc\": \"Stabilizes a shaky input video to produce a smoother output video.\", \"input-type\": [\"video\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Speed Changer\", \"desc\": \"Adjusts the playback speed of a given video according to human instruction, either speeding it up or slowing it down.\", \"input-type\": [\"video\", \"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Synchronization\", \"desc\": \"Synchronizes the timing of an existing voiceover or audio file with the visuals of a given video.\", \"input-type\": [\"video\", \"audio\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Voiceover\", \"desc\": \"Adds a voiceover to a given video using a provided script or text.\", \"input-type\": [\"video\", \"text\"], \"output-type\": [\"video\"]}\n\n        \n# GOAL #: Based on the above tools, I want you generate task steps and task nodes to solve the # USER REQUEST #. \n        The format must in a strict JSON format, like: {\"task_steps\": [one or more concrete steps, format as Step x: step description], \"task_nodes\": [{\"task\": \"tool name must be from # TASK LIST #\", \"arguments\": [ a concise list of arguments for the tool. Either original text, or user-mentioned filename, or tag '<node-j>' (start from 0) to refer to the output of the j-th node. ]}], \"task_links\": [{\"source\": \"task name i\", \"target\": \"task name j\"}]} \n        \n        # REQUIREMENTS #: \n        1. the generated task steps and task nodes can resolve the given user request # USER REQUEST # perfectly. Task name must be selected from # TASK LIST #;\n\n        2. the task steps should strictly aligned with the task nodes, and the number of task steps should be same with the task nodes;\n\n        3. the dependencies among task steps should align with the argument dependencies of the task nodes;\n\n        4. the tool arguments should be align with the input-type field of # TASK LIST #;\n\n        5. The task links (task_links) should reflect the temporal dependencies among task nodes, i.e. the order in which the APIs are invoked;\n\n        \nHere are provided examples for your reference.\n\n# EXAMPLE #:\n# USER REQUEST #: Please create a panorama using two images 'example1.jpg' and 'example2.jpg'.\n# RESULT #: {\"task_steps\": [\"Step 1: Use Image Stitcher to stitch together two images.\"], \"task_nodes\": [{\"task\": \"Image Stitcher\", \"arguments\": [\"example1.jpg\", \"example2.jpg\"]}], \"task_links\": []}\n    \n\n\n    # USER REQUEST #: I have a black and white image named 'example.jpg'. I would like to add color to this image using deep learning techniques.\n    now please generate your result in a strict JSON format:\n    # RESULT #:\n\n    Below is an example of step-by-step tool calls for planning a task to decompose a complex request into sub-tasks:\n\n    ```json\n    [\n    {\"Step 1\": \"Call tool 1 with input: 'input 1 name and content' and output: 'output 1 name and content'\"}\n    {\"Step 2\": \"Call tool 2 with input: 'input 2 name and content' and output: 'output 2 name and content'\"}\n    {\"Step 3\": \"Finish\"}\n    ]\n    ```\n    Based on this example, generate step-by-step tool calls to solve the given problem by breaking it down into sub-tasks and forming a connected path.\n\n    -----Tool Calls-----\n    Tool Call of Step 1:Call Text-to-Image tool with input: '<node-0>' and output: 'output1.jpg'\n", "value": 0.33333333283333333}, "2": {"state": "\n    You are tasked with breaking down a complex user request into solvable sub-tasks by creating a task plan.\n\n    Problem Description:\n\n    # TASK LIST #:\n{\"id\": \"Image Downloader\", \"desc\": \"Downloads an image from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"image\"]}\n{\"id\": \"Video Downloader\", \"desc\": \"Downloads a video from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"video\"]}\n{\"id\": \"Audio Downloader\", \"desc\": \"Downloads an audio file from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Text Downloader\", \"desc\": \"Downloads the text content from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Search\", \"desc\": \"Searches for a specific text or keyword on the internet.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Image Search\", \"desc\": \"Searches for images on the internet based on a given query.\", \"input-type\": [\"text\"], \"output-type\": [\"Image\"]}\n{\"id\": \"Image Search (by Image)\", \"desc\": \"Performs a similar image search using an input image.\", \"input-type\": [\"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"URL Extractor\", \"desc\": \"Extracts URL from text\", \"input-type\": [\"text\"], \"output-type\": [\"url\"]}\n{\"id\": \"Video Search\", \"desc\": \"Searches for videos on the internet based on a given query.\", \"input-type\": [\"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Text-to-Image\", \"desc\": \"Generates an image based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"image\"]}\n{\"id\": \"Text-to-Video\", \"desc\": \"Generates a video based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Text-to-Audio\", \"desc\": \"Generates an audio file based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Image-to-Text\", \"desc\": \"Extracts text from an input image using Optical Character Recognition (OCR).\", \"input-type\": [\"image\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio-to-Text\", \"desc\": \"Transcribes speech from an audio file into text.\", \"input-type\": [\"audio\"], \"output-type\": [\"text\"]}\n{\"id\": \"Video-to-Text\", \"desc\": \"Transcribes speech from a video file into text.\", \"input-type\": [\"video\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio Noise Reduction\", \"desc\": \"Reduces background noise or unwanted sounds from a given audio file.\", \"input-type\": [\"audio\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Audio Effects\", \"desc\": \"Applies various audio effects to a given audio file according to human instruction, such as reverb, chorus, or equalization.\", \"input-type\": [\"audio\", \"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Audio Splicer\", \"desc\": \"Combines two audio files into a single output file.\", \"input-type\": [\"audio\", \"audio\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Voice Changer\", \"desc\": \"Modifies the characteristics of a recorded voice according to human instruction, such as tone, pitch, or gender.\", \"input-type\": [\"audio\", \"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Text Summarizer\", \"desc\": \"Summarizes a given text into a shorter version while retaining the main points.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Translator\", \"desc\": \"Translates a given text from one language to english.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Sentiment Analysis\", \"desc\": \"Analyzes the sentiment of a given text, identifying if it is positive, negative, or neutral.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Grammar Checker\", \"desc\": \"Checks a given text for grammatical errors and suggests corrections.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Simplifier\", \"desc\": \"Rewrites a given text in a simpler and more understandable manner.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Expander\", \"desc\": \"Expands a given short text into a more detailed and descriptive version.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Keyword Extractor\", \"desc\": \"Extracts the most important keywords and phrases from a given text.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Paraphraser\", \"desc\": \"Rewrites a given text using different words while maintaining its original meaning.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Article Spinner\", \"desc\": \"Rewrites a given article using synonyms and syntax changes to create a new, unique version.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Topic Generator\", \"desc\": \"Generates a list of relevant topics or ideas based on a given input.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio-to-Image\", \"desc\": \"Generates an image that visually represents a given audio, such as a waveform or spectrogram.\", \"input-type\": [\"audio\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image-to-Video\", \"desc\": \"Creates a slideshow video using two input images.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video-to-Audio\", \"desc\": \"Extracts the audio track from a given video file.\", \"input-type\": [\"video\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Video-to-Image\", \"desc\": \"Extracts a still image from a given video.\", \"input-type\": [\"video\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Stitcher\", \"desc\": \"Stitches together two input images to create a panorama or collage.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Colorizer\", \"desc\": \"Adds color to a black and white input image using deep learning techniques.\", \"input-type\": [\"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Style Transfer\", \"desc\": \"Applies the visual style of one image (style) to the content of another image (content) using neural style transfer techniques.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Video Stabilizer\", \"desc\": \"Stabilizes a shaky input video to produce a smoother output video.\", \"input-type\": [\"video\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Speed Changer\", \"desc\": \"Adjusts the playback speed of a given video according to human instruction, either speeding it up or slowing it down.\", \"input-type\": [\"video\", \"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Synchronization\", \"desc\": \"Synchronizes the timing of an existing voiceover or audio file with the visuals of a given video.\", \"input-type\": [\"video\", \"audio\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Voiceover\", \"desc\": \"Adds a voiceover to a given video using a provided script or text.\", \"input-type\": [\"video\", \"text\"], \"output-type\": [\"video\"]}\n\n        \n# GOAL #: Based on the above tools, I want you generate task steps and task nodes to solve the # USER REQUEST #. \n        The format must in a strict JSON format, like: {\"task_steps\": [one or more concrete steps, format as Step x: step description], \"task_nodes\": [{\"task\": \"tool name must be from # TASK LIST #\", \"arguments\": [ a concise list of arguments for the tool. Either original text, or user-mentioned filename, or tag '<node-j>' (start from 0) to refer to the output of the j-th node. ]}], \"task_links\": [{\"source\": \"task name i\", \"target\": \"task name j\"}]} \n        \n        # REQUIREMENTS #: \n        1. the generated task steps and task nodes can resolve the given user request # USER REQUEST # perfectly. Task name must be selected from # TASK LIST #;\n\n        2. the task steps should strictly aligned with the task nodes, and the number of task steps should be same with the task nodes;\n\n        3. the dependencies among task steps should align with the argument dependencies of the task nodes;\n\n        4. the tool arguments should be align with the input-type field of # TASK LIST #;\n\n        5. The task links (task_links) should reflect the temporal dependencies among task nodes, i.e. the order in which the APIs are invoked;\n\n        \nHere are provided examples for your reference.\n\n# EXAMPLE #:\n# USER REQUEST #: Please create a panorama using two images 'example1.jpg' and 'example2.jpg'.\n# RESULT #: {\"task_steps\": [\"Step 1: Use Image Stitcher to stitch together two images.\"], \"task_nodes\": [{\"task\": \"Image Stitcher\", \"arguments\": [\"example1.jpg\", \"example2.jpg\"]}], \"task_links\": []}\n    \n\n\n    # USER REQUEST #: I have a black and white image named 'example.jpg'. I would like to add color to this image using deep learning techniques.\n    now please generate your result in a strict JSON format:\n    # RESULT #:\n\n    Below is an example of step-by-step tool calls for planning a task to decompose a complex request into sub-tasks:\n\n    ```json\n    [\n    {\"Step 1\": \"Call tool 1 with input: 'input 1 name and content' and output: 'output 1 name and content'\"}\n    {\"Step 2\": \"Call tool 2 with input: 'input 2 name and content' and output: 'output 2 name and content'\"}\n    {\"Step 3\": \"Finish\"}\n    ]\n    ```\n    Based on this example, generate step-by-step tool calls to solve the given problem by breaking it down into sub-tasks and forming a connected path.\n\n    -----Tool Calls-----\n    Tool Call of Step 1:Call Image Stitcher tool with input: 'output1.jpg', 'example2.jpg' and output: 'output2.jpg'\n", "value": 0.33333333283333333}, "4": {"state": "\n    You are tasked with breaking down a complex user request into solvable sub-tasks by creating a task plan.\n\n    Problem Description:\n\n    # TASK LIST #:\n{\"id\": \"Image Downloader\", \"desc\": \"Downloads an image from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"image\"]}\n{\"id\": \"Video Downloader\", \"desc\": \"Downloads a video from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"video\"]}\n{\"id\": \"Audio Downloader\", \"desc\": \"Downloads an audio file from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Text Downloader\", \"desc\": \"Downloads the text content from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Search\", \"desc\": \"Searches for a specific text or keyword on the internet.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Image Search\", \"desc\": \"Searches for images on the internet based on a given query.\", \"input-type\": [\"text\"], \"output-type\": [\"Image\"]}\n{\"id\": \"Image Search (by Image)\", \"desc\": \"Performs a similar image search using an input image.\", \"input-type\": [\"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"URL Extractor\", \"desc\": \"Extracts URL from text\", \"input-type\": [\"text\"], \"output-type\": [\"url\"]}\n{\"id\": \"Video Search\", \"desc\": \"Searches for videos on the internet based on a given query.\", \"input-type\": [\"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Text-to-Image\", \"desc\": \"Generates an image based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"image\"]}\n{\"id\": \"Text-to-Video\", \"desc\": \"Generates a video based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Text-to-Audio\", \"desc\": \"Generates an audio file based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Image-to-Text\", \"desc\": \"Extracts text from an input image using Optical Character Recognition (OCR).\", \"input-type\": [\"image\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio-to-Text\", \"desc\": \"Transcribes speech from an audio file into text.\", \"input-type\": [\"audio\"], \"output-type\": [\"text\"]}\n{\"id\": \"Video-to-Text\", \"desc\": \"Transcribes speech from a video file into text.\", \"input-type\": [\"video\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio Noise Reduction\", \"desc\": \"Reduces background noise or unwanted sounds from a given audio file.\", \"input-type\": [\"audio\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Audio Effects\", \"desc\": \"Applies various audio effects to a given audio file according to human instruction, such as reverb, chorus, or equalization.\", \"input-type\": [\"audio\", \"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Audio Splicer\", \"desc\": \"Combines two audio files into a single output file.\", \"input-type\": [\"audio\", \"audio\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Voice Changer\", \"desc\": \"Modifies the characteristics of a recorded voice according to human instruction, such as tone, pitch, or gender.\", \"input-type\": [\"audio\", \"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Text Summarizer\", \"desc\": \"Summarizes a given text into a shorter version while retaining the main points.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Translator\", \"desc\": \"Translates a given text from one language to english.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Sentiment Analysis\", \"desc\": \"Analyzes the sentiment of a given text, identifying if it is positive, negative, or neutral.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Grammar Checker\", \"desc\": \"Checks a given text for grammatical errors and suggests corrections.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Simplifier\", \"desc\": \"Rewrites a given text in a simpler and more understandable manner.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Expander\", \"desc\": \"Expands a given short text into a more detailed and descriptive version.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Keyword Extractor\", \"desc\": \"Extracts the most important keywords and phrases from a given text.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Paraphraser\", \"desc\": \"Rewrites a given text using different words while maintaining its original meaning.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Article Spinner\", \"desc\": \"Rewrites a given article using synonyms and syntax changes to create a new, unique version.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Topic Generator\", \"desc\": \"Generates a list of relevant topics or ideas based on a given input.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio-to-Image\", \"desc\": \"Generates an image that visually represents a given audio, such as a waveform or spectrogram.\", \"input-type\": [\"audio\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image-to-Video\", \"desc\": \"Creates a slideshow video using two input images.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video-to-Audio\", \"desc\": \"Extracts the audio track from a given video file.\", \"input-type\": [\"video\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Video-to-Image\", \"desc\": \"Extracts a still image from a given video.\", \"input-type\": [\"video\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Stitcher\", \"desc\": \"Stitches together two input images to create a panorama or collage.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Colorizer\", \"desc\": \"Adds color to a black and white input image using deep learning techniques.\", \"input-type\": [\"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Style Transfer\", \"desc\": \"Applies the visual style of one image (style) to the content of another image (content) using neural style transfer techniques.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Video Stabilizer\", \"desc\": \"Stabilizes a shaky input video to produce a smoother output video.\", \"input-type\": [\"video\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Speed Changer\", \"desc\": \"Adjusts the playback speed of a given video according to human instruction, either speeding it up or slowing it down.\", \"input-type\": [\"video\", \"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Synchronization\", \"desc\": \"Synchronizes the timing of an existing voiceover or audio file with the visuals of a given video.\", \"input-type\": [\"video\", \"audio\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Voiceover\", \"desc\": \"Adds a voiceover to a given video using a provided script or text.\", \"input-type\": [\"video\", \"text\"], \"output-type\": [\"video\"]}\n\n        \n# GOAL #: Based on the above tools, I want you generate task steps and task nodes to solve the # USER REQUEST #. \n        The format must in a strict JSON format, like: {\"task_steps\": [one or more concrete steps, format as Step x: step description], \"task_nodes\": [{\"task\": \"tool name must be from # TASK LIST #\", \"arguments\": [ a concise list of arguments for the tool. Either original text, or user-mentioned filename, or tag '<node-j>' (start from 0) to refer to the output of the j-th node. ]}], \"task_links\": [{\"source\": \"task name i\", \"target\": \"task name j\"}]} \n        \n        # REQUIREMENTS #: \n        1. the generated task steps and task nodes can resolve the given user request # USER REQUEST # perfectly. Task name must be selected from # TASK LIST #;\n\n        2. the task steps should strictly aligned with the task nodes, and the number of task steps should be same with the task nodes;\n\n        3. the dependencies among task steps should align with the argument dependencies of the task nodes;\n\n        4. the tool arguments should be align with the input-type field of # TASK LIST #;\n\n        5. The task links (task_links) should reflect the temporal dependencies among task nodes, i.e. the order in which the APIs are invoked;\n\n        \nHere are provided examples for your reference.\n\n# EXAMPLE #:\n# USER REQUEST #: Please create a panorama using two images 'example1.jpg' and 'example2.jpg'.\n# RESULT #: {\"task_steps\": [\"Step 1: Use Image Stitcher to stitch together two images.\"], \"task_nodes\": [{\"task\": \"Image Stitcher\", \"arguments\": [\"example1.jpg\", \"example2.jpg\"]}], \"task_links\": []}\n    \n\n\n    # USER REQUEST #: I have a black and white image named 'example.jpg'. I would like to add color to this image using deep learning techniques.\n    now please generate your result in a strict JSON format:\n    # RESULT #:\n\n    Below is an example of step-by-step tool calls for planning a task to decompose a complex request into sub-tasks:\n\n    ```json\n    [\n    {\"Step 1\": \"Call tool 1 with input: 'input 1 name and content' and output: 'output 1 name and content'\"}\n    {\"Step 2\": \"Call tool 2 with input: 'input 2 name and content' and output: 'output 2 name and content'\"}\n    {\"Step 3\": \"Finish\"}\n    ]\n    ```\n    Based on this example, generate step-by-step tool calls to solve the given problem by breaking it down into sub-tasks and forming a connected path.\n\n    -----Tool Calls-----\n    Tool Call of Step 1:Call Image Colorizer tool with input: 'example.jpg' and output: '<node-0>'\n\n", "value": 0.33333333283333333}}]
[[[0, 0], [0, 1], [0, 2], [1, 3], [1, 4], [1, 5], [2, 6], [2, 7], [2, 8], [3, 9], [3, 10], [3, 11], [4, 12], [4, 13], [4, 14]], [[0, 1], [1, 2], [2, 3], [3, 4]], {"0": {"ucb": 1.6915149882393594, "p_ucb": 1.6915149882393594, "var_p_ucb": 1.8902695340883735, "action": "\n", "prob": 1.0}, "1": {"ucb": 2.537272482359039, "p_ucb": 2.537272482359039, "var_p_ucb": 2.8354043011325603, "action": "\n", "prob": 1.0}, "2": {"ucb": 2.537272482359039, "p_ucb": 2.537272482359039, "var_p_ucb": 2.8354043011325603, "action": "\n", "prob": 1.0}, "3": {"ucb": 2.09629414793641, "p_ucb": 2.09629414793641, "var_p_ucb": 2.2726303430794412, "action": "\n", "prob": 1.0}, "4": {"ucb": 4.19258829587282, "p_ucb": 4.19258829587282, "var_p_ucb": 4.5452606861588825, "action": "\n", "prob": 1.0}, "5": {"ucb": 4.19258829587282, "p_ucb": 4.19258829587282, "var_p_ucb": 4.5452606861588825, "action": "\n", "prob": 1.0}, "6": {"ucb": 3.3302184446307908, "p_ucb": 3.3302184446307908, "var_p_ucb": 3.5486510228161983, "action": "\n", "prob": 1.0}, "7": {"ucb": 3.3302184446307908, "p_ucb": 3.3302184446307908, "var_p_ucb": 3.5486510228161983, "action": "\n", "prob": 1.0}, "8": {"ucb": 3.3302184446307908, "p_ucb": 3.3302184446307908, "var_p_ucb": 3.5486510228161983, "action": "\n", "prob": 1.0}, "9": {"ucb": 3.3302184446307908, "p_ucb": 3.3302184446307908, "var_p_ucb": 3.5486510228161983, "action": "\n", "prob": 1.0}, "10": {"ucb": 3.3302184446307908, "p_ucb": 3.3302184446307908, "var_p_ucb": 3.5486510228161983, "action": "\n", "prob": 1.0}, "11": {"ucb": 3.3302184446307908, "p_ucb": 3.3302184446307908, "var_p_ucb": 3.5486510228161983, "action": "\n", "prob": 1.0}, "12": {"ucb": 3.3302184446307908, "p_ucb": 3.3302184446307908, "var_p_ucb": 3.5486510228161983, "action": "\n", "prob": 1.0}, "13": {"ucb": 3.3302184446307908, "p_ucb": 3.3302184446307908, "var_p_ucb": 3.5486510228161983, "action": "\n", "prob": 1.0}, "14": {"ucb": 3.3302184446307908, "p_ucb": 3.3302184446307908, "var_p_ucb": 3.5486510228161983, "action": "\n", "prob": 1.0}}, {"0": {"state": "\n    You are tasked with breaking down a complex user request into solvable sub-tasks by creating a task plan.\n\n    Problem Description:\n\n    # TASK LIST #:\n{\"id\": \"Image Downloader\", \"desc\": \"Downloads an image from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"image\"]}\n{\"id\": \"Video Downloader\", \"desc\": \"Downloads a video from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"video\"]}\n{\"id\": \"Audio Downloader\", \"desc\": \"Downloads an audio file from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Text Downloader\", \"desc\": \"Downloads the text content from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Search\", \"desc\": \"Searches for a specific text or keyword on the internet.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Image Search\", \"desc\": \"Searches for images on the internet based on a given query.\", \"input-type\": [\"text\"], \"output-type\": [\"Image\"]}\n{\"id\": \"Image Search (by Image)\", \"desc\": \"Performs a similar image search using an input image.\", \"input-type\": [\"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"URL Extractor\", \"desc\": \"Extracts URL from text\", \"input-type\": [\"text\"], \"output-type\": [\"url\"]}\n{\"id\": \"Video Search\", \"desc\": \"Searches for videos on the internet based on a given query.\", \"input-type\": [\"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Text-to-Image\", \"desc\": \"Generates an image based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"image\"]}\n{\"id\": \"Text-to-Video\", \"desc\": \"Generates a video based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Text-to-Audio\", \"desc\": \"Generates an audio file based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Image-to-Text\", \"desc\": \"Extracts text from an input image using Optical Character Recognition (OCR).\", \"input-type\": [\"image\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio-to-Text\", \"desc\": \"Transcribes speech from an audio file into text.\", \"input-type\": [\"audio\"], \"output-type\": [\"text\"]}\n{\"id\": \"Video-to-Text\", \"desc\": \"Transcribes speech from a video file into text.\", \"input-type\": [\"video\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio Noise Reduction\", \"desc\": \"Reduces background noise or unwanted sounds from a given audio file.\", \"input-type\": [\"audio\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Audio Effects\", \"desc\": \"Applies various audio effects to a given audio file according to human instruction, such as reverb, chorus, or equalization.\", \"input-type\": [\"audio\", \"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Audio Splicer\", \"desc\": \"Combines two audio files into a single output file.\", \"input-type\": [\"audio\", \"audio\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Voice Changer\", \"desc\": \"Modifies the characteristics of a recorded voice according to human instruction, such as tone, pitch, or gender.\", \"input-type\": [\"audio\", \"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Text Summarizer\", \"desc\": \"Summarizes a given text into a shorter version while retaining the main points.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Translator\", \"desc\": \"Translates a given text from one language to english.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Sentiment Analysis\", \"desc\": \"Analyzes the sentiment of a given text, identifying if it is positive, negative, or neutral.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Grammar Checker\", \"desc\": \"Checks a given text for grammatical errors and suggests corrections.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Simplifier\", \"desc\": \"Rewrites a given text in a simpler and more understandable manner.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Expander\", \"desc\": \"Expands a given short text into a more detailed and descriptive version.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Keyword Extractor\", \"desc\": \"Extracts the most important keywords and phrases from a given text.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Paraphraser\", \"desc\": \"Rewrites a given text using different words while maintaining its original meaning.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Article Spinner\", \"desc\": \"Rewrites a given article using synonyms and syntax changes to create a new, unique version.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Topic Generator\", \"desc\": \"Generates a list of relevant topics or ideas based on a given input.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio-to-Image\", \"desc\": \"Generates an image that visually represents a given audio, such as a waveform or spectrogram.\", \"input-type\": [\"audio\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image-to-Video\", \"desc\": \"Creates a slideshow video using two input images.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video-to-Audio\", \"desc\": \"Extracts the audio track from a given video file.\", \"input-type\": [\"video\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Video-to-Image\", \"desc\": \"Extracts a still image from a given video.\", \"input-type\": [\"video\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Stitcher\", \"desc\": \"Stitches together two input images to create a panorama or collage.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Colorizer\", \"desc\": \"Adds color to a black and white input image using deep learning techniques.\", \"input-type\": [\"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Style Transfer\", \"desc\": \"Applies the visual style of one image (style) to the content of another image (content) using neural style transfer techniques.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Video Stabilizer\", \"desc\": \"Stabilizes a shaky input video to produce a smoother output video.\", \"input-type\": [\"video\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Speed Changer\", \"desc\": \"Adjusts the playback speed of a given video according to human instruction, either speeding it up or slowing it down.\", \"input-type\": [\"video\", \"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Synchronization\", \"desc\": \"Synchronizes the timing of an existing voiceover or audio file with the visuals of a given video.\", \"input-type\": [\"video\", \"audio\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Voiceover\", \"desc\": \"Adds a voiceover to a given video using a provided script or text.\", \"input-type\": [\"video\", \"text\"], \"output-type\": [\"video\"]}\n\n        \n# GOAL #: Based on the above tools, I want you generate task steps and task nodes to solve the # USER REQUEST #. \n        The format must in a strict JSON format, like: {\"task_steps\": [one or more concrete steps, format as Step x: step description], \"task_nodes\": [{\"task\": \"tool name must be from # TASK LIST #\", \"arguments\": [ a concise list of arguments for the tool. Either original text, or user-mentioned filename, or tag '<node-j>' (start from 0) to refer to the output of the j-th node. ]}], \"task_links\": [{\"source\": \"task name i\", \"target\": \"task name j\"}]} \n        \n        # REQUIREMENTS #: \n        1. the generated task steps and task nodes can resolve the given user request # USER REQUEST # perfectly. Task name must be selected from # TASK LIST #;\n\n        2. the task steps should strictly aligned with the task nodes, and the number of task steps should be same with the task nodes;\n\n        3. the dependencies among task steps should align with the argument dependencies of the task nodes;\n\n        4. the tool arguments should be align with the input-type field of # TASK LIST #;\n\n        5. The task links (task_links) should reflect the temporal dependencies among task nodes, i.e. the order in which the APIs are invoked;\n\n        \nHere are provided examples for your reference.\n\n# EXAMPLE #:\n# USER REQUEST #: Please create a panorama using two images 'example1.jpg' and 'example2.jpg'.\n# RESULT #: {\"task_steps\": [\"Step 1: Use Image Stitcher to stitch together two images.\"], \"task_nodes\": [{\"task\": \"Image Stitcher\", \"arguments\": [\"example1.jpg\", \"example2.jpg\"]}], \"task_links\": []}\n    \n\n\n    # USER REQUEST #: I would like to download a video from 'https://www.example.com/example.mp4', transcribe its speech to text, generate a new video based on that text, extract a still image from the new video, colorize the image, extract text from the colorized image, expand the text into a more detailed version, and finally search for an image based on the expanded text.\n    now please generate your result in a strict JSON format:\n    # RESULT #:\n\n    Below is an example of step-by-step tool calls for planning a task to decompose a complex request into sub-tasks:\n\n    ```json\n    [\n    {\"Step 1\": \"Call tool 1 with input: 'input 1 name and content' and output: 'output 1 name and content'\"}\n    {\"Step 2\": \"Call tool 2 with input: 'input 2 name and content' and output: 'output 2 name and content'\"}\n    {\"Step 3\": \"Finish\"}\n    ]\n    ```\n    Based on this example, generate step-by-step tool calls to solve the given problem by breaking it down into sub-tasks and forming a connected path.\n\n    -----Tool Calls-----\n    ", "value": null}, "1": {"state": "\n    You are tasked with breaking down a complex user request into solvable sub-tasks by creating a task plan.\n\n    Problem Description:\n\n    # TASK LIST #:\n{\"id\": \"Image Downloader\", \"desc\": \"Downloads an image from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"image\"]}\n{\"id\": \"Video Downloader\", \"desc\": \"Downloads a video from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"video\"]}\n{\"id\": \"Audio Downloader\", \"desc\": \"Downloads an audio file from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Text Downloader\", \"desc\": \"Downloads the text content from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Search\", \"desc\": \"Searches for a specific text or keyword on the internet.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Image Search\", \"desc\": \"Searches for images on the internet based on a given query.\", \"input-type\": [\"text\"], \"output-type\": [\"Image\"]}\n{\"id\": \"Image Search (by Image)\", \"desc\": \"Performs a similar image search using an input image.\", \"input-type\": [\"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"URL Extractor\", \"desc\": \"Extracts URL from text\", \"input-type\": [\"text\"], \"output-type\": [\"url\"]}\n{\"id\": \"Video Search\", \"desc\": \"Searches for videos on the internet based on a given query.\", \"input-type\": [\"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Text-to-Image\", \"desc\": \"Generates an image based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"image\"]}\n{\"id\": \"Text-to-Video\", \"desc\": \"Generates a video based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Text-to-Audio\", \"desc\": \"Generates an audio file based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Image-to-Text\", \"desc\": \"Extracts text from an input image using Optical Character Recognition (OCR).\", \"input-type\": [\"image\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio-to-Text\", \"desc\": \"Transcribes speech from an audio file into text.\", \"input-type\": [\"audio\"], \"output-type\": [\"text\"]}\n{\"id\": \"Video-to-Text\", \"desc\": \"Transcribes speech from a video file into text.\", \"input-type\": [\"video\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio Noise Reduction\", \"desc\": \"Reduces background noise or unwanted sounds from a given audio file.\", \"input-type\": [\"audio\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Audio Effects\", \"desc\": \"Applies various audio effects to a given audio file according to human instruction, such as reverb, chorus, or equalization.\", \"input-type\": [\"audio\", \"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Audio Splicer\", \"desc\": \"Combines two audio files into a single output file.\", \"input-type\": [\"audio\", \"audio\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Voice Changer\", \"desc\": \"Modifies the characteristics of a recorded voice according to human instruction, such as tone, pitch, or gender.\", \"input-type\": [\"audio\", \"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Text Summarizer\", \"desc\": \"Summarizes a given text into a shorter version while retaining the main points.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Translator\", \"desc\": \"Translates a given text from one language to english.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Sentiment Analysis\", \"desc\": \"Analyzes the sentiment of a given text, identifying if it is positive, negative, or neutral.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Grammar Checker\", \"desc\": \"Checks a given text for grammatical errors and suggests corrections.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Simplifier\", \"desc\": \"Rewrites a given text in a simpler and more understandable manner.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Expander\", \"desc\": \"Expands a given short text into a more detailed and descriptive version.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Keyword Extractor\", \"desc\": \"Extracts the most important keywords and phrases from a given text.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Paraphraser\", \"desc\": \"Rewrites a given text using different words while maintaining its original meaning.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Article Spinner\", \"desc\": \"Rewrites a given article using synonyms and syntax changes to create a new, unique version.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Topic Generator\", \"desc\": \"Generates a list of relevant topics or ideas based on a given input.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio-to-Image\", \"desc\": \"Generates an image that visually represents a given audio, such as a waveform or spectrogram.\", \"input-type\": [\"audio\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image-to-Video\", \"desc\": \"Creates a slideshow video using two input images.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video-to-Audio\", \"desc\": \"Extracts the audio track from a given video file.\", \"input-type\": [\"video\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Video-to-Image\", \"desc\": \"Extracts a still image from a given video.\", \"input-type\": [\"video\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Stitcher\", \"desc\": \"Stitches together two input images to create a panorama or collage.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Colorizer\", \"desc\": \"Adds color to a black and white input image using deep learning techniques.\", \"input-type\": [\"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Style Transfer\", \"desc\": \"Applies the visual style of one image (style) to the content of another image (content) using neural style transfer techniques.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Video Stabilizer\", \"desc\": \"Stabilizes a shaky input video to produce a smoother output video.\", \"input-type\": [\"video\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Speed Changer\", \"desc\": \"Adjusts the playback speed of a given video according to human instruction, either speeding it up or slowing it down.\", \"input-type\": [\"video\", \"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Synchronization\", \"desc\": \"Synchronizes the timing of an existing voiceover or audio file with the visuals of a given video.\", \"input-type\": [\"video\", \"audio\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Voiceover\", \"desc\": \"Adds a voiceover to a given video using a provided script or text.\", \"input-type\": [\"video\", \"text\"], \"output-type\": [\"video\"]}\n\n        \n# GOAL #: Based on the above tools, I want you generate task steps and task nodes to solve the # USER REQUEST #. \n        The format must in a strict JSON format, like: {\"task_steps\": [one or more concrete steps, format as Step x: step description], \"task_nodes\": [{\"task\": \"tool name must be from # TASK LIST #\", \"arguments\": [ a concise list of arguments for the tool. Either original text, or user-mentioned filename, or tag '<node-j>' (start from 0) to refer to the output of the j-th node. ]}], \"task_links\": [{\"source\": \"task name i\", \"target\": \"task name j\"}]} \n        \n        # REQUIREMENTS #: \n        1. the generated task steps and task nodes can resolve the given user request # USER REQUEST # perfectly. Task name must be selected from # TASK LIST #;\n\n        2. the task steps should strictly aligned with the task nodes, and the number of task steps should be same with the task nodes;\n\n        3. the dependencies among task steps should align with the argument dependencies of the task nodes;\n\n        4. the tool arguments should be align with the input-type field of # TASK LIST #;\n\n        5. The task links (task_links) should reflect the temporal dependencies among task nodes, i.e. the order in which the APIs are invoked;\n\n        \nHere are provided examples for your reference.\n\n# EXAMPLE #:\n# USER REQUEST #: Please create a panorama using two images 'example1.jpg' and 'example2.jpg'.\n# RESULT #: {\"task_steps\": [\"Step 1: Use Image Stitcher to stitch together two images.\"], \"task_nodes\": [{\"task\": \"Image Stitcher\", \"arguments\": [\"example1.jpg\", \"example2.jpg\"]}], \"task_links\": []}\n    \n\n\n    # USER REQUEST #: I would like to download a video from 'https://www.example.com/example.mp4', transcribe its speech to text, generate a new video based on that text, extract a still image from the new video, colorize the image, extract text from the colorized image, expand the text into a more detailed version, and finally search for an image based on the expanded text.\n    now please generate your result in a strict JSON format:\n    # RESULT #:\n\n    Below is an example of step-by-step tool calls for planning a task to decompose a complex request into sub-tasks:\n\n    ```json\n    [\n    {\"Step 1\": \"Call tool 1 with input: 'input 1 name and content' and output: 'output 1 name and content'\"}\n    {\"Step 2\": \"Call tool 2 with input: 'input 2 name and content' and output: 'output 2 name and content'\"}\n    {\"Step 3\": \"Finish\"}\n    ]\n    ```\n    Based on this example, generate step-by-step tool calls to solve the given problem by breaking it down into sub-tasks and forming a connected path.\n\n    -----Tool Calls-----\n    \n", "value": 0.0}, "2": {"state": "\n    You are tasked with breaking down a complex user request into solvable sub-tasks by creating a task plan.\n\n    Problem Description:\n\n    # TASK LIST #:\n{\"id\": \"Image Downloader\", \"desc\": \"Downloads an image from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"image\"]}\n{\"id\": \"Video Downloader\", \"desc\": \"Downloads a video from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"video\"]}\n{\"id\": \"Audio Downloader\", \"desc\": \"Downloads an audio file from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Text Downloader\", \"desc\": \"Downloads the text content from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Search\", \"desc\": \"Searches for a specific text or keyword on the internet.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Image Search\", \"desc\": \"Searches for images on the internet based on a given query.\", \"input-type\": [\"text\"], \"output-type\": [\"Image\"]}\n{\"id\": \"Image Search (by Image)\", \"desc\": \"Performs a similar image search using an input image.\", \"input-type\": [\"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"URL Extractor\", \"desc\": \"Extracts URL from text\", \"input-type\": [\"text\"], \"output-type\": [\"url\"]}\n{\"id\": \"Video Search\", \"desc\": \"Searches for videos on the internet based on a given query.\", \"input-type\": [\"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Text-to-Image\", \"desc\": \"Generates an image based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"image\"]}\n{\"id\": \"Text-to-Video\", \"desc\": \"Generates a video based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Text-to-Audio\", \"desc\": \"Generates an audio file based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Image-to-Text\", \"desc\": \"Extracts text from an input image using Optical Character Recognition (OCR).\", \"input-type\": [\"image\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio-to-Text\", \"desc\": \"Transcribes speech from an audio file into text.\", \"input-type\": [\"audio\"], \"output-type\": [\"text\"]}\n{\"id\": \"Video-to-Text\", \"desc\": \"Transcribes speech from a video file into text.\", \"input-type\": [\"video\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio Noise Reduction\", \"desc\": \"Reduces background noise or unwanted sounds from a given audio file.\", \"input-type\": [\"audio\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Audio Effects\", \"desc\": \"Applies various audio effects to a given audio file according to human instruction, such as reverb, chorus, or equalization.\", \"input-type\": [\"audio\", \"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Audio Splicer\", \"desc\": \"Combines two audio files into a single output file.\", \"input-type\": [\"audio\", \"audio\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Voice Changer\", \"desc\": \"Modifies the characteristics of a recorded voice according to human instruction, such as tone, pitch, or gender.\", \"input-type\": [\"audio\", \"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Text Summarizer\", \"desc\": \"Summarizes a given text into a shorter version while retaining the main points.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Translator\", \"desc\": \"Translates a given text from one language to english.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Sentiment Analysis\", \"desc\": \"Analyzes the sentiment of a given text, identifying if it is positive, negative, or neutral.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Grammar Checker\", \"desc\": \"Checks a given text for grammatical errors and suggests corrections.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Simplifier\", \"desc\": \"Rewrites a given text in a simpler and more understandable manner.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Expander\", \"desc\": \"Expands a given short text into a more detailed and descriptive version.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Keyword Extractor\", \"desc\": \"Extracts the most important keywords and phrases from a given text.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Paraphraser\", \"desc\": \"Rewrites a given text using different words while maintaining its original meaning.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Article Spinner\", \"desc\": \"Rewrites a given article using synonyms and syntax changes to create a new, unique version.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Topic Generator\", \"desc\": \"Generates a list of relevant topics or ideas based on a given input.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio-to-Image\", \"desc\": \"Generates an image that visually represents a given audio, such as a waveform or spectrogram.\", \"input-type\": [\"audio\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image-to-Video\", \"desc\": \"Creates a slideshow video using two input images.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video-to-Audio\", \"desc\": \"Extracts the audio track from a given video file.\", \"input-type\": [\"video\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Video-to-Image\", \"desc\": \"Extracts a still image from a given video.\", \"input-type\": [\"video\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Stitcher\", \"desc\": \"Stitches together two input images to create a panorama or collage.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Colorizer\", \"desc\": \"Adds color to a black and white input image using deep learning techniques.\", \"input-type\": [\"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Style Transfer\", \"desc\": \"Applies the visual style of one image (style) to the content of another image (content) using neural style transfer techniques.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Video Stabilizer\", \"desc\": \"Stabilizes a shaky input video to produce a smoother output video.\", \"input-type\": [\"video\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Speed Changer\", \"desc\": \"Adjusts the playback speed of a given video according to human instruction, either speeding it up or slowing it down.\", \"input-type\": [\"video\", \"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Synchronization\", \"desc\": \"Synchronizes the timing of an existing voiceover or audio file with the visuals of a given video.\", \"input-type\": [\"video\", \"audio\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Voiceover\", \"desc\": \"Adds a voiceover to a given video using a provided script or text.\", \"input-type\": [\"video\", \"text\"], \"output-type\": [\"video\"]}\n\n        \n# GOAL #: Based on the above tools, I want you generate task steps and task nodes to solve the # USER REQUEST #. \n        The format must in a strict JSON format, like: {\"task_steps\": [one or more concrete steps, format as Step x: step description], \"task_nodes\": [{\"task\": \"tool name must be from # TASK LIST #\", \"arguments\": [ a concise list of arguments for the tool. Either original text, or user-mentioned filename, or tag '<node-j>' (start from 0) to refer to the output of the j-th node. ]}], \"task_links\": [{\"source\": \"task name i\", \"target\": \"task name j\"}]} \n        \n        # REQUIREMENTS #: \n        1. the generated task steps and task nodes can resolve the given user request # USER REQUEST # perfectly. Task name must be selected from # TASK LIST #;\n\n        2. the task steps should strictly aligned with the task nodes, and the number of task steps should be same with the task nodes;\n\n        3. the dependencies among task steps should align with the argument dependencies of the task nodes;\n\n        4. the tool arguments should be align with the input-type field of # TASK LIST #;\n\n        5. The task links (task_links) should reflect the temporal dependencies among task nodes, i.e. the order in which the APIs are invoked;\n\n        \nHere are provided examples for your reference.\n\n# EXAMPLE #:\n# USER REQUEST #: Please create a panorama using two images 'example1.jpg' and 'example2.jpg'.\n# RESULT #: {\"task_steps\": [\"Step 1: Use Image Stitcher to stitch together two images.\"], \"task_nodes\": [{\"task\": \"Image Stitcher\", \"arguments\": [\"example1.jpg\", \"example2.jpg\"]}], \"task_links\": []}\n    \n\n\n    # USER REQUEST #: I would like to download a video from 'https://www.example.com/example.mp4', transcribe its speech to text, generate a new video based on that text, extract a still image from the new video, colorize the image, extract text from the colorized image, expand the text into a more detailed version, and finally search for an image based on the expanded text.\n    now please generate your result in a strict JSON format:\n    # RESULT #:\n\n    Below is an example of step-by-step tool calls for planning a task to decompose a complex request into sub-tasks:\n\n    ```json\n    [\n    {\"Step 1\": \"Call tool 1 with input: 'input 1 name and content' and output: 'output 1 name and content'\"}\n    {\"Step 2\": \"Call tool 2 with input: 'input 2 name and content' and output: 'output 2 name and content'\"}\n    {\"Step 3\": \"Finish\"}\n    ]\n    ```\n    Based on this example, generate step-by-step tool calls to solve the given problem by breaking it down into sub-tasks and forming a connected path.\n\n    -----Tool Calls-----\n    \n", "value": 0.0}, "3": {"state": "\n    You are tasked with breaking down a complex user request into solvable sub-tasks by creating a task plan.\n\n    Problem Description:\n\n    # TASK LIST #:\n{\"id\": \"Image Downloader\", \"desc\": \"Downloads an image from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"image\"]}\n{\"id\": \"Video Downloader\", \"desc\": \"Downloads a video from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"video\"]}\n{\"id\": \"Audio Downloader\", \"desc\": \"Downloads an audio file from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Text Downloader\", \"desc\": \"Downloads the text content from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Search\", \"desc\": \"Searches for a specific text or keyword on the internet.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Image Search\", \"desc\": \"Searches for images on the internet based on a given query.\", \"input-type\": [\"text\"], \"output-type\": [\"Image\"]}\n{\"id\": \"Image Search (by Image)\", \"desc\": \"Performs a similar image search using an input image.\", \"input-type\": [\"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"URL Extractor\", \"desc\": \"Extracts URL from text\", \"input-type\": [\"text\"], \"output-type\": [\"url\"]}\n{\"id\": \"Video Search\", \"desc\": \"Searches for videos on the internet based on a given query.\", \"input-type\": [\"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Text-to-Image\", \"desc\": \"Generates an image based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"image\"]}\n{\"id\": \"Text-to-Video\", \"desc\": \"Generates a video based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Text-to-Audio\", \"desc\": \"Generates an audio file based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Image-to-Text\", \"desc\": \"Extracts text from an input image using Optical Character Recognition (OCR).\", \"input-type\": [\"image\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio-to-Text\", \"desc\": \"Transcribes speech from an audio file into text.\", \"input-type\": [\"audio\"], \"output-type\": [\"text\"]}\n{\"id\": \"Video-to-Text\", \"desc\": \"Transcribes speech from a video file into text.\", \"input-type\": [\"video\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio Noise Reduction\", \"desc\": \"Reduces background noise or unwanted sounds from a given audio file.\", \"input-type\": [\"audio\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Audio Effects\", \"desc\": \"Applies various audio effects to a given audio file according to human instruction, such as reverb, chorus, or equalization.\", \"input-type\": [\"audio\", \"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Audio Splicer\", \"desc\": \"Combines two audio files into a single output file.\", \"input-type\": [\"audio\", \"audio\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Voice Changer\", \"desc\": \"Modifies the characteristics of a recorded voice according to human instruction, such as tone, pitch, or gender.\", \"input-type\": [\"audio\", \"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Text Summarizer\", \"desc\": \"Summarizes a given text into a shorter version while retaining the main points.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Translator\", \"desc\": \"Translates a given text from one language to english.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Sentiment Analysis\", \"desc\": \"Analyzes the sentiment of a given text, identifying if it is positive, negative, or neutral.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Grammar Checker\", \"desc\": \"Checks a given text for grammatical errors and suggests corrections.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Simplifier\", \"desc\": \"Rewrites a given text in a simpler and more understandable manner.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Expander\", \"desc\": \"Expands a given short text into a more detailed and descriptive version.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Keyword Extractor\", \"desc\": \"Extracts the most important keywords and phrases from a given text.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Paraphraser\", \"desc\": \"Rewrites a given text using different words while maintaining its original meaning.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Article Spinner\", \"desc\": \"Rewrites a given article using synonyms and syntax changes to create a new, unique version.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Topic Generator\", \"desc\": \"Generates a list of relevant topics or ideas based on a given input.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio-to-Image\", \"desc\": \"Generates an image that visually represents a given audio, such as a waveform or spectrogram.\", \"input-type\": [\"audio\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image-to-Video\", \"desc\": \"Creates a slideshow video using two input images.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video-to-Audio\", \"desc\": \"Extracts the audio track from a given video file.\", \"input-type\": [\"video\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Video-to-Image\", \"desc\": \"Extracts a still image from a given video.\", \"input-type\": [\"video\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Stitcher\", \"desc\": \"Stitches together two input images to create a panorama or collage.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Colorizer\", \"desc\": \"Adds color to a black and white input image using deep learning techniques.\", \"input-type\": [\"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Style Transfer\", \"desc\": \"Applies the visual style of one image (style) to the content of another image (content) using neural style transfer techniques.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Video Stabilizer\", \"desc\": \"Stabilizes a shaky input video to produce a smoother output video.\", \"input-type\": [\"video\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Speed Changer\", \"desc\": \"Adjusts the playback speed of a given video according to human instruction, either speeding it up or slowing it down.\", \"input-type\": [\"video\", \"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Synchronization\", \"desc\": \"Synchronizes the timing of an existing voiceover or audio file with the visuals of a given video.\", \"input-type\": [\"video\", \"audio\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Voiceover\", \"desc\": \"Adds a voiceover to a given video using a provided script or text.\", \"input-type\": [\"video\", \"text\"], \"output-type\": [\"video\"]}\n\n        \n# GOAL #: Based on the above tools, I want you generate task steps and task nodes to solve the # USER REQUEST #. \n        The format must in a strict JSON format, like: {\"task_steps\": [one or more concrete steps, format as Step x: step description], \"task_nodes\": [{\"task\": \"tool name must be from # TASK LIST #\", \"arguments\": [ a concise list of arguments for the tool. Either original text, or user-mentioned filename, or tag '<node-j>' (start from 0) to refer to the output of the j-th node. ]}], \"task_links\": [{\"source\": \"task name i\", \"target\": \"task name j\"}]} \n        \n        # REQUIREMENTS #: \n        1. the generated task steps and task nodes can resolve the given user request # USER REQUEST # perfectly. Task name must be selected from # TASK LIST #;\n\n        2. the task steps should strictly aligned with the task nodes, and the number of task steps should be same with the task nodes;\n\n        3. the dependencies among task steps should align with the argument dependencies of the task nodes;\n\n        4. the tool arguments should be align with the input-type field of # TASK LIST #;\n\n        5. The task links (task_links) should reflect the temporal dependencies among task nodes, i.e. the order in which the APIs are invoked;\n\n        \nHere are provided examples for your reference.\n\n# EXAMPLE #:\n# USER REQUEST #: Please create a panorama using two images 'example1.jpg' and 'example2.jpg'.\n# RESULT #: {\"task_steps\": [\"Step 1: Use Image Stitcher to stitch together two images.\"], \"task_nodes\": [{\"task\": \"Image Stitcher\", \"arguments\": [\"example1.jpg\", \"example2.jpg\"]}], \"task_links\": []}\n    \n\n\n    # USER REQUEST #: I would like to download a video from 'https://www.example.com/example.mp4', transcribe its speech to text, generate a new video based on that text, extract a still image from the new video, colorize the image, extract text from the colorized image, expand the text into a more detailed version, and finally search for an image based on the expanded text.\n    now please generate your result in a strict JSON format:\n    # RESULT #:\n\n    Below is an example of step-by-step tool calls for planning a task to decompose a complex request into sub-tasks:\n\n    ```json\n    [\n    {\"Step 1\": \"Call tool 1 with input: 'input 1 name and content' and output: 'output 1 name and content'\"}\n    {\"Step 2\": \"Call tool 2 with input: 'input 2 name and content' and output: 'output 2 name and content'\"}\n    {\"Step 3\": \"Finish\"}\n    ]\n    ```\n    Based on this example, generate step-by-step tool calls to solve the given problem by breaking it down into sub-tasks and forming a connected path.\n\n    -----Tool Calls-----\n    \n", "value": 0.0}, "4": {"state": "\n    You are tasked with breaking down a complex user request into solvable sub-tasks by creating a task plan.\n\n    Problem Description:\n\n    # TASK LIST #:\n{\"id\": \"Image Downloader\", \"desc\": \"Downloads an image from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"image\"]}\n{\"id\": \"Video Downloader\", \"desc\": \"Downloads a video from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"video\"]}\n{\"id\": \"Audio Downloader\", \"desc\": \"Downloads an audio file from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Text Downloader\", \"desc\": \"Downloads the text content from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Search\", \"desc\": \"Searches for a specific text or keyword on the internet.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Image Search\", \"desc\": \"Searches for images on the internet based on a given query.\", \"input-type\": [\"text\"], \"output-type\": [\"Image\"]}\n{\"id\": \"Image Search (by Image)\", \"desc\": \"Performs a similar image search using an input image.\", \"input-type\": [\"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"URL Extractor\", \"desc\": \"Extracts URL from text\", \"input-type\": [\"text\"], \"output-type\": [\"url\"]}\n{\"id\": \"Video Search\", \"desc\": \"Searches for videos on the internet based on a given query.\", \"input-type\": [\"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Text-to-Image\", \"desc\": \"Generates an image based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"image\"]}\n{\"id\": \"Text-to-Video\", \"desc\": \"Generates a video based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Text-to-Audio\", \"desc\": \"Generates an audio file based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Image-to-Text\", \"desc\": \"Extracts text from an input image using Optical Character Recognition (OCR).\", \"input-type\": [\"image\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio-to-Text\", \"desc\": \"Transcribes speech from an audio file into text.\", \"input-type\": [\"audio\"], \"output-type\": [\"text\"]}\n{\"id\": \"Video-to-Text\", \"desc\": \"Transcribes speech from a video file into text.\", \"input-type\": [\"video\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio Noise Reduction\", \"desc\": \"Reduces background noise or unwanted sounds from a given audio file.\", \"input-type\": [\"audio\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Audio Effects\", \"desc\": \"Applies various audio effects to a given audio file according to human instruction, such as reverb, chorus, or equalization.\", \"input-type\": [\"audio\", \"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Audio Splicer\", \"desc\": \"Combines two audio files into a single output file.\", \"input-type\": [\"audio\", \"audio\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Voice Changer\", \"desc\": \"Modifies the characteristics of a recorded voice according to human instruction, such as tone, pitch, or gender.\", \"input-type\": [\"audio\", \"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Text Summarizer\", \"desc\": \"Summarizes a given text into a shorter version while retaining the main points.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Translator\", \"desc\": \"Translates a given text from one language to english.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Sentiment Analysis\", \"desc\": \"Analyzes the sentiment of a given text, identifying if it is positive, negative, or neutral.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Grammar Checker\", \"desc\": \"Checks a given text for grammatical errors and suggests corrections.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Simplifier\", \"desc\": \"Rewrites a given text in a simpler and more understandable manner.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Expander\", \"desc\": \"Expands a given short text into a more detailed and descriptive version.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Keyword Extractor\", \"desc\": \"Extracts the most important keywords and phrases from a given text.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Paraphraser\", \"desc\": \"Rewrites a given text using different words while maintaining its original meaning.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Article Spinner\", \"desc\": \"Rewrites a given article using synonyms and syntax changes to create a new, unique version.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Topic Generator\", \"desc\": \"Generates a list of relevant topics or ideas based on a given input.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio-to-Image\", \"desc\": \"Generates an image that visually represents a given audio, such as a waveform or spectrogram.\", \"input-type\": [\"audio\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image-to-Video\", \"desc\": \"Creates a slideshow video using two input images.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video-to-Audio\", \"desc\": \"Extracts the audio track from a given video file.\", \"input-type\": [\"video\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Video-to-Image\", \"desc\": \"Extracts a still image from a given video.\", \"input-type\": [\"video\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Stitcher\", \"desc\": \"Stitches together two input images to create a panorama or collage.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Colorizer\", \"desc\": \"Adds color to a black and white input image using deep learning techniques.\", \"input-type\": [\"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Style Transfer\", \"desc\": \"Applies the visual style of one image (style) to the content of another image (content) using neural style transfer techniques.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Video Stabilizer\", \"desc\": \"Stabilizes a shaky input video to produce a smoother output video.\", \"input-type\": [\"video\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Speed Changer\", \"desc\": \"Adjusts the playback speed of a given video according to human instruction, either speeding it up or slowing it down.\", \"input-type\": [\"video\", \"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Synchronization\", \"desc\": \"Synchronizes the timing of an existing voiceover or audio file with the visuals of a given video.\", \"input-type\": [\"video\", \"audio\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Voiceover\", \"desc\": \"Adds a voiceover to a given video using a provided script or text.\", \"input-type\": [\"video\", \"text\"], \"output-type\": [\"video\"]}\n\n        \n# GOAL #: Based on the above tools, I want you generate task steps and task nodes to solve the # USER REQUEST #. \n        The format must in a strict JSON format, like: {\"task_steps\": [one or more concrete steps, format as Step x: step description], \"task_nodes\": [{\"task\": \"tool name must be from # TASK LIST #\", \"arguments\": [ a concise list of arguments for the tool. Either original text, or user-mentioned filename, or tag '<node-j>' (start from 0) to refer to the output of the j-th node. ]}], \"task_links\": [{\"source\": \"task name i\", \"target\": \"task name j\"}]} \n        \n        # REQUIREMENTS #: \n        1. the generated task steps and task nodes can resolve the given user request # USER REQUEST # perfectly. Task name must be selected from # TASK LIST #;\n\n        2. the task steps should strictly aligned with the task nodes, and the number of task steps should be same with the task nodes;\n\n        3. the dependencies among task steps should align with the argument dependencies of the task nodes;\n\n        4. the tool arguments should be align with the input-type field of # TASK LIST #;\n\n        5. The task links (task_links) should reflect the temporal dependencies among task nodes, i.e. the order in which the APIs are invoked;\n\n        \nHere are provided examples for your reference.\n\n# EXAMPLE #:\n# USER REQUEST #: Please create a panorama using two images 'example1.jpg' and 'example2.jpg'.\n# RESULT #: {\"task_steps\": [\"Step 1: Use Image Stitcher to stitch together two images.\"], \"task_nodes\": [{\"task\": \"Image Stitcher\", \"arguments\": [\"example1.jpg\", \"example2.jpg\"]}], \"task_links\": []}\n    \n\n\n    # USER REQUEST #: I would like to download a video from 'https://www.example.com/example.mp4', transcribe its speech to text, generate a new video based on that text, extract a still image from the new video, colorize the image, extract text from the colorized image, expand the text into a more detailed version, and finally search for an image based on the expanded text.\n    now please generate your result in a strict JSON format:\n    # RESULT #:\n\n    Below is an example of step-by-step tool calls for planning a task to decompose a complex request into sub-tasks:\n\n    ```json\n    [\n    {\"Step 1\": \"Call tool 1 with input: 'input 1 name and content' and output: 'output 1 name and content'\"}\n    {\"Step 2\": \"Call tool 2 with input: 'input 2 name and content' and output: 'output 2 name and content'\"}\n    {\"Step 3\": \"Finish\"}\n    ]\n    ```\n    Based on this example, generate step-by-step tool calls to solve the given problem by breaking it down into sub-tasks and forming a connected path.\n\n    -----Tool Calls-----\n    \n\n", "value": 0.0}}]
[[[0, 0], [0, 1], [0, 2], [1, 3], [1, 4], [1, 5], [2, 6], [2, 7], [2, 8], [3, 9], [3, 10], [3, 11], [4, 12], [4, 13], [4, 14]], [[0, 1], [1, 2], [2, 3], [3, 4]], {"0": {"ucb": 1.6915149882393594, "p_ucb": 1.6915149882393594, "var_p_ucb": 1.8902695340883735, "action": "\n", "prob": 1.0}, "1": {"ucb": 2.537272482359039, "p_ucb": 2.537272482359039, "var_p_ucb": 2.8354043011325603, "action": "\n", "prob": 1.0}, "2": {"ucb": 2.537272482359039, "p_ucb": 2.537272482359039, "var_p_ucb": 2.8354043011325603, "action": "\n", "prob": 1.0}, "3": {"ucb": 2.09629414793641, "p_ucb": 2.09629414793641, "var_p_ucb": 2.2726303430794412, "action": "\n", "prob": 1.0}, "4": {"ucb": 4.19258829587282, "p_ucb": 4.19258829587282, "var_p_ucb": 4.5452606861588825, "action": "\n", "prob": 1.0}, "5": {"ucb": 4.19258829587282, "p_ucb": 4.19258829587282, "var_p_ucb": 4.5452606861588825, "action": "\n", "prob": 1.0}, "6": {"ucb": 3.3302184446307908, "p_ucb": 3.3302184446307908, "var_p_ucb": 3.5486510228161983, "action": "\n", "prob": 1.0}, "7": {"ucb": 3.3302184446307908, "p_ucb": 3.3302184446307908, "var_p_ucb": 3.5486510228161983, "action": "\n", "prob": 1.0}, "8": {"ucb": 3.3302184446307908, "p_ucb": 3.3302184446307908, "var_p_ucb": 3.5486510228161983, "action": "\n", "prob": 1.0}, "9": {"ucb": 3.3302184446307908, "p_ucb": 3.3302184446307908, "var_p_ucb": 3.5486510228161983, "action": "\n", "prob": 1.0}, "10": {"ucb": 3.3302184446307908, "p_ucb": 3.3302184446307908, "var_p_ucb": 3.5486510228161983, "action": "\n", "prob": 1.0}, "11": {"ucb": 3.3302184446307908, "p_ucb": 3.3302184446307908, "var_p_ucb": 3.5486510228161983, "action": "\n", "prob": 1.0}, "12": {"ucb": 3.3302184446307908, "p_ucb": 2.9971966001677117, "var_p_ucb": 3.193785920534579, "action": "Tool Call of Step 3:Call Text-to-Video tool with input: 'The text content' and output: 'video_output.mp4'\n", "prob": 0.9}, "13": {"ucb": 3.3302184446307908, "p_ucb": 2.830685677936172, "var_p_ucb": 3.0163533693937685, "action": "Tool Call of Step 3:Call Video-to-Audio tool with input: 'video_output.mp4' and output: 'audio_output.mp3'\n", "prob": 0.85}, "14": {"ucb": 3.3302184446307908, "p_ucb": 2.6641747557046327, "var_p_ucb": 2.8389208182529586, "action": "Tool Call of Step 3:Call Text-to-Audio tool with input: 'The text content' and output: 'audio_output.mp3'\n", "prob": 0.8}}, {"0": {"state": "\n    You are tasked with breaking down a complex user request into solvable sub-tasks by creating a task plan.\n\n    Problem Description:\n\n    # TASK LIST #:\n{\"id\": \"Image Downloader\", \"desc\": \"Downloads an image from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"image\"]}\n{\"id\": \"Video Downloader\", \"desc\": \"Downloads a video from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"video\"]}\n{\"id\": \"Audio Downloader\", \"desc\": \"Downloads an audio file from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Text Downloader\", \"desc\": \"Downloads the text content from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Search\", \"desc\": \"Searches for a specific text or keyword on the internet.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Image Search\", \"desc\": \"Searches for images on the internet based on a given query.\", \"input-type\": [\"text\"], \"output-type\": [\"Image\"]}\n{\"id\": \"Image Search (by Image)\", \"desc\": \"Performs a similar image search using an input image.\", \"input-type\": [\"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"URL Extractor\", \"desc\": \"Extracts URL from text\", \"input-type\": [\"text\"], \"output-type\": [\"url\"]}\n{\"id\": \"Video Search\", \"desc\": \"Searches for videos on the internet based on a given query.\", \"input-type\": [\"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Text-to-Image\", \"desc\": \"Generates an image based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"image\"]}\n{\"id\": \"Text-to-Video\", \"desc\": \"Generates a video based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Text-to-Audio\", \"desc\": \"Generates an audio file based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Image-to-Text\", \"desc\": \"Extracts text from an input image using Optical Character Recognition (OCR).\", \"input-type\": [\"image\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio-to-Text\", \"desc\": \"Transcribes speech from an audio file into text.\", \"input-type\": [\"audio\"], \"output-type\": [\"text\"]}\n{\"id\": \"Video-to-Text\", \"desc\": \"Transcribes speech from a video file into text.\", \"input-type\": [\"video\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio Noise Reduction\", \"desc\": \"Reduces background noise or unwanted sounds from a given audio file.\", \"input-type\": [\"audio\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Audio Effects\", \"desc\": \"Applies various audio effects to a given audio file according to human instruction, such as reverb, chorus, or equalization.\", \"input-type\": [\"audio\", \"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Audio Splicer\", \"desc\": \"Combines two audio files into a single output file.\", \"input-type\": [\"audio\", \"audio\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Voice Changer\", \"desc\": \"Modifies the characteristics of a recorded voice according to human instruction, such as tone, pitch, or gender.\", \"input-type\": [\"audio\", \"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Text Summarizer\", \"desc\": \"Summarizes a given text into a shorter version while retaining the main points.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Translator\", \"desc\": \"Translates a given text from one language to english.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Sentiment Analysis\", \"desc\": \"Analyzes the sentiment of a given text, identifying if it is positive, negative, or neutral.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Grammar Checker\", \"desc\": \"Checks a given text for grammatical errors and suggests corrections.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Simplifier\", \"desc\": \"Rewrites a given text in a simpler and more understandable manner.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Expander\", \"desc\": \"Expands a given short text into a more detailed and descriptive version.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Keyword Extractor\", \"desc\": \"Extracts the most important keywords and phrases from a given text.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Paraphraser\", \"desc\": \"Rewrites a given text using different words while maintaining its original meaning.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Article Spinner\", \"desc\": \"Rewrites a given article using synonyms and syntax changes to create a new, unique version.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Topic Generator\", \"desc\": \"Generates a list of relevant topics or ideas based on a given input.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio-to-Image\", \"desc\": \"Generates an image that visually represents a given audio, such as a waveform or spectrogram.\", \"input-type\": [\"audio\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image-to-Video\", \"desc\": \"Creates a slideshow video using two input images.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video-to-Audio\", \"desc\": \"Extracts the audio track from a given video file.\", \"input-type\": [\"video\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Video-to-Image\", \"desc\": \"Extracts a still image from a given video.\", \"input-type\": [\"video\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Stitcher\", \"desc\": \"Stitches together two input images to create a panorama or collage.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Colorizer\", \"desc\": \"Adds color to a black and white input image using deep learning techniques.\", \"input-type\": [\"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Style Transfer\", \"desc\": \"Applies the visual style of one image (style) to the content of another image (content) using neural style transfer techniques.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Video Stabilizer\", \"desc\": \"Stabilizes a shaky input video to produce a smoother output video.\", \"input-type\": [\"video\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Speed Changer\", \"desc\": \"Adjusts the playback speed of a given video according to human instruction, either speeding it up or slowing it down.\", \"input-type\": [\"video\", \"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Synchronization\", \"desc\": \"Synchronizes the timing of an existing voiceover or audio file with the visuals of a given video.\", \"input-type\": [\"video\", \"audio\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Voiceover\", \"desc\": \"Adds a voiceover to a given video using a provided script or text.\", \"input-type\": [\"video\", \"text\"], \"output-type\": [\"video\"]}\n\n        \n# GOAL #: Based on the above tools, I want you generate task steps and task nodes to solve the # USER REQUEST #. \n        The format must in a strict JSON format, like: {\"task_steps\": [one or more concrete steps, format as Step x: step description], \"task_nodes\": [{\"task\": \"tool name must be from # TASK LIST #\", \"arguments\": [ a concise list of arguments for the tool. Either original text, or user-mentioned filename, or tag '<node-j>' (start from 0) to refer to the output of the j-th node. ]}], \"task_links\": [{\"source\": \"task name i\", \"target\": \"task name j\"}]} \n        \n        # REQUIREMENTS #: \n        1. the generated task steps and task nodes can resolve the given user request # USER REQUEST # perfectly. Task name must be selected from # TASK LIST #;\n\n        2. the task steps should strictly aligned with the task nodes, and the number of task steps should be same with the task nodes;\n\n        3. the dependencies among task steps should align with the argument dependencies of the task nodes;\n\n        4. the tool arguments should be align with the input-type field of # TASK LIST #;\n\n        5. The task links (task_links) should reflect the temporal dependencies among task nodes, i.e. the order in which the APIs are invoked;\n\n        \nHere are provided examples for your reference.\n\n# EXAMPLE #:\n# USER REQUEST #: Please create a panorama using two images 'example1.jpg' and 'example2.jpg'.\n# RESULT #: {\"task_steps\": [\"Step 1: Use Image Stitcher to stitch together two images.\"], \"task_nodes\": [{\"task\": \"Image Stitcher\", \"arguments\": [\"example1.jpg\", \"example2.jpg\"]}], \"task_links\": []}\n    \n\n\n    # USER REQUEST #: I have a text article about the benefits of recycling, and I would like to create an engaging video with a voiceover to communicate the main points to my audience. The text is 'We should all recycle because it helps conserve resources, saves energy, and reduces pollution. Recycling also helps protect the environment and wildlife.'\n    now please generate your result in a strict JSON format:\n    # RESULT #:\n\n    Below is an example of step-by-step tool calls for planning a task to decompose a complex request into sub-tasks:\n\n    ```json\n    [\n    {\"Step 1\": \"Call tool 1 with input: 'input 1 name and content' and output: 'output 1 name and content'\"}\n    {\"Step 2\": \"Call tool 2 with input: 'input 2 name and content' and output: 'output 2 name and content'\"}\n    {\"Step 3\": \"Finish\"}\n    ]\n    ```\n    Based on this example, generate step-by-step tool calls to solve the given problem by breaking it down into sub-tasks and forming a connected path.\n\n    -----Tool Calls-----\n    ", "value": null}, "1": {"state": "\n    You are tasked with breaking down a complex user request into solvable sub-tasks by creating a task plan.\n\n    Problem Description:\n\n    # TASK LIST #:\n{\"id\": \"Image Downloader\", \"desc\": \"Downloads an image from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"image\"]}\n{\"id\": \"Video Downloader\", \"desc\": \"Downloads a video from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"video\"]}\n{\"id\": \"Audio Downloader\", \"desc\": \"Downloads an audio file from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Text Downloader\", \"desc\": \"Downloads the text content from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Search\", \"desc\": \"Searches for a specific text or keyword on the internet.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Image Search\", \"desc\": \"Searches for images on the internet based on a given query.\", \"input-type\": [\"text\"], \"output-type\": [\"Image\"]}\n{\"id\": \"Image Search (by Image)\", \"desc\": \"Performs a similar image search using an input image.\", \"input-type\": [\"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"URL Extractor\", \"desc\": \"Extracts URL from text\", \"input-type\": [\"text\"], \"output-type\": [\"url\"]}\n{\"id\": \"Video Search\", \"desc\": \"Searches for videos on the internet based on a given query.\", \"input-type\": [\"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Text-to-Image\", \"desc\": \"Generates an image based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"image\"]}\n{\"id\": \"Text-to-Video\", \"desc\": \"Generates a video based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Text-to-Audio\", \"desc\": \"Generates an audio file based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Image-to-Text\", \"desc\": \"Extracts text from an input image using Optical Character Recognition (OCR).\", \"input-type\": [\"image\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio-to-Text\", \"desc\": \"Transcribes speech from an audio file into text.\", \"input-type\": [\"audio\"], \"output-type\": [\"text\"]}\n{\"id\": \"Video-to-Text\", \"desc\": \"Transcribes speech from a video file into text.\", \"input-type\": [\"video\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio Noise Reduction\", \"desc\": \"Reduces background noise or unwanted sounds from a given audio file.\", \"input-type\": [\"audio\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Audio Effects\", \"desc\": \"Applies various audio effects to a given audio file according to human instruction, such as reverb, chorus, or equalization.\", \"input-type\": [\"audio\", \"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Audio Splicer\", \"desc\": \"Combines two audio files into a single output file.\", \"input-type\": [\"audio\", \"audio\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Voice Changer\", \"desc\": \"Modifies the characteristics of a recorded voice according to human instruction, such as tone, pitch, or gender.\", \"input-type\": [\"audio\", \"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Text Summarizer\", \"desc\": \"Summarizes a given text into a shorter version while retaining the main points.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Translator\", \"desc\": \"Translates a given text from one language to english.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Sentiment Analysis\", \"desc\": \"Analyzes the sentiment of a given text, identifying if it is positive, negative, or neutral.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Grammar Checker\", \"desc\": \"Checks a given text for grammatical errors and suggests corrections.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Simplifier\", \"desc\": \"Rewrites a given text in a simpler and more understandable manner.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Expander\", \"desc\": \"Expands a given short text into a more detailed and descriptive version.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Keyword Extractor\", \"desc\": \"Extracts the most important keywords and phrases from a given text.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Paraphraser\", \"desc\": \"Rewrites a given text using different words while maintaining its original meaning.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Article Spinner\", \"desc\": \"Rewrites a given article using synonyms and syntax changes to create a new, unique version.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Topic Generator\", \"desc\": \"Generates a list of relevant topics or ideas based on a given input.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio-to-Image\", \"desc\": \"Generates an image that visually represents a given audio, such as a waveform or spectrogram.\", \"input-type\": [\"audio\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image-to-Video\", \"desc\": \"Creates a slideshow video using two input images.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video-to-Audio\", \"desc\": \"Extracts the audio track from a given video file.\", \"input-type\": [\"video\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Video-to-Image\", \"desc\": \"Extracts a still image from a given video.\", \"input-type\": [\"video\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Stitcher\", \"desc\": \"Stitches together two input images to create a panorama or collage.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Colorizer\", \"desc\": \"Adds color to a black and white input image using deep learning techniques.\", \"input-type\": [\"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Style Transfer\", \"desc\": \"Applies the visual style of one image (style) to the content of another image (content) using neural style transfer techniques.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Video Stabilizer\", \"desc\": \"Stabilizes a shaky input video to produce a smoother output video.\", \"input-type\": [\"video\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Speed Changer\", \"desc\": \"Adjusts the playback speed of a given video according to human instruction, either speeding it up or slowing it down.\", \"input-type\": [\"video\", \"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Synchronization\", \"desc\": \"Synchronizes the timing of an existing voiceover or audio file with the visuals of a given video.\", \"input-type\": [\"video\", \"audio\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Voiceover\", \"desc\": \"Adds a voiceover to a given video using a provided script or text.\", \"input-type\": [\"video\", \"text\"], \"output-type\": [\"video\"]}\n\n        \n# GOAL #: Based on the above tools, I want you generate task steps and task nodes to solve the # USER REQUEST #. \n        The format must in a strict JSON format, like: {\"task_steps\": [one or more concrete steps, format as Step x: step description], \"task_nodes\": [{\"task\": \"tool name must be from # TASK LIST #\", \"arguments\": [ a concise list of arguments for the tool. Either original text, or user-mentioned filename, or tag '<node-j>' (start from 0) to refer to the output of the j-th node. ]}], \"task_links\": [{\"source\": \"task name i\", \"target\": \"task name j\"}]} \n        \n        # REQUIREMENTS #: \n        1. the generated task steps and task nodes can resolve the given user request # USER REQUEST # perfectly. Task name must be selected from # TASK LIST #;\n\n        2. the task steps should strictly aligned with the task nodes, and the number of task steps should be same with the task nodes;\n\n        3. the dependencies among task steps should align with the argument dependencies of the task nodes;\n\n        4. the tool arguments should be align with the input-type field of # TASK LIST #;\n\n        5. The task links (task_links) should reflect the temporal dependencies among task nodes, i.e. the order in which the APIs are invoked;\n\n        \nHere are provided examples for your reference.\n\n# EXAMPLE #:\n# USER REQUEST #: Please create a panorama using two images 'example1.jpg' and 'example2.jpg'.\n# RESULT #: {\"task_steps\": [\"Step 1: Use Image Stitcher to stitch together two images.\"], \"task_nodes\": [{\"task\": \"Image Stitcher\", \"arguments\": [\"example1.jpg\", \"example2.jpg\"]}], \"task_links\": []}\n    \n\n\n    # USER REQUEST #: I have a text article about the benefits of recycling, and I would like to create an engaging video with a voiceover to communicate the main points to my audience. The text is 'We should all recycle because it helps conserve resources, saves energy, and reduces pollution. Recycling also helps protect the environment and wildlife.'\n    now please generate your result in a strict JSON format:\n    # RESULT #:\n\n    Below is an example of step-by-step tool calls for planning a task to decompose a complex request into sub-tasks:\n\n    ```json\n    [\n    {\"Step 1\": \"Call tool 1 with input: 'input 1 name and content' and output: 'output 1 name and content'\"}\n    {\"Step 2\": \"Call tool 2 with input: 'input 2 name and content' and output: 'output 2 name and content'\"}\n    {\"Step 3\": \"Finish\"}\n    ]\n    ```\n    Based on this example, generate step-by-step tool calls to solve the given problem by breaking it down into sub-tasks and forming a connected path.\n\n    -----Tool Calls-----\n    \n", "value": 0.0}, "2": {"state": "\n    You are tasked with breaking down a complex user request into solvable sub-tasks by creating a task plan.\n\n    Problem Description:\n\n    # TASK LIST #:\n{\"id\": \"Image Downloader\", \"desc\": \"Downloads an image from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"image\"]}\n{\"id\": \"Video Downloader\", \"desc\": \"Downloads a video from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"video\"]}\n{\"id\": \"Audio Downloader\", \"desc\": \"Downloads an audio file from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Text Downloader\", \"desc\": \"Downloads the text content from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Search\", \"desc\": \"Searches for a specific text or keyword on the internet.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Image Search\", \"desc\": \"Searches for images on the internet based on a given query.\", \"input-type\": [\"text\"], \"output-type\": [\"Image\"]}\n{\"id\": \"Image Search (by Image)\", \"desc\": \"Performs a similar image search using an input image.\", \"input-type\": [\"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"URL Extractor\", \"desc\": \"Extracts URL from text\", \"input-type\": [\"text\"], \"output-type\": [\"url\"]}\n{\"id\": \"Video Search\", \"desc\": \"Searches for videos on the internet based on a given query.\", \"input-type\": [\"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Text-to-Image\", \"desc\": \"Generates an image based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"image\"]}\n{\"id\": \"Text-to-Video\", \"desc\": \"Generates a video based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Text-to-Audio\", \"desc\": \"Generates an audio file based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Image-to-Text\", \"desc\": \"Extracts text from an input image using Optical Character Recognition (OCR).\", \"input-type\": [\"image\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio-to-Text\", \"desc\": \"Transcribes speech from an audio file into text.\", \"input-type\": [\"audio\"], \"output-type\": [\"text\"]}\n{\"id\": \"Video-to-Text\", \"desc\": \"Transcribes speech from a video file into text.\", \"input-type\": [\"video\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio Noise Reduction\", \"desc\": \"Reduces background noise or unwanted sounds from a given audio file.\", \"input-type\": [\"audio\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Audio Effects\", \"desc\": \"Applies various audio effects to a given audio file according to human instruction, such as reverb, chorus, or equalization.\", \"input-type\": [\"audio\", \"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Audio Splicer\", \"desc\": \"Combines two audio files into a single output file.\", \"input-type\": [\"audio\", \"audio\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Voice Changer\", \"desc\": \"Modifies the characteristics of a recorded voice according to human instruction, such as tone, pitch, or gender.\", \"input-type\": [\"audio\", \"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Text Summarizer\", \"desc\": \"Summarizes a given text into a shorter version while retaining the main points.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Translator\", \"desc\": \"Translates a given text from one language to english.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Sentiment Analysis\", \"desc\": \"Analyzes the sentiment of a given text, identifying if it is positive, negative, or neutral.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Grammar Checker\", \"desc\": \"Checks a given text for grammatical errors and suggests corrections.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Simplifier\", \"desc\": \"Rewrites a given text in a simpler and more understandable manner.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Expander\", \"desc\": \"Expands a given short text into a more detailed and descriptive version.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Keyword Extractor\", \"desc\": \"Extracts the most important keywords and phrases from a given text.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Paraphraser\", \"desc\": \"Rewrites a given text using different words while maintaining its original meaning.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Article Spinner\", \"desc\": \"Rewrites a given article using synonyms and syntax changes to create a new, unique version.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Topic Generator\", \"desc\": \"Generates a list of relevant topics or ideas based on a given input.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio-to-Image\", \"desc\": \"Generates an image that visually represents a given audio, such as a waveform or spectrogram.\", \"input-type\": [\"audio\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image-to-Video\", \"desc\": \"Creates a slideshow video using two input images.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video-to-Audio\", \"desc\": \"Extracts the audio track from a given video file.\", \"input-type\": [\"video\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Video-to-Image\", \"desc\": \"Extracts a still image from a given video.\", \"input-type\": [\"video\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Stitcher\", \"desc\": \"Stitches together two input images to create a panorama or collage.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Colorizer\", \"desc\": \"Adds color to a black and white input image using deep learning techniques.\", \"input-type\": [\"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Style Transfer\", \"desc\": \"Applies the visual style of one image (style) to the content of another image (content) using neural style transfer techniques.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Video Stabilizer\", \"desc\": \"Stabilizes a shaky input video to produce a smoother output video.\", \"input-type\": [\"video\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Speed Changer\", \"desc\": \"Adjusts the playback speed of a given video according to human instruction, either speeding it up or slowing it down.\", \"input-type\": [\"video\", \"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Synchronization\", \"desc\": \"Synchronizes the timing of an existing voiceover or audio file with the visuals of a given video.\", \"input-type\": [\"video\", \"audio\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Voiceover\", \"desc\": \"Adds a voiceover to a given video using a provided script or text.\", \"input-type\": [\"video\", \"text\"], \"output-type\": [\"video\"]}\n\n        \n# GOAL #: Based on the above tools, I want you generate task steps and task nodes to solve the # USER REQUEST #. \n        The format must in a strict JSON format, like: {\"task_steps\": [one or more concrete steps, format as Step x: step description], \"task_nodes\": [{\"task\": \"tool name must be from # TASK LIST #\", \"arguments\": [ a concise list of arguments for the tool. Either original text, or user-mentioned filename, or tag '<node-j>' (start from 0) to refer to the output of the j-th node. ]}], \"task_links\": [{\"source\": \"task name i\", \"target\": \"task name j\"}]} \n        \n        # REQUIREMENTS #: \n        1. the generated task steps and task nodes can resolve the given user request # USER REQUEST # perfectly. Task name must be selected from # TASK LIST #;\n\n        2. the task steps should strictly aligned with the task nodes, and the number of task steps should be same with the task nodes;\n\n        3. the dependencies among task steps should align with the argument dependencies of the task nodes;\n\n        4. the tool arguments should be align with the input-type field of # TASK LIST #;\n\n        5. The task links (task_links) should reflect the temporal dependencies among task nodes, i.e. the order in which the APIs are invoked;\n\n        \nHere are provided examples for your reference.\n\n# EXAMPLE #:\n# USER REQUEST #: Please create a panorama using two images 'example1.jpg' and 'example2.jpg'.\n# RESULT #: {\"task_steps\": [\"Step 1: Use Image Stitcher to stitch together two images.\"], \"task_nodes\": [{\"task\": \"Image Stitcher\", \"arguments\": [\"example1.jpg\", \"example2.jpg\"]}], \"task_links\": []}\n    \n\n\n    # USER REQUEST #: I have a text article about the benefits of recycling, and I would like to create an engaging video with a voiceover to communicate the main points to my audience. The text is 'We should all recycle because it helps conserve resources, saves energy, and reduces pollution. Recycling also helps protect the environment and wildlife.'\n    now please generate your result in a strict JSON format:\n    # RESULT #:\n\n    Below is an example of step-by-step tool calls for planning a task to decompose a complex request into sub-tasks:\n\n    ```json\n    [\n    {\"Step 1\": \"Call tool 1 with input: 'input 1 name and content' and output: 'output 1 name and content'\"}\n    {\"Step 2\": \"Call tool 2 with input: 'input 2 name and content' and output: 'output 2 name and content'\"}\n    {\"Step 3\": \"Finish\"}\n    ]\n    ```\n    Based on this example, generate step-by-step tool calls to solve the given problem by breaking it down into sub-tasks and forming a connected path.\n\n    -----Tool Calls-----\n    \n", "value": 0.0}, "3": {"state": "\n    You are tasked with breaking down a complex user request into solvable sub-tasks by creating a task plan.\n\n    Problem Description:\n\n    # TASK LIST #:\n{\"id\": \"Image Downloader\", \"desc\": \"Downloads an image from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"image\"]}\n{\"id\": \"Video Downloader\", \"desc\": \"Downloads a video from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"video\"]}\n{\"id\": \"Audio Downloader\", \"desc\": \"Downloads an audio file from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Text Downloader\", \"desc\": \"Downloads the text content from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Search\", \"desc\": \"Searches for a specific text or keyword on the internet.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Image Search\", \"desc\": \"Searches for images on the internet based on a given query.\", \"input-type\": [\"text\"], \"output-type\": [\"Image\"]}\n{\"id\": \"Image Search (by Image)\", \"desc\": \"Performs a similar image search using an input image.\", \"input-type\": [\"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"URL Extractor\", \"desc\": \"Extracts URL from text\", \"input-type\": [\"text\"], \"output-type\": [\"url\"]}\n{\"id\": \"Video Search\", \"desc\": \"Searches for videos on the internet based on a given query.\", \"input-type\": [\"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Text-to-Image\", \"desc\": \"Generates an image based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"image\"]}\n{\"id\": \"Text-to-Video\", \"desc\": \"Generates a video based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Text-to-Audio\", \"desc\": \"Generates an audio file based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Image-to-Text\", \"desc\": \"Extracts text from an input image using Optical Character Recognition (OCR).\", \"input-type\": [\"image\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio-to-Text\", \"desc\": \"Transcribes speech from an audio file into text.\", \"input-type\": [\"audio\"], \"output-type\": [\"text\"]}\n{\"id\": \"Video-to-Text\", \"desc\": \"Transcribes speech from a video file into text.\", \"input-type\": [\"video\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio Noise Reduction\", \"desc\": \"Reduces background noise or unwanted sounds from a given audio file.\", \"input-type\": [\"audio\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Audio Effects\", \"desc\": \"Applies various audio effects to a given audio file according to human instruction, such as reverb, chorus, or equalization.\", \"input-type\": [\"audio\", \"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Audio Splicer\", \"desc\": \"Combines two audio files into a single output file.\", \"input-type\": [\"audio\", \"audio\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Voice Changer\", \"desc\": \"Modifies the characteristics of a recorded voice according to human instruction, such as tone, pitch, or gender.\", \"input-type\": [\"audio\", \"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Text Summarizer\", \"desc\": \"Summarizes a given text into a shorter version while retaining the main points.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Translator\", \"desc\": \"Translates a given text from one language to english.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Sentiment Analysis\", \"desc\": \"Analyzes the sentiment of a given text, identifying if it is positive, negative, or neutral.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Grammar Checker\", \"desc\": \"Checks a given text for grammatical errors and suggests corrections.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Simplifier\", \"desc\": \"Rewrites a given text in a simpler and more understandable manner.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Expander\", \"desc\": \"Expands a given short text into a more detailed and descriptive version.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Keyword Extractor\", \"desc\": \"Extracts the most important keywords and phrases from a given text.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Paraphraser\", \"desc\": \"Rewrites a given text using different words while maintaining its original meaning.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Article Spinner\", \"desc\": \"Rewrites a given article using synonyms and syntax changes to create a new, unique version.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Topic Generator\", \"desc\": \"Generates a list of relevant topics or ideas based on a given input.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio-to-Image\", \"desc\": \"Generates an image that visually represents a given audio, such as a waveform or spectrogram.\", \"input-type\": [\"audio\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image-to-Video\", \"desc\": \"Creates a slideshow video using two input images.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video-to-Audio\", \"desc\": \"Extracts the audio track from a given video file.\", \"input-type\": [\"video\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Video-to-Image\", \"desc\": \"Extracts a still image from a given video.\", \"input-type\": [\"video\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Stitcher\", \"desc\": \"Stitches together two input images to create a panorama or collage.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Colorizer\", \"desc\": \"Adds color to a black and white input image using deep learning techniques.\", \"input-type\": [\"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Style Transfer\", \"desc\": \"Applies the visual style of one image (style) to the content of another image (content) using neural style transfer techniques.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Video Stabilizer\", \"desc\": \"Stabilizes a shaky input video to produce a smoother output video.\", \"input-type\": [\"video\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Speed Changer\", \"desc\": \"Adjusts the playback speed of a given video according to human instruction, either speeding it up or slowing it down.\", \"input-type\": [\"video\", \"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Synchronization\", \"desc\": \"Synchronizes the timing of an existing voiceover or audio file with the visuals of a given video.\", \"input-type\": [\"video\", \"audio\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Voiceover\", \"desc\": \"Adds a voiceover to a given video using a provided script or text.\", \"input-type\": [\"video\", \"text\"], \"output-type\": [\"video\"]}\n\n        \n# GOAL #: Based on the above tools, I want you generate task steps and task nodes to solve the # USER REQUEST #. \n        The format must in a strict JSON format, like: {\"task_steps\": [one or more concrete steps, format as Step x: step description], \"task_nodes\": [{\"task\": \"tool name must be from # TASK LIST #\", \"arguments\": [ a concise list of arguments for the tool. Either original text, or user-mentioned filename, or tag '<node-j>' (start from 0) to refer to the output of the j-th node. ]}], \"task_links\": [{\"source\": \"task name i\", \"target\": \"task name j\"}]} \n        \n        # REQUIREMENTS #: \n        1. the generated task steps and task nodes can resolve the given user request # USER REQUEST # perfectly. Task name must be selected from # TASK LIST #;\n\n        2. the task steps should strictly aligned with the task nodes, and the number of task steps should be same with the task nodes;\n\n        3. the dependencies among task steps should align with the argument dependencies of the task nodes;\n\n        4. the tool arguments should be align with the input-type field of # TASK LIST #;\n\n        5. The task links (task_links) should reflect the temporal dependencies among task nodes, i.e. the order in which the APIs are invoked;\n\n        \nHere are provided examples for your reference.\n\n# EXAMPLE #:\n# USER REQUEST #: Please create a panorama using two images 'example1.jpg' and 'example2.jpg'.\n# RESULT #: {\"task_steps\": [\"Step 1: Use Image Stitcher to stitch together two images.\"], \"task_nodes\": [{\"task\": \"Image Stitcher\", \"arguments\": [\"example1.jpg\", \"example2.jpg\"]}], \"task_links\": []}\n    \n\n\n    # USER REQUEST #: I have a text article about the benefits of recycling, and I would like to create an engaging video with a voiceover to communicate the main points to my audience. The text is 'We should all recycle because it helps conserve resources, saves energy, and reduces pollution. Recycling also helps protect the environment and wildlife.'\n    now please generate your result in a strict JSON format:\n    # RESULT #:\n\n    Below is an example of step-by-step tool calls for planning a task to decompose a complex request into sub-tasks:\n\n    ```json\n    [\n    {\"Step 1\": \"Call tool 1 with input: 'input 1 name and content' and output: 'output 1 name and content'\"}\n    {\"Step 2\": \"Call tool 2 with input: 'input 2 name and content' and output: 'output 2 name and content'\"}\n    {\"Step 3\": \"Finish\"}\n    ]\n    ```\n    Based on this example, generate step-by-step tool calls to solve the given problem by breaking it down into sub-tasks and forming a connected path.\n\n    -----Tool Calls-----\n    \n", "value": 0.0}, "4": {"state": "\n    You are tasked with breaking down a complex user request into solvable sub-tasks by creating a task plan.\n\n    Problem Description:\n\n    # TASK LIST #:\n{\"id\": \"Image Downloader\", \"desc\": \"Downloads an image from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"image\"]}\n{\"id\": \"Video Downloader\", \"desc\": \"Downloads a video from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"video\"]}\n{\"id\": \"Audio Downloader\", \"desc\": \"Downloads an audio file from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Text Downloader\", \"desc\": \"Downloads the text content from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Search\", \"desc\": \"Searches for a specific text or keyword on the internet.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Image Search\", \"desc\": \"Searches for images on the internet based on a given query.\", \"input-type\": [\"text\"], \"output-type\": [\"Image\"]}\n{\"id\": \"Image Search (by Image)\", \"desc\": \"Performs a similar image search using an input image.\", \"input-type\": [\"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"URL Extractor\", \"desc\": \"Extracts URL from text\", \"input-type\": [\"text\"], \"output-type\": [\"url\"]}\n{\"id\": \"Video Search\", \"desc\": \"Searches for videos on the internet based on a given query.\", \"input-type\": [\"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Text-to-Image\", \"desc\": \"Generates an image based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"image\"]}\n{\"id\": \"Text-to-Video\", \"desc\": \"Generates a video based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Text-to-Audio\", \"desc\": \"Generates an audio file based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Image-to-Text\", \"desc\": \"Extracts text from an input image using Optical Character Recognition (OCR).\", \"input-type\": [\"image\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio-to-Text\", \"desc\": \"Transcribes speech from an audio file into text.\", \"input-type\": [\"audio\"], \"output-type\": [\"text\"]}\n{\"id\": \"Video-to-Text\", \"desc\": \"Transcribes speech from a video file into text.\", \"input-type\": [\"video\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio Noise Reduction\", \"desc\": \"Reduces background noise or unwanted sounds from a given audio file.\", \"input-type\": [\"audio\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Audio Effects\", \"desc\": \"Applies various audio effects to a given audio file according to human instruction, such as reverb, chorus, or equalization.\", \"input-type\": [\"audio\", \"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Audio Splicer\", \"desc\": \"Combines two audio files into a single output file.\", \"input-type\": [\"audio\", \"audio\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Voice Changer\", \"desc\": \"Modifies the characteristics of a recorded voice according to human instruction, such as tone, pitch, or gender.\", \"input-type\": [\"audio\", \"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Text Summarizer\", \"desc\": \"Summarizes a given text into a shorter version while retaining the main points.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Translator\", \"desc\": \"Translates a given text from one language to english.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Sentiment Analysis\", \"desc\": \"Analyzes the sentiment of a given text, identifying if it is positive, negative, or neutral.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Grammar Checker\", \"desc\": \"Checks a given text for grammatical errors and suggests corrections.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Simplifier\", \"desc\": \"Rewrites a given text in a simpler and more understandable manner.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Expander\", \"desc\": \"Expands a given short text into a more detailed and descriptive version.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Keyword Extractor\", \"desc\": \"Extracts the most important keywords and phrases from a given text.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Paraphraser\", \"desc\": \"Rewrites a given text using different words while maintaining its original meaning.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Article Spinner\", \"desc\": \"Rewrites a given article using synonyms and syntax changes to create a new, unique version.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Topic Generator\", \"desc\": \"Generates a list of relevant topics or ideas based on a given input.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio-to-Image\", \"desc\": \"Generates an image that visually represents a given audio, such as a waveform or spectrogram.\", \"input-type\": [\"audio\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image-to-Video\", \"desc\": \"Creates a slideshow video using two input images.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video-to-Audio\", \"desc\": \"Extracts the audio track from a given video file.\", \"input-type\": [\"video\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Video-to-Image\", \"desc\": \"Extracts a still image from a given video.\", \"input-type\": [\"video\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Stitcher\", \"desc\": \"Stitches together two input images to create a panorama or collage.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Colorizer\", \"desc\": \"Adds color to a black and white input image using deep learning techniques.\", \"input-type\": [\"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Style Transfer\", \"desc\": \"Applies the visual style of one image (style) to the content of another image (content) using neural style transfer techniques.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Video Stabilizer\", \"desc\": \"Stabilizes a shaky input video to produce a smoother output video.\", \"input-type\": [\"video\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Speed Changer\", \"desc\": \"Adjusts the playback speed of a given video according to human instruction, either speeding it up or slowing it down.\", \"input-type\": [\"video\", \"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Synchronization\", \"desc\": \"Synchronizes the timing of an existing voiceover or audio file with the visuals of a given video.\", \"input-type\": [\"video\", \"audio\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Voiceover\", \"desc\": \"Adds a voiceover to a given video using a provided script or text.\", \"input-type\": [\"video\", \"text\"], \"output-type\": [\"video\"]}\n\n        \n# GOAL #: Based on the above tools, I want you generate task steps and task nodes to solve the # USER REQUEST #. \n        The format must in a strict JSON format, like: {\"task_steps\": [one or more concrete steps, format as Step x: step description], \"task_nodes\": [{\"task\": \"tool name must be from # TASK LIST #\", \"arguments\": [ a concise list of arguments for the tool. Either original text, or user-mentioned filename, or tag '<node-j>' (start from 0) to refer to the output of the j-th node. ]}], \"task_links\": [{\"source\": \"task name i\", \"target\": \"task name j\"}]} \n        \n        # REQUIREMENTS #: \n        1. the generated task steps and task nodes can resolve the given user request # USER REQUEST # perfectly. Task name must be selected from # TASK LIST #;\n\n        2. the task steps should strictly aligned with the task nodes, and the number of task steps should be same with the task nodes;\n\n        3. the dependencies among task steps should align with the argument dependencies of the task nodes;\n\n        4. the tool arguments should be align with the input-type field of # TASK LIST #;\n\n        5. The task links (task_links) should reflect the temporal dependencies among task nodes, i.e. the order in which the APIs are invoked;\n\n        \nHere are provided examples for your reference.\n\n# EXAMPLE #:\n# USER REQUEST #: Please create a panorama using two images 'example1.jpg' and 'example2.jpg'.\n# RESULT #: {\"task_steps\": [\"Step 1: Use Image Stitcher to stitch together two images.\"], \"task_nodes\": [{\"task\": \"Image Stitcher\", \"arguments\": [\"example1.jpg\", \"example2.jpg\"]}], \"task_links\": []}\n    \n\n\n    # USER REQUEST #: I have a text article about the benefits of recycling, and I would like to create an engaging video with a voiceover to communicate the main points to my audience. The text is 'We should all recycle because it helps conserve resources, saves energy, and reduces pollution. Recycling also helps protect the environment and wildlife.'\n    now please generate your result in a strict JSON format:\n    # RESULT #:\n\n    Below is an example of step-by-step tool calls for planning a task to decompose a complex request into sub-tasks:\n\n    ```json\n    [\n    {\"Step 1\": \"Call tool 1 with input: 'input 1 name and content' and output: 'output 1 name and content'\"}\n    {\"Step 2\": \"Call tool 2 with input: 'input 2 name and content' and output: 'output 2 name and content'\"}\n    {\"Step 3\": \"Finish\"}\n    ]\n    ```\n    Based on this example, generate step-by-step tool calls to solve the given problem by breaking it down into sub-tasks and forming a connected path.\n\n    -----Tool Calls-----\n    \n\n", "value": 0.0}}]
[[[0, 0], [0, 1], [0, 2], [1, 3], [1, 4], [1, 5], [2, 6], [2, 7], [2, 8], [3, 9], [3, 10], [3, 11], [4, 12], [4, 13], [4, 14]], [[0, 1], [1, 2], [2, 3], [3, 4]], {"0": {"ucb": 1.6915149882393594, "p_ucb": 1.6915149882393594, "var_p_ucb": 1.8902695340883735, "action": "\n", "prob": 1.0}, "1": {"ucb": 2.537272482359039, "p_ucb": 2.537272482359039, "var_p_ucb": 2.8354043011325603, "action": "\n", "prob": 1.0}, "2": {"ucb": 2.537272482359039, "p_ucb": 2.537272482359039, "var_p_ucb": 2.8354043011325603, "action": "\n", "prob": 1.0}, "3": {"ucb": 2.09629414793641, "p_ucb": 2.09629414793641, "var_p_ucb": 2.2726303430794412, "action": "\n", "prob": 1.0}, "4": {"ucb": 4.19258829587282, "p_ucb": 4.19258829587282, "var_p_ucb": 4.5452606861588825, "action": "\n", "prob": 1.0}, "5": {"ucb": 4.19258829587282, "p_ucb": 4.19258829587282, "var_p_ucb": 4.5452606861588825, "action": "\n", "prob": 1.0}, "6": {"ucb": 3.3302184446307908, "p_ucb": 3.3302184446307908, "var_p_ucb": 3.5486510228161983, "action": "\n", "prob": 1.0}, "7": {"ucb": 3.3302184446307908, "p_ucb": 3.3302184446307908, "var_p_ucb": 3.5486510228161983, "action": "\n", "prob": 1.0}, "8": {"ucb": 3.3302184446307908, "p_ucb": 3.3302184446307908, "var_p_ucb": 3.5486510228161983, "action": "\n", "prob": 1.0}, "9": {"ucb": 3.3302184446307908, "p_ucb": 3.3302184446307908, "var_p_ucb": 3.5486510228161983, "action": "\n", "prob": 1.0}, "10": {"ucb": 3.3302184446307908, "p_ucb": 3.3302184446307908, "var_p_ucb": 3.5486510228161983, "action": "\n", "prob": 1.0}, "11": {"ucb": 3.3302184446307908, "p_ucb": 3.3302184446307908, "var_p_ucb": 3.5486510228161983, "action": "\n", "prob": 1.0}, "12": {"ucb": 3.3302184446307908, "p_ucb": 3.3302184446307908, "var_p_ucb": 3.5486510228161983, "action": "\n", "prob": 1.0}, "13": {"ucb": 3.3302184446307908, "p_ucb": 3.3302184446307908, "var_p_ucb": 3.5486510228161983, "action": "\n", "prob": 1.0}, "14": {"ucb": 3.3302184446307908, "p_ucb": 3.3302184446307908, "var_p_ucb": 3.5486510228161983, "action": "\n", "prob": 1.0}}, {"0": {"state": "\n    You are tasked with breaking down a complex user request into solvable sub-tasks by creating a task plan.\n\n    Problem Description:\n\n    # TASK LIST #:\n{\"id\": \"Image Downloader\", \"desc\": \"Downloads an image from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"image\"]}\n{\"id\": \"Video Downloader\", \"desc\": \"Downloads a video from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"video\"]}\n{\"id\": \"Audio Downloader\", \"desc\": \"Downloads an audio file from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Text Downloader\", \"desc\": \"Downloads the text content from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Search\", \"desc\": \"Searches for a specific text or keyword on the internet.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Image Search\", \"desc\": \"Searches for images on the internet based on a given query.\", \"input-type\": [\"text\"], \"output-type\": [\"Image\"]}\n{\"id\": \"Image Search (by Image)\", \"desc\": \"Performs a similar image search using an input image.\", \"input-type\": [\"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"URL Extractor\", \"desc\": \"Extracts URL from text\", \"input-type\": [\"text\"], \"output-type\": [\"url\"]}\n{\"id\": \"Video Search\", \"desc\": \"Searches for videos on the internet based on a given query.\", \"input-type\": [\"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Text-to-Image\", \"desc\": \"Generates an image based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"image\"]}\n{\"id\": \"Text-to-Video\", \"desc\": \"Generates a video based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Text-to-Audio\", \"desc\": \"Generates an audio file based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Image-to-Text\", \"desc\": \"Extracts text from an input image using Optical Character Recognition (OCR).\", \"input-type\": [\"image\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio-to-Text\", \"desc\": \"Transcribes speech from an audio file into text.\", \"input-type\": [\"audio\"], \"output-type\": [\"text\"]}\n{\"id\": \"Video-to-Text\", \"desc\": \"Transcribes speech from a video file into text.\", \"input-type\": [\"video\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio Noise Reduction\", \"desc\": \"Reduces background noise or unwanted sounds from a given audio file.\", \"input-type\": [\"audio\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Audio Effects\", \"desc\": \"Applies various audio effects to a given audio file according to human instruction, such as reverb, chorus, or equalization.\", \"input-type\": [\"audio\", \"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Audio Splicer\", \"desc\": \"Combines two audio files into a single output file.\", \"input-type\": [\"audio\", \"audio\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Voice Changer\", \"desc\": \"Modifies the characteristics of a recorded voice according to human instruction, such as tone, pitch, or gender.\", \"input-type\": [\"audio\", \"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Text Summarizer\", \"desc\": \"Summarizes a given text into a shorter version while retaining the main points.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Translator\", \"desc\": \"Translates a given text from one language to english.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Sentiment Analysis\", \"desc\": \"Analyzes the sentiment of a given text, identifying if it is positive, negative, or neutral.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Grammar Checker\", \"desc\": \"Checks a given text for grammatical errors and suggests corrections.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Simplifier\", \"desc\": \"Rewrites a given text in a simpler and more understandable manner.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Expander\", \"desc\": \"Expands a given short text into a more detailed and descriptive version.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Keyword Extractor\", \"desc\": \"Extracts the most important keywords and phrases from a given text.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Paraphraser\", \"desc\": \"Rewrites a given text using different words while maintaining its original meaning.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Article Spinner\", \"desc\": \"Rewrites a given article using synonyms and syntax changes to create a new, unique version.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Topic Generator\", \"desc\": \"Generates a list of relevant topics or ideas based on a given input.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio-to-Image\", \"desc\": \"Generates an image that visually represents a given audio, such as a waveform or spectrogram.\", \"input-type\": [\"audio\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image-to-Video\", \"desc\": \"Creates a slideshow video using two input images.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video-to-Audio\", \"desc\": \"Extracts the audio track from a given video file.\", \"input-type\": [\"video\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Video-to-Image\", \"desc\": \"Extracts a still image from a given video.\", \"input-type\": [\"video\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Stitcher\", \"desc\": \"Stitches together two input images to create a panorama or collage.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Colorizer\", \"desc\": \"Adds color to a black and white input image using deep learning techniques.\", \"input-type\": [\"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Style Transfer\", \"desc\": \"Applies the visual style of one image (style) to the content of another image (content) using neural style transfer techniques.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Video Stabilizer\", \"desc\": \"Stabilizes a shaky input video to produce a smoother output video.\", \"input-type\": [\"video\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Speed Changer\", \"desc\": \"Adjusts the playback speed of a given video according to human instruction, either speeding it up or slowing it down.\", \"input-type\": [\"video\", \"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Synchronization\", \"desc\": \"Synchronizes the timing of an existing voiceover or audio file with the visuals of a given video.\", \"input-type\": [\"video\", \"audio\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Voiceover\", \"desc\": \"Adds a voiceover to a given video using a provided script or text.\", \"input-type\": [\"video\", \"text\"], \"output-type\": [\"video\"]}\n\n        \n# GOAL #: Based on the above tools, I want you generate task steps and task nodes to solve the # USER REQUEST #. \n        The format must in a strict JSON format, like: {\"task_steps\": [one or more concrete steps, format as Step x: step description], \"task_nodes\": [{\"task\": \"tool name must be from # TASK LIST #\", \"arguments\": [ a concise list of arguments for the tool. Either original text, or user-mentioned filename, or tag '<node-j>' (start from 0) to refer to the output of the j-th node. ]}], \"task_links\": [{\"source\": \"task name i\", \"target\": \"task name j\"}]} \n        \n        # REQUIREMENTS #: \n        1. the generated task steps and task nodes can resolve the given user request # USER REQUEST # perfectly. Task name must be selected from # TASK LIST #;\n\n        2. the task steps should strictly aligned with the task nodes, and the number of task steps should be same with the task nodes;\n\n        3. the dependencies among task steps should align with the argument dependencies of the task nodes;\n\n        4. the tool arguments should be align with the input-type field of # TASK LIST #;\n\n        5. The task links (task_links) should reflect the temporal dependencies among task nodes, i.e. the order in which the APIs are invoked;\n\n        \nHere are provided examples for your reference.\n\n# EXAMPLE #:\n# USER REQUEST #: Please create a panorama using two images 'example1.jpg' and 'example2.jpg'.\n# RESULT #: {\"task_steps\": [\"Step 1: Use Image Stitcher to stitch together two images.\"], \"task_nodes\": [{\"task\": \"Image Stitcher\", \"arguments\": [\"example1.jpg\", \"example2.jpg\"]}], \"task_links\": []}\n    \n\n\n    # USER REQUEST #: I want to find similar images to example.jpg\n    now please generate your result in a strict JSON format:\n    # RESULT #:\n\n    Below is an example of step-by-step tool calls for planning a task to decompose a complex request into sub-tasks:\n\n    ```json\n    [\n    {\"Step 1\": \"Call tool 1 with input: 'input 1 name and content' and output: 'output 1 name and content'\"}\n    {\"Step 2\": \"Call tool 2 with input: 'input 2 name and content' and output: 'output 2 name and content'\"}\n    {\"Step 3\": \"Finish\"}\n    ]\n    ```\n    Based on this example, generate step-by-step tool calls to solve the given problem by breaking it down into sub-tasks and forming a connected path.\n\n    -----Tool Calls-----\n    ", "value": null}, "1": {"state": "\n    You are tasked with breaking down a complex user request into solvable sub-tasks by creating a task plan.\n\n    Problem Description:\n\n    # TASK LIST #:\n{\"id\": \"Image Downloader\", \"desc\": \"Downloads an image from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"image\"]}\n{\"id\": \"Video Downloader\", \"desc\": \"Downloads a video from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"video\"]}\n{\"id\": \"Audio Downloader\", \"desc\": \"Downloads an audio file from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Text Downloader\", \"desc\": \"Downloads the text content from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Search\", \"desc\": \"Searches for a specific text or keyword on the internet.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Image Search\", \"desc\": \"Searches for images on the internet based on a given query.\", \"input-type\": [\"text\"], \"output-type\": [\"Image\"]}\n{\"id\": \"Image Search (by Image)\", \"desc\": \"Performs a similar image search using an input image.\", \"input-type\": [\"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"URL Extractor\", \"desc\": \"Extracts URL from text\", \"input-type\": [\"text\"], \"output-type\": [\"url\"]}\n{\"id\": \"Video Search\", \"desc\": \"Searches for videos on the internet based on a given query.\", \"input-type\": [\"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Text-to-Image\", \"desc\": \"Generates an image based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"image\"]}\n{\"id\": \"Text-to-Video\", \"desc\": \"Generates a video based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Text-to-Audio\", \"desc\": \"Generates an audio file based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Image-to-Text\", \"desc\": \"Extracts text from an input image using Optical Character Recognition (OCR).\", \"input-type\": [\"image\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio-to-Text\", \"desc\": \"Transcribes speech from an audio file into text.\", \"input-type\": [\"audio\"], \"output-type\": [\"text\"]}\n{\"id\": \"Video-to-Text\", \"desc\": \"Transcribes speech from a video file into text.\", \"input-type\": [\"video\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio Noise Reduction\", \"desc\": \"Reduces background noise or unwanted sounds from a given audio file.\", \"input-type\": [\"audio\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Audio Effects\", \"desc\": \"Applies various audio effects to a given audio file according to human instruction, such as reverb, chorus, or equalization.\", \"input-type\": [\"audio\", \"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Audio Splicer\", \"desc\": \"Combines two audio files into a single output file.\", \"input-type\": [\"audio\", \"audio\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Voice Changer\", \"desc\": \"Modifies the characteristics of a recorded voice according to human instruction, such as tone, pitch, or gender.\", \"input-type\": [\"audio\", \"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Text Summarizer\", \"desc\": \"Summarizes a given text into a shorter version while retaining the main points.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Translator\", \"desc\": \"Translates a given text from one language to english.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Sentiment Analysis\", \"desc\": \"Analyzes the sentiment of a given text, identifying if it is positive, negative, or neutral.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Grammar Checker\", \"desc\": \"Checks a given text for grammatical errors and suggests corrections.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Simplifier\", \"desc\": \"Rewrites a given text in a simpler and more understandable manner.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Expander\", \"desc\": \"Expands a given short text into a more detailed and descriptive version.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Keyword Extractor\", \"desc\": \"Extracts the most important keywords and phrases from a given text.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Paraphraser\", \"desc\": \"Rewrites a given text using different words while maintaining its original meaning.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Article Spinner\", \"desc\": \"Rewrites a given article using synonyms and syntax changes to create a new, unique version.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Topic Generator\", \"desc\": \"Generates a list of relevant topics or ideas based on a given input.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio-to-Image\", \"desc\": \"Generates an image that visually represents a given audio, such as a waveform or spectrogram.\", \"input-type\": [\"audio\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image-to-Video\", \"desc\": \"Creates a slideshow video using two input images.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video-to-Audio\", \"desc\": \"Extracts the audio track from a given video file.\", \"input-type\": [\"video\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Video-to-Image\", \"desc\": \"Extracts a still image from a given video.\", \"input-type\": [\"video\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Stitcher\", \"desc\": \"Stitches together two input images to create a panorama or collage.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Colorizer\", \"desc\": \"Adds color to a black and white input image using deep learning techniques.\", \"input-type\": [\"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Style Transfer\", \"desc\": \"Applies the visual style of one image (style) to the content of another image (content) using neural style transfer techniques.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Video Stabilizer\", \"desc\": \"Stabilizes a shaky input video to produce a smoother output video.\", \"input-type\": [\"video\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Speed Changer\", \"desc\": \"Adjusts the playback speed of a given video according to human instruction, either speeding it up or slowing it down.\", \"input-type\": [\"video\", \"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Synchronization\", \"desc\": \"Synchronizes the timing of an existing voiceover or audio file with the visuals of a given video.\", \"input-type\": [\"video\", \"audio\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Voiceover\", \"desc\": \"Adds a voiceover to a given video using a provided script or text.\", \"input-type\": [\"video\", \"text\"], \"output-type\": [\"video\"]}\n\n        \n# GOAL #: Based on the above tools, I want you generate task steps and task nodes to solve the # USER REQUEST #. \n        The format must in a strict JSON format, like: {\"task_steps\": [one or more concrete steps, format as Step x: step description], \"task_nodes\": [{\"task\": \"tool name must be from # TASK LIST #\", \"arguments\": [ a concise list of arguments for the tool. Either original text, or user-mentioned filename, or tag '<node-j>' (start from 0) to refer to the output of the j-th node. ]}], \"task_links\": [{\"source\": \"task name i\", \"target\": \"task name j\"}]} \n        \n        # REQUIREMENTS #: \n        1. the generated task steps and task nodes can resolve the given user request # USER REQUEST # perfectly. Task name must be selected from # TASK LIST #;\n\n        2. the task steps should strictly aligned with the task nodes, and the number of task steps should be same with the task nodes;\n\n        3. the dependencies among task steps should align with the argument dependencies of the task nodes;\n\n        4. the tool arguments should be align with the input-type field of # TASK LIST #;\n\n        5. The task links (task_links) should reflect the temporal dependencies among task nodes, i.e. the order in which the APIs are invoked;\n\n        \nHere are provided examples for your reference.\n\n# EXAMPLE #:\n# USER REQUEST #: Please create a panorama using two images 'example1.jpg' and 'example2.jpg'.\n# RESULT #: {\"task_steps\": [\"Step 1: Use Image Stitcher to stitch together two images.\"], \"task_nodes\": [{\"task\": \"Image Stitcher\", \"arguments\": [\"example1.jpg\", \"example2.jpg\"]}], \"task_links\": []}\n    \n\n\n    # USER REQUEST #: I want to find similar images to example.jpg\n    now please generate your result in a strict JSON format:\n    # RESULT #:\n\n    Below is an example of step-by-step tool calls for planning a task to decompose a complex request into sub-tasks:\n\n    ```json\n    [\n    {\"Step 1\": \"Call tool 1 with input: 'input 1 name and content' and output: 'output 1 name and content'\"}\n    {\"Step 2\": \"Call tool 2 with input: 'input 2 name and content' and output: 'output 2 name and content'\"}\n    {\"Step 3\": \"Finish\"}\n    ]\n    ```\n    Based on this example, generate step-by-step tool calls to solve the given problem by breaking it down into sub-tasks and forming a connected path.\n\n    -----Tool Calls-----\n    \n", "value": 0.0}, "2": {"state": "\n    You are tasked with breaking down a complex user request into solvable sub-tasks by creating a task plan.\n\n    Problem Description:\n\n    # TASK LIST #:\n{\"id\": \"Image Downloader\", \"desc\": \"Downloads an image from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"image\"]}\n{\"id\": \"Video Downloader\", \"desc\": \"Downloads a video from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"video\"]}\n{\"id\": \"Audio Downloader\", \"desc\": \"Downloads an audio file from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Text Downloader\", \"desc\": \"Downloads the text content from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Search\", \"desc\": \"Searches for a specific text or keyword on the internet.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Image Search\", \"desc\": \"Searches for images on the internet based on a given query.\", \"input-type\": [\"text\"], \"output-type\": [\"Image\"]}\n{\"id\": \"Image Search (by Image)\", \"desc\": \"Performs a similar image search using an input image.\", \"input-type\": [\"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"URL Extractor\", \"desc\": \"Extracts URL from text\", \"input-type\": [\"text\"], \"output-type\": [\"url\"]}\n{\"id\": \"Video Search\", \"desc\": \"Searches for videos on the internet based on a given query.\", \"input-type\": [\"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Text-to-Image\", \"desc\": \"Generates an image based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"image\"]}\n{\"id\": \"Text-to-Video\", \"desc\": \"Generates a video based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Text-to-Audio\", \"desc\": \"Generates an audio file based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Image-to-Text\", \"desc\": \"Extracts text from an input image using Optical Character Recognition (OCR).\", \"input-type\": [\"image\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio-to-Text\", \"desc\": \"Transcribes speech from an audio file into text.\", \"input-type\": [\"audio\"], \"output-type\": [\"text\"]}\n{\"id\": \"Video-to-Text\", \"desc\": \"Transcribes speech from a video file into text.\", \"input-type\": [\"video\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio Noise Reduction\", \"desc\": \"Reduces background noise or unwanted sounds from a given audio file.\", \"input-type\": [\"audio\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Audio Effects\", \"desc\": \"Applies various audio effects to a given audio file according to human instruction, such as reverb, chorus, or equalization.\", \"input-type\": [\"audio\", \"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Audio Splicer\", \"desc\": \"Combines two audio files into a single output file.\", \"input-type\": [\"audio\", \"audio\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Voice Changer\", \"desc\": \"Modifies the characteristics of a recorded voice according to human instruction, such as tone, pitch, or gender.\", \"input-type\": [\"audio\", \"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Text Summarizer\", \"desc\": \"Summarizes a given text into a shorter version while retaining the main points.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Translator\", \"desc\": \"Translates a given text from one language to english.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Sentiment Analysis\", \"desc\": \"Analyzes the sentiment of a given text, identifying if it is positive, negative, or neutral.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Grammar Checker\", \"desc\": \"Checks a given text for grammatical errors and suggests corrections.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Simplifier\", \"desc\": \"Rewrites a given text in a simpler and more understandable manner.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Expander\", \"desc\": \"Expands a given short text into a more detailed and descriptive version.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Keyword Extractor\", \"desc\": \"Extracts the most important keywords and phrases from a given text.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Paraphraser\", \"desc\": \"Rewrites a given text using different words while maintaining its original meaning.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Article Spinner\", \"desc\": \"Rewrites a given article using synonyms and syntax changes to create a new, unique version.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Topic Generator\", \"desc\": \"Generates a list of relevant topics or ideas based on a given input.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio-to-Image\", \"desc\": \"Generates an image that visually represents a given audio, such as a waveform or spectrogram.\", \"input-type\": [\"audio\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image-to-Video\", \"desc\": \"Creates a slideshow video using two input images.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video-to-Audio\", \"desc\": \"Extracts the audio track from a given video file.\", \"input-type\": [\"video\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Video-to-Image\", \"desc\": \"Extracts a still image from a given video.\", \"input-type\": [\"video\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Stitcher\", \"desc\": \"Stitches together two input images to create a panorama or collage.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Colorizer\", \"desc\": \"Adds color to a black and white input image using deep learning techniques.\", \"input-type\": [\"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Style Transfer\", \"desc\": \"Applies the visual style of one image (style) to the content of another image (content) using neural style transfer techniques.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Video Stabilizer\", \"desc\": \"Stabilizes a shaky input video to produce a smoother output video.\", \"input-type\": [\"video\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Speed Changer\", \"desc\": \"Adjusts the playback speed of a given video according to human instruction, either speeding it up or slowing it down.\", \"input-type\": [\"video\", \"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Synchronization\", \"desc\": \"Synchronizes the timing of an existing voiceover or audio file with the visuals of a given video.\", \"input-type\": [\"video\", \"audio\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Voiceover\", \"desc\": \"Adds a voiceover to a given video using a provided script or text.\", \"input-type\": [\"video\", \"text\"], \"output-type\": [\"video\"]}\n\n        \n# GOAL #: Based on the above tools, I want you generate task steps and task nodes to solve the # USER REQUEST #. \n        The format must in a strict JSON format, like: {\"task_steps\": [one or more concrete steps, format as Step x: step description], \"task_nodes\": [{\"task\": \"tool name must be from # TASK LIST #\", \"arguments\": [ a concise list of arguments for the tool. Either original text, or user-mentioned filename, or tag '<node-j>' (start from 0) to refer to the output of the j-th node. ]}], \"task_links\": [{\"source\": \"task name i\", \"target\": \"task name j\"}]} \n        \n        # REQUIREMENTS #: \n        1. the generated task steps and task nodes can resolve the given user request # USER REQUEST # perfectly. Task name must be selected from # TASK LIST #;\n\n        2. the task steps should strictly aligned with the task nodes, and the number of task steps should be same with the task nodes;\n\n        3. the dependencies among task steps should align with the argument dependencies of the task nodes;\n\n        4. the tool arguments should be align with the input-type field of # TASK LIST #;\n\n        5. The task links (task_links) should reflect the temporal dependencies among task nodes, i.e. the order in which the APIs are invoked;\n\n        \nHere are provided examples for your reference.\n\n# EXAMPLE #:\n# USER REQUEST #: Please create a panorama using two images 'example1.jpg' and 'example2.jpg'.\n# RESULT #: {\"task_steps\": [\"Step 1: Use Image Stitcher to stitch together two images.\"], \"task_nodes\": [{\"task\": \"Image Stitcher\", \"arguments\": [\"example1.jpg\", \"example2.jpg\"]}], \"task_links\": []}\n    \n\n\n    # USER REQUEST #: I want to find similar images to example.jpg\n    now please generate your result in a strict JSON format:\n    # RESULT #:\n\n    Below is an example of step-by-step tool calls for planning a task to decompose a complex request into sub-tasks:\n\n    ```json\n    [\n    {\"Step 1\": \"Call tool 1 with input: 'input 1 name and content' and output: 'output 1 name and content'\"}\n    {\"Step 2\": \"Call tool 2 with input: 'input 2 name and content' and output: 'output 2 name and content'\"}\n    {\"Step 3\": \"Finish\"}\n    ]\n    ```\n    Based on this example, generate step-by-step tool calls to solve the given problem by breaking it down into sub-tasks and forming a connected path.\n\n    -----Tool Calls-----\n    \n", "value": 0.0}, "3": {"state": "\n    You are tasked with breaking down a complex user request into solvable sub-tasks by creating a task plan.\n\n    Problem Description:\n\n    # TASK LIST #:\n{\"id\": \"Image Downloader\", \"desc\": \"Downloads an image from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"image\"]}\n{\"id\": \"Video Downloader\", \"desc\": \"Downloads a video from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"video\"]}\n{\"id\": \"Audio Downloader\", \"desc\": \"Downloads an audio file from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Text Downloader\", \"desc\": \"Downloads the text content from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Search\", \"desc\": \"Searches for a specific text or keyword on the internet.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Image Search\", \"desc\": \"Searches for images on the internet based on a given query.\", \"input-type\": [\"text\"], \"output-type\": [\"Image\"]}\n{\"id\": \"Image Search (by Image)\", \"desc\": \"Performs a similar image search using an input image.\", \"input-type\": [\"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"URL Extractor\", \"desc\": \"Extracts URL from text\", \"input-type\": [\"text\"], \"output-type\": [\"url\"]}\n{\"id\": \"Video Search\", \"desc\": \"Searches for videos on the internet based on a given query.\", \"input-type\": [\"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Text-to-Image\", \"desc\": \"Generates an image based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"image\"]}\n{\"id\": \"Text-to-Video\", \"desc\": \"Generates a video based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Text-to-Audio\", \"desc\": \"Generates an audio file based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Image-to-Text\", \"desc\": \"Extracts text from an input image using Optical Character Recognition (OCR).\", \"input-type\": [\"image\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio-to-Text\", \"desc\": \"Transcribes speech from an audio file into text.\", \"input-type\": [\"audio\"], \"output-type\": [\"text\"]}\n{\"id\": \"Video-to-Text\", \"desc\": \"Transcribes speech from a video file into text.\", \"input-type\": [\"video\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio Noise Reduction\", \"desc\": \"Reduces background noise or unwanted sounds from a given audio file.\", \"input-type\": [\"audio\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Audio Effects\", \"desc\": \"Applies various audio effects to a given audio file according to human instruction, such as reverb, chorus, or equalization.\", \"input-type\": [\"audio\", \"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Audio Splicer\", \"desc\": \"Combines two audio files into a single output file.\", \"input-type\": [\"audio\", \"audio\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Voice Changer\", \"desc\": \"Modifies the characteristics of a recorded voice according to human instruction, such as tone, pitch, or gender.\", \"input-type\": [\"audio\", \"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Text Summarizer\", \"desc\": \"Summarizes a given text into a shorter version while retaining the main points.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Translator\", \"desc\": \"Translates a given text from one language to english.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Sentiment Analysis\", \"desc\": \"Analyzes the sentiment of a given text, identifying if it is positive, negative, or neutral.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Grammar Checker\", \"desc\": \"Checks a given text for grammatical errors and suggests corrections.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Simplifier\", \"desc\": \"Rewrites a given text in a simpler and more understandable manner.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Expander\", \"desc\": \"Expands a given short text into a more detailed and descriptive version.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Keyword Extractor\", \"desc\": \"Extracts the most important keywords and phrases from a given text.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Paraphraser\", \"desc\": \"Rewrites a given text using different words while maintaining its original meaning.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Article Spinner\", \"desc\": \"Rewrites a given article using synonyms and syntax changes to create a new, unique version.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Topic Generator\", \"desc\": \"Generates a list of relevant topics or ideas based on a given input.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio-to-Image\", \"desc\": \"Generates an image that visually represents a given audio, such as a waveform or spectrogram.\", \"input-type\": [\"audio\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image-to-Video\", \"desc\": \"Creates a slideshow video using two input images.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video-to-Audio\", \"desc\": \"Extracts the audio track from a given video file.\", \"input-type\": [\"video\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Video-to-Image\", \"desc\": \"Extracts a still image from a given video.\", \"input-type\": [\"video\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Stitcher\", \"desc\": \"Stitches together two input images to create a panorama or collage.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Colorizer\", \"desc\": \"Adds color to a black and white input image using deep learning techniques.\", \"input-type\": [\"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Style Transfer\", \"desc\": \"Applies the visual style of one image (style) to the content of another image (content) using neural style transfer techniques.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Video Stabilizer\", \"desc\": \"Stabilizes a shaky input video to produce a smoother output video.\", \"input-type\": [\"video\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Speed Changer\", \"desc\": \"Adjusts the playback speed of a given video according to human instruction, either speeding it up or slowing it down.\", \"input-type\": [\"video\", \"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Synchronization\", \"desc\": \"Synchronizes the timing of an existing voiceover or audio file with the visuals of a given video.\", \"input-type\": [\"video\", \"audio\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Voiceover\", \"desc\": \"Adds a voiceover to a given video using a provided script or text.\", \"input-type\": [\"video\", \"text\"], \"output-type\": [\"video\"]}\n\n        \n# GOAL #: Based on the above tools, I want you generate task steps and task nodes to solve the # USER REQUEST #. \n        The format must in a strict JSON format, like: {\"task_steps\": [one or more concrete steps, format as Step x: step description], \"task_nodes\": [{\"task\": \"tool name must be from # TASK LIST #\", \"arguments\": [ a concise list of arguments for the tool. Either original text, or user-mentioned filename, or tag '<node-j>' (start from 0) to refer to the output of the j-th node. ]}], \"task_links\": [{\"source\": \"task name i\", \"target\": \"task name j\"}]} \n        \n        # REQUIREMENTS #: \n        1. the generated task steps and task nodes can resolve the given user request # USER REQUEST # perfectly. Task name must be selected from # TASK LIST #;\n\n        2. the task steps should strictly aligned with the task nodes, and the number of task steps should be same with the task nodes;\n\n        3. the dependencies among task steps should align with the argument dependencies of the task nodes;\n\n        4. the tool arguments should be align with the input-type field of # TASK LIST #;\n\n        5. The task links (task_links) should reflect the temporal dependencies among task nodes, i.e. the order in which the APIs are invoked;\n\n        \nHere are provided examples for your reference.\n\n# EXAMPLE #:\n# USER REQUEST #: Please create a panorama using two images 'example1.jpg' and 'example2.jpg'.\n# RESULT #: {\"task_steps\": [\"Step 1: Use Image Stitcher to stitch together two images.\"], \"task_nodes\": [{\"task\": \"Image Stitcher\", \"arguments\": [\"example1.jpg\", \"example2.jpg\"]}], \"task_links\": []}\n    \n\n\n    # USER REQUEST #: I want to find similar images to example.jpg\n    now please generate your result in a strict JSON format:\n    # RESULT #:\n\n    Below is an example of step-by-step tool calls for planning a task to decompose a complex request into sub-tasks:\n\n    ```json\n    [\n    {\"Step 1\": \"Call tool 1 with input: 'input 1 name and content' and output: 'output 1 name and content'\"}\n    {\"Step 2\": \"Call tool 2 with input: 'input 2 name and content' and output: 'output 2 name and content'\"}\n    {\"Step 3\": \"Finish\"}\n    ]\n    ```\n    Based on this example, generate step-by-step tool calls to solve the given problem by breaking it down into sub-tasks and forming a connected path.\n\n    -----Tool Calls-----\n    \n", "value": 0.0}, "4": {"state": "\n    You are tasked with breaking down a complex user request into solvable sub-tasks by creating a task plan.\n\n    Problem Description:\n\n    # TASK LIST #:\n{\"id\": \"Image Downloader\", \"desc\": \"Downloads an image from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"image\"]}\n{\"id\": \"Video Downloader\", \"desc\": \"Downloads a video from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"video\"]}\n{\"id\": \"Audio Downloader\", \"desc\": \"Downloads an audio file from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Text Downloader\", \"desc\": \"Downloads the text content from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Search\", \"desc\": \"Searches for a specific text or keyword on the internet.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Image Search\", \"desc\": \"Searches for images on the internet based on a given query.\", \"input-type\": [\"text\"], \"output-type\": [\"Image\"]}\n{\"id\": \"Image Search (by Image)\", \"desc\": \"Performs a similar image search using an input image.\", \"input-type\": [\"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"URL Extractor\", \"desc\": \"Extracts URL from text\", \"input-type\": [\"text\"], \"output-type\": [\"url\"]}\n{\"id\": \"Video Search\", \"desc\": \"Searches for videos on the internet based on a given query.\", \"input-type\": [\"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Text-to-Image\", \"desc\": \"Generates an image based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"image\"]}\n{\"id\": \"Text-to-Video\", \"desc\": \"Generates a video based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Text-to-Audio\", \"desc\": \"Generates an audio file based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Image-to-Text\", \"desc\": \"Extracts text from an input image using Optical Character Recognition (OCR).\", \"input-type\": [\"image\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio-to-Text\", \"desc\": \"Transcribes speech from an audio file into text.\", \"input-type\": [\"audio\"], \"output-type\": [\"text\"]}\n{\"id\": \"Video-to-Text\", \"desc\": \"Transcribes speech from a video file into text.\", \"input-type\": [\"video\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio Noise Reduction\", \"desc\": \"Reduces background noise or unwanted sounds from a given audio file.\", \"input-type\": [\"audio\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Audio Effects\", \"desc\": \"Applies various audio effects to a given audio file according to human instruction, such as reverb, chorus, or equalization.\", \"input-type\": [\"audio\", \"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Audio Splicer\", \"desc\": \"Combines two audio files into a single output file.\", \"input-type\": [\"audio\", \"audio\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Voice Changer\", \"desc\": \"Modifies the characteristics of a recorded voice according to human instruction, such as tone, pitch, or gender.\", \"input-type\": [\"audio\", \"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Text Summarizer\", \"desc\": \"Summarizes a given text into a shorter version while retaining the main points.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Translator\", \"desc\": \"Translates a given text from one language to english.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Sentiment Analysis\", \"desc\": \"Analyzes the sentiment of a given text, identifying if it is positive, negative, or neutral.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Grammar Checker\", \"desc\": \"Checks a given text for grammatical errors and suggests corrections.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Simplifier\", \"desc\": \"Rewrites a given text in a simpler and more understandable manner.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Expander\", \"desc\": \"Expands a given short text into a more detailed and descriptive version.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Keyword Extractor\", \"desc\": \"Extracts the most important keywords and phrases from a given text.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Paraphraser\", \"desc\": \"Rewrites a given text using different words while maintaining its original meaning.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Article Spinner\", \"desc\": \"Rewrites a given article using synonyms and syntax changes to create a new, unique version.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Topic Generator\", \"desc\": \"Generates a list of relevant topics or ideas based on a given input.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio-to-Image\", \"desc\": \"Generates an image that visually represents a given audio, such as a waveform or spectrogram.\", \"input-type\": [\"audio\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image-to-Video\", \"desc\": \"Creates a slideshow video using two input images.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video-to-Audio\", \"desc\": \"Extracts the audio track from a given video file.\", \"input-type\": [\"video\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Video-to-Image\", \"desc\": \"Extracts a still image from a given video.\", \"input-type\": [\"video\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Stitcher\", \"desc\": \"Stitches together two input images to create a panorama or collage.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Colorizer\", \"desc\": \"Adds color to a black and white input image using deep learning techniques.\", \"input-type\": [\"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Style Transfer\", \"desc\": \"Applies the visual style of one image (style) to the content of another image (content) using neural style transfer techniques.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Video Stabilizer\", \"desc\": \"Stabilizes a shaky input video to produce a smoother output video.\", \"input-type\": [\"video\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Speed Changer\", \"desc\": \"Adjusts the playback speed of a given video according to human instruction, either speeding it up or slowing it down.\", \"input-type\": [\"video\", \"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Synchronization\", \"desc\": \"Synchronizes the timing of an existing voiceover or audio file with the visuals of a given video.\", \"input-type\": [\"video\", \"audio\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Voiceover\", \"desc\": \"Adds a voiceover to a given video using a provided script or text.\", \"input-type\": [\"video\", \"text\"], \"output-type\": [\"video\"]}\n\n        \n# GOAL #: Based on the above tools, I want you generate task steps and task nodes to solve the # USER REQUEST #. \n        The format must in a strict JSON format, like: {\"task_steps\": [one or more concrete steps, format as Step x: step description], \"task_nodes\": [{\"task\": \"tool name must be from # TASK LIST #\", \"arguments\": [ a concise list of arguments for the tool. Either original text, or user-mentioned filename, or tag '<node-j>' (start from 0) to refer to the output of the j-th node. ]}], \"task_links\": [{\"source\": \"task name i\", \"target\": \"task name j\"}]} \n        \n        # REQUIREMENTS #: \n        1. the generated task steps and task nodes can resolve the given user request # USER REQUEST # perfectly. Task name must be selected from # TASK LIST #;\n\n        2. the task steps should strictly aligned with the task nodes, and the number of task steps should be same with the task nodes;\n\n        3. the dependencies among task steps should align with the argument dependencies of the task nodes;\n\n        4. the tool arguments should be align with the input-type field of # TASK LIST #;\n\n        5. The task links (task_links) should reflect the temporal dependencies among task nodes, i.e. the order in which the APIs are invoked;\n\n        \nHere are provided examples for your reference.\n\n# EXAMPLE #:\n# USER REQUEST #: Please create a panorama using two images 'example1.jpg' and 'example2.jpg'.\n# RESULT #: {\"task_steps\": [\"Step 1: Use Image Stitcher to stitch together two images.\"], \"task_nodes\": [{\"task\": \"Image Stitcher\", \"arguments\": [\"example1.jpg\", \"example2.jpg\"]}], \"task_links\": []}\n    \n\n\n    # USER REQUEST #: I want to find similar images to example.jpg\n    now please generate your result in a strict JSON format:\n    # RESULT #:\n\n    Below is an example of step-by-step tool calls for planning a task to decompose a complex request into sub-tasks:\n\n    ```json\n    [\n    {\"Step 1\": \"Call tool 1 with input: 'input 1 name and content' and output: 'output 1 name and content'\"}\n    {\"Step 2\": \"Call tool 2 with input: 'input 2 name and content' and output: 'output 2 name and content'\"}\n    {\"Step 3\": \"Finish\"}\n    ]\n    ```\n    Based on this example, generate step-by-step tool calls to solve the given problem by breaking it down into sub-tasks and forming a connected path.\n\n    -----Tool Calls-----\n    \n\n", "value": 0.0}}]
[[[0, 0], [0, 1], [0, 2], [1, 3], [1, 4], [1, 5], [2, 6], [2, 7], [2, 8], [3, 9], [3, 10], [3, 11], [4, 12], [4, 13], [4, 14]], [[0, 1], [1, 2], [2, 3], [5, 4]], {"0": {"ucb": 1.6915149882393594, "p_ucb": 1.6915149882393594, "var_p_ucb": 1.8902695340883735, "action": "\n", "prob": 1.0}, "1": {"ucb": 2.537272482359039, "p_ucb": 2.537272482359039, "var_p_ucb": 2.8354043011325603, "action": "\n", "prob": 1.0}, "2": {"ucb": 2.537272482359039, "p_ucb": 2.537272482359039, "var_p_ucb": 2.8354043011325603, "action": "\n", "prob": 1.0}, "3": {"ucb": 4.19258829587282, "p_ucb": 3.773329466285538, "var_p_ucb": 4.090734617542994, "action": "Tool Call of Step 2:Call Text-to-Video tool with input: 'example.mp4' and output: '<node-1>'\n", "prob": 0.9}, "4": {"ucb": 4.19258829587282, "p_ucb": 3.5637000514918973, "var_p_ucb": 3.8634715832350497, "action": "Tool Call of Step 2:Call Text-to-Video tool with input: '<node-1>' and output: '<node-2>'\n", "prob": 0.85}, "5": {"ucb": 2.09629414793641, "p_ucb": 2.09629414793641, "var_p_ucb": 2.2726303430794412, "action": "", "prob": 1.0}, "6": {"ucb": 3.3302184446307908, "p_ucb": 2.9971966001677117, "var_p_ucb": 3.193785920534579, "action": "Tool Call of Step 2:Call Text-to-Video tool with input: 'example.mp4' and output: '<node-1>'\n", "prob": 0.9}, "7": {"ucb": 3.3302184446307908, "p_ucb": 2.830685677936172, "var_p_ucb": 3.0163533693937685, "action": "Tool Call of Step 2:Call Text-to-Video tool with input: '<node-1>' and output: '<node-2>'\n", "prob": 0.85}, "8": {"ucb": 3.3302184446307908, "p_ucb": 3.3302184446307908, "var_p_ucb": 3.5486510228161983, "action": "", "prob": 1.0}, "9": {"ucb": 3.3302184446307908, "p_ucb": 2.9971966001677117, "var_p_ucb": 3.193785920534579, "action": "Tool Call of Step 2:Call Text-to-Video tool with input: 'example.mp4' and output: '<node-1>'\n", "prob": 0.9}, "10": {"ucb": 3.3302184446307908, "p_ucb": 2.830685677936172, "var_p_ucb": 3.0163533693937685, "action": "Tool Call of Step 2:Call Text-to-Video tool with input: '<node-1>' and output: '<node-2>'\n", "prob": 0.85}, "11": {"ucb": 3.3302184446307908, "p_ucb": 3.3302184446307908, "var_p_ucb": 3.5486510228161983, "action": "", "prob": 1.0}, "12": {"ucb": 3.3302184446307908, "p_ucb": 3.3302184446307908, "var_p_ucb": 3.5486510228161983, "action": "\n", "prob": 1.0}, "13": {"ucb": 3.3302184446307908, "p_ucb": 3.3302184446307908, "var_p_ucb": 3.5486510228161983, "action": "\n", "prob": 1.0}, "14": {"ucb": 3.3302184446307908, "p_ucb": 3.3302184446307908, "var_p_ucb": 3.5486510228161983, "action": "\n", "prob": 1.0}}, {"0": {"state": "\n    You are tasked with breaking down a complex user request into solvable sub-tasks by creating a task plan.\n\n    Problem Description:\n\n    # TASK LIST #:\n{\"id\": \"Image Downloader\", \"desc\": \"Downloads an image from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"image\"]}\n{\"id\": \"Video Downloader\", \"desc\": \"Downloads a video from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"video\"]}\n{\"id\": \"Audio Downloader\", \"desc\": \"Downloads an audio file from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Text Downloader\", \"desc\": \"Downloads the text content from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Search\", \"desc\": \"Searches for a specific text or keyword on the internet.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Image Search\", \"desc\": \"Searches for images on the internet based on a given query.\", \"input-type\": [\"text\"], \"output-type\": [\"Image\"]}\n{\"id\": \"Image Search (by Image)\", \"desc\": \"Performs a similar image search using an input image.\", \"input-type\": [\"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"URL Extractor\", \"desc\": \"Extracts URL from text\", \"input-type\": [\"text\"], \"output-type\": [\"url\"]}\n{\"id\": \"Video Search\", \"desc\": \"Searches for videos on the internet based on a given query.\", \"input-type\": [\"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Text-to-Image\", \"desc\": \"Generates an image based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"image\"]}\n{\"id\": \"Text-to-Video\", \"desc\": \"Generates a video based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Text-to-Audio\", \"desc\": \"Generates an audio file based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Image-to-Text\", \"desc\": \"Extracts text from an input image using Optical Character Recognition (OCR).\", \"input-type\": [\"image\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio-to-Text\", \"desc\": \"Transcribes speech from an audio file into text.\", \"input-type\": [\"audio\"], \"output-type\": [\"text\"]}\n{\"id\": \"Video-to-Text\", \"desc\": \"Transcribes speech from a video file into text.\", \"input-type\": [\"video\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio Noise Reduction\", \"desc\": \"Reduces background noise or unwanted sounds from a given audio file.\", \"input-type\": [\"audio\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Audio Effects\", \"desc\": \"Applies various audio effects to a given audio file according to human instruction, such as reverb, chorus, or equalization.\", \"input-type\": [\"audio\", \"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Audio Splicer\", \"desc\": \"Combines two audio files into a single output file.\", \"input-type\": [\"audio\", \"audio\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Voice Changer\", \"desc\": \"Modifies the characteristics of a recorded voice according to human instruction, such as tone, pitch, or gender.\", \"input-type\": [\"audio\", \"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Text Summarizer\", \"desc\": \"Summarizes a given text into a shorter version while retaining the main points.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Translator\", \"desc\": \"Translates a given text from one language to english.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Sentiment Analysis\", \"desc\": \"Analyzes the sentiment of a given text, identifying if it is positive, negative, or neutral.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Grammar Checker\", \"desc\": \"Checks a given text for grammatical errors and suggests corrections.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Simplifier\", \"desc\": \"Rewrites a given text in a simpler and more understandable manner.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Expander\", \"desc\": \"Expands a given short text into a more detailed and descriptive version.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Keyword Extractor\", \"desc\": \"Extracts the most important keywords and phrases from a given text.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Paraphraser\", \"desc\": \"Rewrites a given text using different words while maintaining its original meaning.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Article Spinner\", \"desc\": \"Rewrites a given article using synonyms and syntax changes to create a new, unique version.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Topic Generator\", \"desc\": \"Generates a list of relevant topics or ideas based on a given input.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio-to-Image\", \"desc\": \"Generates an image that visually represents a given audio, such as a waveform or spectrogram.\", \"input-type\": [\"audio\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image-to-Video\", \"desc\": \"Creates a slideshow video using two input images.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video-to-Audio\", \"desc\": \"Extracts the audio track from a given video file.\", \"input-type\": [\"video\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Video-to-Image\", \"desc\": \"Extracts a still image from a given video.\", \"input-type\": [\"video\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Stitcher\", \"desc\": \"Stitches together two input images to create a panorama or collage.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Colorizer\", \"desc\": \"Adds color to a black and white input image using deep learning techniques.\", \"input-type\": [\"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Style Transfer\", \"desc\": \"Applies the visual style of one image (style) to the content of another image (content) using neural style transfer techniques.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Video Stabilizer\", \"desc\": \"Stabilizes a shaky input video to produce a smoother output video.\", \"input-type\": [\"video\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Speed Changer\", \"desc\": \"Adjusts the playback speed of a given video according to human instruction, either speeding it up or slowing it down.\", \"input-type\": [\"video\", \"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Synchronization\", \"desc\": \"Synchronizes the timing of an existing voiceover or audio file with the visuals of a given video.\", \"input-type\": [\"video\", \"audio\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Voiceover\", \"desc\": \"Adds a voiceover to a given video using a provided script or text.\", \"input-type\": [\"video\", \"text\"], \"output-type\": [\"video\"]}\n\n        \n# GOAL #: Based on the above tools, I want you generate task steps and task nodes to solve the # USER REQUEST #. \n        The format must in a strict JSON format, like: {\"task_steps\": [one or more concrete steps, format as Step x: step description], \"task_nodes\": [{\"task\": \"tool name must be from # TASK LIST #\", \"arguments\": [ a concise list of arguments for the tool. Either original text, or user-mentioned filename, or tag '<node-j>' (start from 0) to refer to the output of the j-th node. ]}], \"task_links\": [{\"source\": \"task name i\", \"target\": \"task name j\"}]} \n        \n        # REQUIREMENTS #: \n        1. the generated task steps and task nodes can resolve the given user request # USER REQUEST # perfectly. Task name must be selected from # TASK LIST #;\n\n        2. the task steps should strictly aligned with the task nodes, and the number of task steps should be same with the task nodes;\n\n        3. the dependencies among task steps should align with the argument dependencies of the task nodes;\n\n        4. the tool arguments should be align with the input-type field of # TASK LIST #;\n\n        5. The task links (task_links) should reflect the temporal dependencies among task nodes, i.e. the order in which the APIs are invoked;\n\n        \nHere are provided examples for your reference.\n\n# EXAMPLE #:\n# USER REQUEST #: Please create a panorama using two images 'example1.jpg' and 'example2.jpg'.\n# RESULT #: {\"task_steps\": [\"Step 1: Use Image Stitcher to stitch together two images.\"], \"task_nodes\": [{\"task\": \"Image Stitcher\", \"arguments\": [\"example1.jpg\", \"example2.jpg\"]}], \"task_links\": []}\n    \n\n\n    # USER REQUEST #: I have a video 'example.mp4' and a related complex text. I want to summarize and simplify the text, then add it as a voiceover to my video. The text is: 'Machine learning is a method of data analysis that automates analytical model building. It is a branch of artificial intelligence based on the idea that systems can learn from data, identify patterns, and make decisions with minimal human intervention.'\n    now please generate your result in a strict JSON format:\n    # RESULT #:\n\n    Below is an example of step-by-step tool calls for planning a task to decompose a complex request into sub-tasks:\n\n    ```json\n    [\n    {\"Step 1\": \"Call tool 1 with input: 'input 1 name and content' and output: 'output 1 name and content'\"}\n    {\"Step 2\": \"Call tool 2 with input: 'input 2 name and content' and output: 'output 2 name and content'\"}\n    {\"Step 3\": \"Finish\"}\n    ]\n    ```\n    Based on this example, generate step-by-step tool calls to solve the given problem by breaking it down into sub-tasks and forming a connected path.\n\n    -----Tool Calls-----\n    ", "value": null}, "1": {"state": "\n    You are tasked with breaking down a complex user request into solvable sub-tasks by creating a task plan.\n\n    Problem Description:\n\n    # TASK LIST #:\n{\"id\": \"Image Downloader\", \"desc\": \"Downloads an image from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"image\"]}\n{\"id\": \"Video Downloader\", \"desc\": \"Downloads a video from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"video\"]}\n{\"id\": \"Audio Downloader\", \"desc\": \"Downloads an audio file from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Text Downloader\", \"desc\": \"Downloads the text content from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Search\", \"desc\": \"Searches for a specific text or keyword on the internet.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Image Search\", \"desc\": \"Searches for images on the internet based on a given query.\", \"input-type\": [\"text\"], \"output-type\": [\"Image\"]}\n{\"id\": \"Image Search (by Image)\", \"desc\": \"Performs a similar image search using an input image.\", \"input-type\": [\"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"URL Extractor\", \"desc\": \"Extracts URL from text\", \"input-type\": [\"text\"], \"output-type\": [\"url\"]}\n{\"id\": \"Video Search\", \"desc\": \"Searches for videos on the internet based on a given query.\", \"input-type\": [\"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Text-to-Image\", \"desc\": \"Generates an image based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"image\"]}\n{\"id\": \"Text-to-Video\", \"desc\": \"Generates a video based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Text-to-Audio\", \"desc\": \"Generates an audio file based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Image-to-Text\", \"desc\": \"Extracts text from an input image using Optical Character Recognition (OCR).\", \"input-type\": [\"image\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio-to-Text\", \"desc\": \"Transcribes speech from an audio file into text.\", \"input-type\": [\"audio\"], \"output-type\": [\"text\"]}\n{\"id\": \"Video-to-Text\", \"desc\": \"Transcribes speech from a video file into text.\", \"input-type\": [\"video\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio Noise Reduction\", \"desc\": \"Reduces background noise or unwanted sounds from a given audio file.\", \"input-type\": [\"audio\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Audio Effects\", \"desc\": \"Applies various audio effects to a given audio file according to human instruction, such as reverb, chorus, or equalization.\", \"input-type\": [\"audio\", \"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Audio Splicer\", \"desc\": \"Combines two audio files into a single output file.\", \"input-type\": [\"audio\", \"audio\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Voice Changer\", \"desc\": \"Modifies the characteristics of a recorded voice according to human instruction, such as tone, pitch, or gender.\", \"input-type\": [\"audio\", \"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Text Summarizer\", \"desc\": \"Summarizes a given text into a shorter version while retaining the main points.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Translator\", \"desc\": \"Translates a given text from one language to english.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Sentiment Analysis\", \"desc\": \"Analyzes the sentiment of a given text, identifying if it is positive, negative, or neutral.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Grammar Checker\", \"desc\": \"Checks a given text for grammatical errors and suggests corrections.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Simplifier\", \"desc\": \"Rewrites a given text in a simpler and more understandable manner.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Expander\", \"desc\": \"Expands a given short text into a more detailed and descriptive version.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Keyword Extractor\", \"desc\": \"Extracts the most important keywords and phrases from a given text.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Paraphraser\", \"desc\": \"Rewrites a given text using different words while maintaining its original meaning.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Article Spinner\", \"desc\": \"Rewrites a given article using synonyms and syntax changes to create a new, unique version.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Topic Generator\", \"desc\": \"Generates a list of relevant topics or ideas based on a given input.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio-to-Image\", \"desc\": \"Generates an image that visually represents a given audio, such as a waveform or spectrogram.\", \"input-type\": [\"audio\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image-to-Video\", \"desc\": \"Creates a slideshow video using two input images.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video-to-Audio\", \"desc\": \"Extracts the audio track from a given video file.\", \"input-type\": [\"video\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Video-to-Image\", \"desc\": \"Extracts a still image from a given video.\", \"input-type\": [\"video\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Stitcher\", \"desc\": \"Stitches together two input images to create a panorama or collage.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Colorizer\", \"desc\": \"Adds color to a black and white input image using deep learning techniques.\", \"input-type\": [\"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Style Transfer\", \"desc\": \"Applies the visual style of one image (style) to the content of another image (content) using neural style transfer techniques.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Video Stabilizer\", \"desc\": \"Stabilizes a shaky input video to produce a smoother output video.\", \"input-type\": [\"video\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Speed Changer\", \"desc\": \"Adjusts the playback speed of a given video according to human instruction, either speeding it up or slowing it down.\", \"input-type\": [\"video\", \"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Synchronization\", \"desc\": \"Synchronizes the timing of an existing voiceover or audio file with the visuals of a given video.\", \"input-type\": [\"video\", \"audio\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Voiceover\", \"desc\": \"Adds a voiceover to a given video using a provided script or text.\", \"input-type\": [\"video\", \"text\"], \"output-type\": [\"video\"]}\n\n        \n# GOAL #: Based on the above tools, I want you generate task steps and task nodes to solve the # USER REQUEST #. \n        The format must in a strict JSON format, like: {\"task_steps\": [one or more concrete steps, format as Step x: step description], \"task_nodes\": [{\"task\": \"tool name must be from # TASK LIST #\", \"arguments\": [ a concise list of arguments for the tool. Either original text, or user-mentioned filename, or tag '<node-j>' (start from 0) to refer to the output of the j-th node. ]}], \"task_links\": [{\"source\": \"task name i\", \"target\": \"task name j\"}]} \n        \n        # REQUIREMENTS #: \n        1. the generated task steps and task nodes can resolve the given user request # USER REQUEST # perfectly. Task name must be selected from # TASK LIST #;\n\n        2. the task steps should strictly aligned with the task nodes, and the number of task steps should be same with the task nodes;\n\n        3. the dependencies among task steps should align with the argument dependencies of the task nodes;\n\n        4. the tool arguments should be align with the input-type field of # TASK LIST #;\n\n        5. The task links (task_links) should reflect the temporal dependencies among task nodes, i.e. the order in which the APIs are invoked;\n\n        \nHere are provided examples for your reference.\n\n# EXAMPLE #:\n# USER REQUEST #: Please create a panorama using two images 'example1.jpg' and 'example2.jpg'.\n# RESULT #: {\"task_steps\": [\"Step 1: Use Image Stitcher to stitch together two images.\"], \"task_nodes\": [{\"task\": \"Image Stitcher\", \"arguments\": [\"example1.jpg\", \"example2.jpg\"]}], \"task_links\": []}\n    \n\n\n    # USER REQUEST #: I have a video 'example.mp4' and a related complex text. I want to summarize and simplify the text, then add it as a voiceover to my video. The text is: 'Machine learning is a method of data analysis that automates analytical model building. It is a branch of artificial intelligence based on the idea that systems can learn from data, identify patterns, and make decisions with minimal human intervention.'\n    now please generate your result in a strict JSON format:\n    # RESULT #:\n\n    Below is an example of step-by-step tool calls for planning a task to decompose a complex request into sub-tasks:\n\n    ```json\n    [\n    {\"Step 1\": \"Call tool 1 with input: 'input 1 name and content' and output: 'output 1 name and content'\"}\n    {\"Step 2\": \"Call tool 2 with input: 'input 2 name and content' and output: 'output 2 name and content'\"}\n    {\"Step 3\": \"Finish\"}\n    ]\n    ```\n    Based on this example, generate step-by-step tool calls to solve the given problem by breaking it down into sub-tasks and forming a connected path.\n\n    -----Tool Calls-----\n    \n", "value": 0.0}, "2": {"state": "\n    You are tasked with breaking down a complex user request into solvable sub-tasks by creating a task plan.\n\n    Problem Description:\n\n    # TASK LIST #:\n{\"id\": \"Image Downloader\", \"desc\": \"Downloads an image from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"image\"]}\n{\"id\": \"Video Downloader\", \"desc\": \"Downloads a video from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"video\"]}\n{\"id\": \"Audio Downloader\", \"desc\": \"Downloads an audio file from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Text Downloader\", \"desc\": \"Downloads the text content from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Search\", \"desc\": \"Searches for a specific text or keyword on the internet.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Image Search\", \"desc\": \"Searches for images on the internet based on a given query.\", \"input-type\": [\"text\"], \"output-type\": [\"Image\"]}\n{\"id\": \"Image Search (by Image)\", \"desc\": \"Performs a similar image search using an input image.\", \"input-type\": [\"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"URL Extractor\", \"desc\": \"Extracts URL from text\", \"input-type\": [\"text\"], \"output-type\": [\"url\"]}\n{\"id\": \"Video Search\", \"desc\": \"Searches for videos on the internet based on a given query.\", \"input-type\": [\"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Text-to-Image\", \"desc\": \"Generates an image based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"image\"]}\n{\"id\": \"Text-to-Video\", \"desc\": \"Generates a video based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Text-to-Audio\", \"desc\": \"Generates an audio file based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Image-to-Text\", \"desc\": \"Extracts text from an input image using Optical Character Recognition (OCR).\", \"input-type\": [\"image\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio-to-Text\", \"desc\": \"Transcribes speech from an audio file into text.\", \"input-type\": [\"audio\"], \"output-type\": [\"text\"]}\n{\"id\": \"Video-to-Text\", \"desc\": \"Transcribes speech from a video file into text.\", \"input-type\": [\"video\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio Noise Reduction\", \"desc\": \"Reduces background noise or unwanted sounds from a given audio file.\", \"input-type\": [\"audio\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Audio Effects\", \"desc\": \"Applies various audio effects to a given audio file according to human instruction, such as reverb, chorus, or equalization.\", \"input-type\": [\"audio\", \"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Audio Splicer\", \"desc\": \"Combines two audio files into a single output file.\", \"input-type\": [\"audio\", \"audio\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Voice Changer\", \"desc\": \"Modifies the characteristics of a recorded voice according to human instruction, such as tone, pitch, or gender.\", \"input-type\": [\"audio\", \"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Text Summarizer\", \"desc\": \"Summarizes a given text into a shorter version while retaining the main points.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Translator\", \"desc\": \"Translates a given text from one language to english.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Sentiment Analysis\", \"desc\": \"Analyzes the sentiment of a given text, identifying if it is positive, negative, or neutral.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Grammar Checker\", \"desc\": \"Checks a given text for grammatical errors and suggests corrections.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Simplifier\", \"desc\": \"Rewrites a given text in a simpler and more understandable manner.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Expander\", \"desc\": \"Expands a given short text into a more detailed and descriptive version.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Keyword Extractor\", \"desc\": \"Extracts the most important keywords and phrases from a given text.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Paraphraser\", \"desc\": \"Rewrites a given text using different words while maintaining its original meaning.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Article Spinner\", \"desc\": \"Rewrites a given article using synonyms and syntax changes to create a new, unique version.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Topic Generator\", \"desc\": \"Generates a list of relevant topics or ideas based on a given input.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio-to-Image\", \"desc\": \"Generates an image that visually represents a given audio, such as a waveform or spectrogram.\", \"input-type\": [\"audio\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image-to-Video\", \"desc\": \"Creates a slideshow video using two input images.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video-to-Audio\", \"desc\": \"Extracts the audio track from a given video file.\", \"input-type\": [\"video\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Video-to-Image\", \"desc\": \"Extracts a still image from a given video.\", \"input-type\": [\"video\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Stitcher\", \"desc\": \"Stitches together two input images to create a panorama or collage.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Colorizer\", \"desc\": \"Adds color to a black and white input image using deep learning techniques.\", \"input-type\": [\"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Style Transfer\", \"desc\": \"Applies the visual style of one image (style) to the content of another image (content) using neural style transfer techniques.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Video Stabilizer\", \"desc\": \"Stabilizes a shaky input video to produce a smoother output video.\", \"input-type\": [\"video\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Speed Changer\", \"desc\": \"Adjusts the playback speed of a given video according to human instruction, either speeding it up or slowing it down.\", \"input-type\": [\"video\", \"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Synchronization\", \"desc\": \"Synchronizes the timing of an existing voiceover or audio file with the visuals of a given video.\", \"input-type\": [\"video\", \"audio\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Voiceover\", \"desc\": \"Adds a voiceover to a given video using a provided script or text.\", \"input-type\": [\"video\", \"text\"], \"output-type\": [\"video\"]}\n\n        \n# GOAL #: Based on the above tools, I want you generate task steps and task nodes to solve the # USER REQUEST #. \n        The format must in a strict JSON format, like: {\"task_steps\": [one or more concrete steps, format as Step x: step description], \"task_nodes\": [{\"task\": \"tool name must be from # TASK LIST #\", \"arguments\": [ a concise list of arguments for the tool. Either original text, or user-mentioned filename, or tag '<node-j>' (start from 0) to refer to the output of the j-th node. ]}], \"task_links\": [{\"source\": \"task name i\", \"target\": \"task name j\"}]} \n        \n        # REQUIREMENTS #: \n        1. the generated task steps and task nodes can resolve the given user request # USER REQUEST # perfectly. Task name must be selected from # TASK LIST #;\n\n        2. the task steps should strictly aligned with the task nodes, and the number of task steps should be same with the task nodes;\n\n        3. the dependencies among task steps should align with the argument dependencies of the task nodes;\n\n        4. the tool arguments should be align with the input-type field of # TASK LIST #;\n\n        5. The task links (task_links) should reflect the temporal dependencies among task nodes, i.e. the order in which the APIs are invoked;\n\n        \nHere are provided examples for your reference.\n\n# EXAMPLE #:\n# USER REQUEST #: Please create a panorama using two images 'example1.jpg' and 'example2.jpg'.\n# RESULT #: {\"task_steps\": [\"Step 1: Use Image Stitcher to stitch together two images.\"], \"task_nodes\": [{\"task\": \"Image Stitcher\", \"arguments\": [\"example1.jpg\", \"example2.jpg\"]}], \"task_links\": []}\n    \n\n\n    # USER REQUEST #: I have a video 'example.mp4' and a related complex text. I want to summarize and simplify the text, then add it as a voiceover to my video. The text is: 'Machine learning is a method of data analysis that automates analytical model building. It is a branch of artificial intelligence based on the idea that systems can learn from data, identify patterns, and make decisions with minimal human intervention.'\n    now please generate your result in a strict JSON format:\n    # RESULT #:\n\n    Below is an example of step-by-step tool calls for planning a task to decompose a complex request into sub-tasks:\n\n    ```json\n    [\n    {\"Step 1\": \"Call tool 1 with input: 'input 1 name and content' and output: 'output 1 name and content'\"}\n    {\"Step 2\": \"Call tool 2 with input: 'input 2 name and content' and output: 'output 2 name and content'\"}\n    {\"Step 3\": \"Finish\"}\n    ]\n    ```\n    Based on this example, generate step-by-step tool calls to solve the given problem by breaking it down into sub-tasks and forming a connected path.\n\n    -----Tool Calls-----\n    \n", "value": 0.0}, "3": {"state": "\n    You are tasked with breaking down a complex user request into solvable sub-tasks by creating a task plan.\n\n    Problem Description:\n\n    # TASK LIST #:\n{\"id\": \"Image Downloader\", \"desc\": \"Downloads an image from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"image\"]}\n{\"id\": \"Video Downloader\", \"desc\": \"Downloads a video from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"video\"]}\n{\"id\": \"Audio Downloader\", \"desc\": \"Downloads an audio file from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Text Downloader\", \"desc\": \"Downloads the text content from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Search\", \"desc\": \"Searches for a specific text or keyword on the internet.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Image Search\", \"desc\": \"Searches for images on the internet based on a given query.\", \"input-type\": [\"text\"], \"output-type\": [\"Image\"]}\n{\"id\": \"Image Search (by Image)\", \"desc\": \"Performs a similar image search using an input image.\", \"input-type\": [\"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"URL Extractor\", \"desc\": \"Extracts URL from text\", \"input-type\": [\"text\"], \"output-type\": [\"url\"]}\n{\"id\": \"Video Search\", \"desc\": \"Searches for videos on the internet based on a given query.\", \"input-type\": [\"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Text-to-Image\", \"desc\": \"Generates an image based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"image\"]}\n{\"id\": \"Text-to-Video\", \"desc\": \"Generates a video based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Text-to-Audio\", \"desc\": \"Generates an audio file based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Image-to-Text\", \"desc\": \"Extracts text from an input image using Optical Character Recognition (OCR).\", \"input-type\": [\"image\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio-to-Text\", \"desc\": \"Transcribes speech from an audio file into text.\", \"input-type\": [\"audio\"], \"output-type\": [\"text\"]}\n{\"id\": \"Video-to-Text\", \"desc\": \"Transcribes speech from a video file into text.\", \"input-type\": [\"video\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio Noise Reduction\", \"desc\": \"Reduces background noise or unwanted sounds from a given audio file.\", \"input-type\": [\"audio\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Audio Effects\", \"desc\": \"Applies various audio effects to a given audio file according to human instruction, such as reverb, chorus, or equalization.\", \"input-type\": [\"audio\", \"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Audio Splicer\", \"desc\": \"Combines two audio files into a single output file.\", \"input-type\": [\"audio\", \"audio\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Voice Changer\", \"desc\": \"Modifies the characteristics of a recorded voice according to human instruction, such as tone, pitch, or gender.\", \"input-type\": [\"audio\", \"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Text Summarizer\", \"desc\": \"Summarizes a given text into a shorter version while retaining the main points.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Translator\", \"desc\": \"Translates a given text from one language to english.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Sentiment Analysis\", \"desc\": \"Analyzes the sentiment of a given text, identifying if it is positive, negative, or neutral.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Grammar Checker\", \"desc\": \"Checks a given text for grammatical errors and suggests corrections.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Simplifier\", \"desc\": \"Rewrites a given text in a simpler and more understandable manner.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Expander\", \"desc\": \"Expands a given short text into a more detailed and descriptive version.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Keyword Extractor\", \"desc\": \"Extracts the most important keywords and phrases from a given text.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Paraphraser\", \"desc\": \"Rewrites a given text using different words while maintaining its original meaning.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Article Spinner\", \"desc\": \"Rewrites a given article using synonyms and syntax changes to create a new, unique version.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Topic Generator\", \"desc\": \"Generates a list of relevant topics or ideas based on a given input.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio-to-Image\", \"desc\": \"Generates an image that visually represents a given audio, such as a waveform or spectrogram.\", \"input-type\": [\"audio\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image-to-Video\", \"desc\": \"Creates a slideshow video using two input images.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video-to-Audio\", \"desc\": \"Extracts the audio track from a given video file.\", \"input-type\": [\"video\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Video-to-Image\", \"desc\": \"Extracts a still image from a given video.\", \"input-type\": [\"video\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Stitcher\", \"desc\": \"Stitches together two input images to create a panorama or collage.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Colorizer\", \"desc\": \"Adds color to a black and white input image using deep learning techniques.\", \"input-type\": [\"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Style Transfer\", \"desc\": \"Applies the visual style of one image (style) to the content of another image (content) using neural style transfer techniques.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Video Stabilizer\", \"desc\": \"Stabilizes a shaky input video to produce a smoother output video.\", \"input-type\": [\"video\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Speed Changer\", \"desc\": \"Adjusts the playback speed of a given video according to human instruction, either speeding it up or slowing it down.\", \"input-type\": [\"video\", \"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Synchronization\", \"desc\": \"Synchronizes the timing of an existing voiceover or audio file with the visuals of a given video.\", \"input-type\": [\"video\", \"audio\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Voiceover\", \"desc\": \"Adds a voiceover to a given video using a provided script or text.\", \"input-type\": [\"video\", \"text\"], \"output-type\": [\"video\"]}\n\n        \n# GOAL #: Based on the above tools, I want you generate task steps and task nodes to solve the # USER REQUEST #. \n        The format must in a strict JSON format, like: {\"task_steps\": [one or more concrete steps, format as Step x: step description], \"task_nodes\": [{\"task\": \"tool name must be from # TASK LIST #\", \"arguments\": [ a concise list of arguments for the tool. Either original text, or user-mentioned filename, or tag '<node-j>' (start from 0) to refer to the output of the j-th node. ]}], \"task_links\": [{\"source\": \"task name i\", \"target\": \"task name j\"}]} \n        \n        # REQUIREMENTS #: \n        1. the generated task steps and task nodes can resolve the given user request # USER REQUEST # perfectly. Task name must be selected from # TASK LIST #;\n\n        2. the task steps should strictly aligned with the task nodes, and the number of task steps should be same with the task nodes;\n\n        3. the dependencies among task steps should align with the argument dependencies of the task nodes;\n\n        4. the tool arguments should be align with the input-type field of # TASK LIST #;\n\n        5. The task links (task_links) should reflect the temporal dependencies among task nodes, i.e. the order in which the APIs are invoked;\n\n        \nHere are provided examples for your reference.\n\n# EXAMPLE #:\n# USER REQUEST #: Please create a panorama using two images 'example1.jpg' and 'example2.jpg'.\n# RESULT #: {\"task_steps\": [\"Step 1: Use Image Stitcher to stitch together two images.\"], \"task_nodes\": [{\"task\": \"Image Stitcher\", \"arguments\": [\"example1.jpg\", \"example2.jpg\"]}], \"task_links\": []}\n    \n\n\n    # USER REQUEST #: I have a video 'example.mp4' and a related complex text. I want to summarize and simplify the text, then add it as a voiceover to my video. The text is: 'Machine learning is a method of data analysis that automates analytical model building. It is a branch of artificial intelligence based on the idea that systems can learn from data, identify patterns, and make decisions with minimal human intervention.'\n    now please generate your result in a strict JSON format:\n    # RESULT #:\n\n    Below is an example of step-by-step tool calls for planning a task to decompose a complex request into sub-tasks:\n\n    ```json\n    [\n    {\"Step 1\": \"Call tool 1 with input: 'input 1 name and content' and output: 'output 1 name and content'\"}\n    {\"Step 2\": \"Call tool 2 with input: 'input 2 name and content' and output: 'output 2 name and content'\"}\n    {\"Step 3\": \"Finish\"}\n    ]\n    ```\n    Based on this example, generate step-by-step tool calls to solve the given problem by breaking it down into sub-tasks and forming a connected path.\n\n    -----Tool Calls-----\n    \n", "value": 0.0}, "4": {"state": "\n    You are tasked with breaking down a complex user request into solvable sub-tasks by creating a task plan.\n\n    Problem Description:\n\n    # TASK LIST #:\n{\"id\": \"Image Downloader\", \"desc\": \"Downloads an image from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"image\"]}\n{\"id\": \"Video Downloader\", \"desc\": \"Downloads a video from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"video\"]}\n{\"id\": \"Audio Downloader\", \"desc\": \"Downloads an audio file from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Text Downloader\", \"desc\": \"Downloads the text content from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Search\", \"desc\": \"Searches for a specific text or keyword on the internet.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Image Search\", \"desc\": \"Searches for images on the internet based on a given query.\", \"input-type\": [\"text\"], \"output-type\": [\"Image\"]}\n{\"id\": \"Image Search (by Image)\", \"desc\": \"Performs a similar image search using an input image.\", \"input-type\": [\"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"URL Extractor\", \"desc\": \"Extracts URL from text\", \"input-type\": [\"text\"], \"output-type\": [\"url\"]}\n{\"id\": \"Video Search\", \"desc\": \"Searches for videos on the internet based on a given query.\", \"input-type\": [\"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Text-to-Image\", \"desc\": \"Generates an image based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"image\"]}\n{\"id\": \"Text-to-Video\", \"desc\": \"Generates a video based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Text-to-Audio\", \"desc\": \"Generates an audio file based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Image-to-Text\", \"desc\": \"Extracts text from an input image using Optical Character Recognition (OCR).\", \"input-type\": [\"image\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio-to-Text\", \"desc\": \"Transcribes speech from an audio file into text.\", \"input-type\": [\"audio\"], \"output-type\": [\"text\"]}\n{\"id\": \"Video-to-Text\", \"desc\": \"Transcribes speech from a video file into text.\", \"input-type\": [\"video\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio Noise Reduction\", \"desc\": \"Reduces background noise or unwanted sounds from a given audio file.\", \"input-type\": [\"audio\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Audio Effects\", \"desc\": \"Applies various audio effects to a given audio file according to human instruction, such as reverb, chorus, or equalization.\", \"input-type\": [\"audio\", \"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Audio Splicer\", \"desc\": \"Combines two audio files into a single output file.\", \"input-type\": [\"audio\", \"audio\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Voice Changer\", \"desc\": \"Modifies the characteristics of a recorded voice according to human instruction, such as tone, pitch, or gender.\", \"input-type\": [\"audio\", \"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Text Summarizer\", \"desc\": \"Summarizes a given text into a shorter version while retaining the main points.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Translator\", \"desc\": \"Translates a given text from one language to english.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Sentiment Analysis\", \"desc\": \"Analyzes the sentiment of a given text, identifying if it is positive, negative, or neutral.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Grammar Checker\", \"desc\": \"Checks a given text for grammatical errors and suggests corrections.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Simplifier\", \"desc\": \"Rewrites a given text in a simpler and more understandable manner.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Expander\", \"desc\": \"Expands a given short text into a more detailed and descriptive version.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Keyword Extractor\", \"desc\": \"Extracts the most important keywords and phrases from a given text.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Paraphraser\", \"desc\": \"Rewrites a given text using different words while maintaining its original meaning.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Article Spinner\", \"desc\": \"Rewrites a given article using synonyms and syntax changes to create a new, unique version.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Topic Generator\", \"desc\": \"Generates a list of relevant topics or ideas based on a given input.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio-to-Image\", \"desc\": \"Generates an image that visually represents a given audio, such as a waveform or spectrogram.\", \"input-type\": [\"audio\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image-to-Video\", \"desc\": \"Creates a slideshow video using two input images.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video-to-Audio\", \"desc\": \"Extracts the audio track from a given video file.\", \"input-type\": [\"video\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Video-to-Image\", \"desc\": \"Extracts a still image from a given video.\", \"input-type\": [\"video\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Stitcher\", \"desc\": \"Stitches together two input images to create a panorama or collage.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Colorizer\", \"desc\": \"Adds color to a black and white input image using deep learning techniques.\", \"input-type\": [\"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Style Transfer\", \"desc\": \"Applies the visual style of one image (style) to the content of another image (content) using neural style transfer techniques.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Video Stabilizer\", \"desc\": \"Stabilizes a shaky input video to produce a smoother output video.\", \"input-type\": [\"video\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Speed Changer\", \"desc\": \"Adjusts the playback speed of a given video according to human instruction, either speeding it up or slowing it down.\", \"input-type\": [\"video\", \"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Synchronization\", \"desc\": \"Synchronizes the timing of an existing voiceover or audio file with the visuals of a given video.\", \"input-type\": [\"video\", \"audio\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Voiceover\", \"desc\": \"Adds a voiceover to a given video using a provided script or text.\", \"input-type\": [\"video\", \"text\"], \"output-type\": [\"video\"]}\n\n        \n# GOAL #: Based on the above tools, I want you generate task steps and task nodes to solve the # USER REQUEST #. \n        The format must in a strict JSON format, like: {\"task_steps\": [one or more concrete steps, format as Step x: step description], \"task_nodes\": [{\"task\": \"tool name must be from # TASK LIST #\", \"arguments\": [ a concise list of arguments for the tool. Either original text, or user-mentioned filename, or tag '<node-j>' (start from 0) to refer to the output of the j-th node. ]}], \"task_links\": [{\"source\": \"task name i\", \"target\": \"task name j\"}]} \n        \n        # REQUIREMENTS #: \n        1. the generated task steps and task nodes can resolve the given user request # USER REQUEST # perfectly. Task name must be selected from # TASK LIST #;\n\n        2. the task steps should strictly aligned with the task nodes, and the number of task steps should be same with the task nodes;\n\n        3. the dependencies among task steps should align with the argument dependencies of the task nodes;\n\n        4. the tool arguments should be align with the input-type field of # TASK LIST #;\n\n        5. The task links (task_links) should reflect the temporal dependencies among task nodes, i.e. the order in which the APIs are invoked;\n\n        \nHere are provided examples for your reference.\n\n# EXAMPLE #:\n# USER REQUEST #: Please create a panorama using two images 'example1.jpg' and 'example2.jpg'.\n# RESULT #: {\"task_steps\": [\"Step 1: Use Image Stitcher to stitch together two images.\"], \"task_nodes\": [{\"task\": \"Image Stitcher\", \"arguments\": [\"example1.jpg\", \"example2.jpg\"]}], \"task_links\": []}\n    \n\n\n    # USER REQUEST #: I have a video 'example.mp4' and a related complex text. I want to summarize and simplify the text, then add it as a voiceover to my video. The text is: 'Machine learning is a method of data analysis that automates analytical model building. It is a branch of artificial intelligence based on the idea that systems can learn from data, identify patterns, and make decisions with minimal human intervention.'\n    now please generate your result in a strict JSON format:\n    # RESULT #:\n\n    Below is an example of step-by-step tool calls for planning a task to decompose a complex request into sub-tasks:\n\n    ```json\n    [\n    {\"Step 1\": \"Call tool 1 with input: 'input 1 name and content' and output: 'output 1 name and content'\"}\n    {\"Step 2\": \"Call tool 2 with input: 'input 2 name and content' and output: 'output 2 name and content'\"}\n    {\"Step 3\": \"Finish\"}\n    ]\n    ```\n    Based on this example, generate step-by-step tool calls to solve the given problem by breaking it down into sub-tasks and forming a connected path.\n\n    -----Tool Calls-----\n    \n", "value": 0.0}}]
[[[0, 0], [0, 1], [0, 2], [1, 3], [1, 4], [1, 5], [2, 6], [2, 7], [2, 8], [3, 9], [3, 10], [3, 11], [4, 12], [4, 13], [4, 14]], [[0, 1], [1, 2], [2, 3], [3, 4]], {"0": {"ucb": 1.6915149882393594, "p_ucb": 1.6915149882393594, "var_p_ucb": 1.8902695340883735, "action": "\n", "prob": 1.0}, "1": {"ucb": 2.537272482359039, "p_ucb": 2.537272482359039, "var_p_ucb": 2.8354043011325603, "action": "\n", "prob": 1.0}, "2": {"ucb": 2.537272482359039, "p_ucb": 2.537272482359039, "var_p_ucb": 2.8354043011325603, "action": "\n", "prob": 1.0}, "3": {"ucb": 2.09629414793641, "p_ucb": 2.09629414793641, "var_p_ucb": 2.2726303430794412, "action": "\n", "prob": 1.0}, "4": {"ucb": 4.19258829587282, "p_ucb": 4.19258829587282, "var_p_ucb": 4.5452606861588825, "action": "\n", "prob": 1.0}, "5": {"ucb": 4.19258829587282, "p_ucb": 4.19258829587282, "var_p_ucb": 4.5452606861588825, "action": "\n", "prob": 1.0}, "6": {"ucb": 3.3302184446307908, "p_ucb": 3.3302184446307908, "var_p_ucb": 3.5486510228161983, "action": "\n", "prob": 1.0}, "7": {"ucb": 3.3302184446307908, "p_ucb": 3.3302184446307908, "var_p_ucb": 3.5486510228161983, "action": "\n", "prob": 1.0}, "8": {"ucb": 3.3302184446307908, "p_ucb": 3.3302184446307908, "var_p_ucb": 3.5486510228161983, "action": "\n", "prob": 1.0}, "9": {"ucb": 3.3302184446307908, "p_ucb": 3.3302184446307908, "var_p_ucb": 3.5486510228161983, "action": "\n", "prob": 1.0}, "10": {"ucb": 3.3302184446307908, "p_ucb": 3.3302184446307908, "var_p_ucb": 3.5486510228161983, "action": "\n", "prob": 1.0}, "11": {"ucb": 3.3302184446307908, "p_ucb": 3.3302184446307908, "var_p_ucb": 3.5486510228161983, "action": "\n", "prob": 1.0}, "12": {"ucb": 3.3302184446307908, "p_ucb": 3.3302184446307908, "var_p_ucb": 3.5486510228161983, "action": "\n", "prob": 1.0}, "13": {"ucb": 3.3302184446307908, "p_ucb": 3.3302184446307908, "var_p_ucb": 3.5486510228161983, "action": "\n", "prob": 1.0}, "14": {"ucb": 3.3302184446307908, "p_ucb": 3.3302184446307908, "var_p_ucb": 3.5486510228161983, "action": "\n", "prob": 1.0}}, {"0": {"state": "\n    You are tasked with breaking down a complex user request into solvable sub-tasks by creating a task plan.\n\n    Problem Description:\n\n    # TASK LIST #:\n{\"id\": \"Image Downloader\", \"desc\": \"Downloads an image from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"image\"]}\n{\"id\": \"Video Downloader\", \"desc\": \"Downloads a video from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"video\"]}\n{\"id\": \"Audio Downloader\", \"desc\": \"Downloads an audio file from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Text Downloader\", \"desc\": \"Downloads the text content from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Search\", \"desc\": \"Searches for a specific text or keyword on the internet.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Image Search\", \"desc\": \"Searches for images on the internet based on a given query.\", \"input-type\": [\"text\"], \"output-type\": [\"Image\"]}\n{\"id\": \"Image Search (by Image)\", \"desc\": \"Performs a similar image search using an input image.\", \"input-type\": [\"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"URL Extractor\", \"desc\": \"Extracts URL from text\", \"input-type\": [\"text\"], \"output-type\": [\"url\"]}\n{\"id\": \"Video Search\", \"desc\": \"Searches for videos on the internet based on a given query.\", \"input-type\": [\"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Text-to-Image\", \"desc\": \"Generates an image based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"image\"]}\n{\"id\": \"Text-to-Video\", \"desc\": \"Generates a video based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Text-to-Audio\", \"desc\": \"Generates an audio file based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Image-to-Text\", \"desc\": \"Extracts text from an input image using Optical Character Recognition (OCR).\", \"input-type\": [\"image\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio-to-Text\", \"desc\": \"Transcribes speech from an audio file into text.\", \"input-type\": [\"audio\"], \"output-type\": [\"text\"]}\n{\"id\": \"Video-to-Text\", \"desc\": \"Transcribes speech from a video file into text.\", \"input-type\": [\"video\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio Noise Reduction\", \"desc\": \"Reduces background noise or unwanted sounds from a given audio file.\", \"input-type\": [\"audio\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Audio Effects\", \"desc\": \"Applies various audio effects to a given audio file according to human instruction, such as reverb, chorus, or equalization.\", \"input-type\": [\"audio\", \"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Audio Splicer\", \"desc\": \"Combines two audio files into a single output file.\", \"input-type\": [\"audio\", \"audio\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Voice Changer\", \"desc\": \"Modifies the characteristics of a recorded voice according to human instruction, such as tone, pitch, or gender.\", \"input-type\": [\"audio\", \"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Text Summarizer\", \"desc\": \"Summarizes a given text into a shorter version while retaining the main points.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Translator\", \"desc\": \"Translates a given text from one language to english.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Sentiment Analysis\", \"desc\": \"Analyzes the sentiment of a given text, identifying if it is positive, negative, or neutral.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Grammar Checker\", \"desc\": \"Checks a given text for grammatical errors and suggests corrections.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Simplifier\", \"desc\": \"Rewrites a given text in a simpler and more understandable manner.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Expander\", \"desc\": \"Expands a given short text into a more detailed and descriptive version.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Keyword Extractor\", \"desc\": \"Extracts the most important keywords and phrases from a given text.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Paraphraser\", \"desc\": \"Rewrites a given text using different words while maintaining its original meaning.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Article Spinner\", \"desc\": \"Rewrites a given article using synonyms and syntax changes to create a new, unique version.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Topic Generator\", \"desc\": \"Generates a list of relevant topics or ideas based on a given input.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio-to-Image\", \"desc\": \"Generates an image that visually represents a given audio, such as a waveform or spectrogram.\", \"input-type\": [\"audio\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image-to-Video\", \"desc\": \"Creates a slideshow video using two input images.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video-to-Audio\", \"desc\": \"Extracts the audio track from a given video file.\", \"input-type\": [\"video\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Video-to-Image\", \"desc\": \"Extracts a still image from a given video.\", \"input-type\": [\"video\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Stitcher\", \"desc\": \"Stitches together two input images to create a panorama or collage.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Colorizer\", \"desc\": \"Adds color to a black and white input image using deep learning techniques.\", \"input-type\": [\"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Style Transfer\", \"desc\": \"Applies the visual style of one image (style) to the content of another image (content) using neural style transfer techniques.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Video Stabilizer\", \"desc\": \"Stabilizes a shaky input video to produce a smoother output video.\", \"input-type\": [\"video\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Speed Changer\", \"desc\": \"Adjusts the playback speed of a given video according to human instruction, either speeding it up or slowing it down.\", \"input-type\": [\"video\", \"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Synchronization\", \"desc\": \"Synchronizes the timing of an existing voiceover or audio file with the visuals of a given video.\", \"input-type\": [\"video\", \"audio\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Voiceover\", \"desc\": \"Adds a voiceover to a given video using a provided script or text.\", \"input-type\": [\"video\", \"text\"], \"output-type\": [\"video\"]}\n\n        \n# GOAL #: Based on the above tools, I want you generate task steps and task nodes to solve the # USER REQUEST #. \n        The format must in a strict JSON format, like: {\"task_steps\": [one or more concrete steps, format as Step x: step description], \"task_nodes\": [{\"task\": \"tool name must be from # TASK LIST #\", \"arguments\": [ a concise list of arguments for the tool. Either original text, or user-mentioned filename, or tag '<node-j>' (start from 0) to refer to the output of the j-th node. ]}], \"task_links\": [{\"source\": \"task name i\", \"target\": \"task name j\"}]} \n        \n        # REQUIREMENTS #: \n        1. the generated task steps and task nodes can resolve the given user request # USER REQUEST # perfectly. Task name must be selected from # TASK LIST #;\n\n        2. the task steps should strictly aligned with the task nodes, and the number of task steps should be same with the task nodes;\n\n        3. the dependencies among task steps should align with the argument dependencies of the task nodes;\n\n        4. the tool arguments should be align with the input-type field of # TASK LIST #;\n\n        5. The task links (task_links) should reflect the temporal dependencies among task nodes, i.e. the order in which the APIs are invoked;\n\n        \nHere are provided examples for your reference.\n\n# EXAMPLE #:\n# USER REQUEST #: Please create a panorama using two images 'example1.jpg' and 'example2.jpg'.\n# RESULT #: {\"task_steps\": [\"Step 1: Use Image Stitcher to stitch together two images.\"], \"task_nodes\": [{\"task\": \"Image Stitcher\", \"arguments\": [\"example1.jpg\", \"example2.jpg\"]}], \"task_links\": []}\n    \n\n\n    # USER REQUEST #: Please download the audio file from this URL: 'example.wav', then reduce the background noise or unwanted sounds from the downloaded audio. Finally, combine the noise-reduced audio with another existing audio file 'example2.wav'.\n    now please generate your result in a strict JSON format:\n    # RESULT #:\n\n    Below is an example of step-by-step tool calls for planning a task to decompose a complex request into sub-tasks:\n\n    ```json\n    [\n    {\"Step 1\": \"Call tool 1 with input: 'input 1 name and content' and output: 'output 1 name and content'\"}\n    {\"Step 2\": \"Call tool 2 with input: 'input 2 name and content' and output: 'output 2 name and content'\"}\n    {\"Step 3\": \"Finish\"}\n    ]\n    ```\n    Based on this example, generate step-by-step tool calls to solve the given problem by breaking it down into sub-tasks and forming a connected path.\n\n    -----Tool Calls-----\n    ", "value": null}, "1": {"state": "\n    You are tasked with breaking down a complex user request into solvable sub-tasks by creating a task plan.\n\n    Problem Description:\n\n    # TASK LIST #:\n{\"id\": \"Image Downloader\", \"desc\": \"Downloads an image from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"image\"]}\n{\"id\": \"Video Downloader\", \"desc\": \"Downloads a video from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"video\"]}\n{\"id\": \"Audio Downloader\", \"desc\": \"Downloads an audio file from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Text Downloader\", \"desc\": \"Downloads the text content from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Search\", \"desc\": \"Searches for a specific text or keyword on the internet.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Image Search\", \"desc\": \"Searches for images on the internet based on a given query.\", \"input-type\": [\"text\"], \"output-type\": [\"Image\"]}\n{\"id\": \"Image Search (by Image)\", \"desc\": \"Performs a similar image search using an input image.\", \"input-type\": [\"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"URL Extractor\", \"desc\": \"Extracts URL from text\", \"input-type\": [\"text\"], \"output-type\": [\"url\"]}\n{\"id\": \"Video Search\", \"desc\": \"Searches for videos on the internet based on a given query.\", \"input-type\": [\"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Text-to-Image\", \"desc\": \"Generates an image based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"image\"]}\n{\"id\": \"Text-to-Video\", \"desc\": \"Generates a video based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Text-to-Audio\", \"desc\": \"Generates an audio file based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Image-to-Text\", \"desc\": \"Extracts text from an input image using Optical Character Recognition (OCR).\", \"input-type\": [\"image\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio-to-Text\", \"desc\": \"Transcribes speech from an audio file into text.\", \"input-type\": [\"audio\"], \"output-type\": [\"text\"]}\n{\"id\": \"Video-to-Text\", \"desc\": \"Transcribes speech from a video file into text.\", \"input-type\": [\"video\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio Noise Reduction\", \"desc\": \"Reduces background noise or unwanted sounds from a given audio file.\", \"input-type\": [\"audio\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Audio Effects\", \"desc\": \"Applies various audio effects to a given audio file according to human instruction, such as reverb, chorus, or equalization.\", \"input-type\": [\"audio\", \"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Audio Splicer\", \"desc\": \"Combines two audio files into a single output file.\", \"input-type\": [\"audio\", \"audio\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Voice Changer\", \"desc\": \"Modifies the characteristics of a recorded voice according to human instruction, such as tone, pitch, or gender.\", \"input-type\": [\"audio\", \"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Text Summarizer\", \"desc\": \"Summarizes a given text into a shorter version while retaining the main points.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Translator\", \"desc\": \"Translates a given text from one language to english.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Sentiment Analysis\", \"desc\": \"Analyzes the sentiment of a given text, identifying if it is positive, negative, or neutral.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Grammar Checker\", \"desc\": \"Checks a given text for grammatical errors and suggests corrections.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Simplifier\", \"desc\": \"Rewrites a given text in a simpler and more understandable manner.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Expander\", \"desc\": \"Expands a given short text into a more detailed and descriptive version.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Keyword Extractor\", \"desc\": \"Extracts the most important keywords and phrases from a given text.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Paraphraser\", \"desc\": \"Rewrites a given text using different words while maintaining its original meaning.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Article Spinner\", \"desc\": \"Rewrites a given article using synonyms and syntax changes to create a new, unique version.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Topic Generator\", \"desc\": \"Generates a list of relevant topics or ideas based on a given input.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio-to-Image\", \"desc\": \"Generates an image that visually represents a given audio, such as a waveform or spectrogram.\", \"input-type\": [\"audio\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image-to-Video\", \"desc\": \"Creates a slideshow video using two input images.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video-to-Audio\", \"desc\": \"Extracts the audio track from a given video file.\", \"input-type\": [\"video\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Video-to-Image\", \"desc\": \"Extracts a still image from a given video.\", \"input-type\": [\"video\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Stitcher\", \"desc\": \"Stitches together two input images to create a panorama or collage.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Colorizer\", \"desc\": \"Adds color to a black and white input image using deep learning techniques.\", \"input-type\": [\"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Style Transfer\", \"desc\": \"Applies the visual style of one image (style) to the content of another image (content) using neural style transfer techniques.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Video Stabilizer\", \"desc\": \"Stabilizes a shaky input video to produce a smoother output video.\", \"input-type\": [\"video\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Speed Changer\", \"desc\": \"Adjusts the playback speed of a given video according to human instruction, either speeding it up or slowing it down.\", \"input-type\": [\"video\", \"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Synchronization\", \"desc\": \"Synchronizes the timing of an existing voiceover or audio file with the visuals of a given video.\", \"input-type\": [\"video\", \"audio\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Voiceover\", \"desc\": \"Adds a voiceover to a given video using a provided script or text.\", \"input-type\": [\"video\", \"text\"], \"output-type\": [\"video\"]}\n\n        \n# GOAL #: Based on the above tools, I want you generate task steps and task nodes to solve the # USER REQUEST #. \n        The format must in a strict JSON format, like: {\"task_steps\": [one or more concrete steps, format as Step x: step description], \"task_nodes\": [{\"task\": \"tool name must be from # TASK LIST #\", \"arguments\": [ a concise list of arguments for the tool. Either original text, or user-mentioned filename, or tag '<node-j>' (start from 0) to refer to the output of the j-th node. ]}], \"task_links\": [{\"source\": \"task name i\", \"target\": \"task name j\"}]} \n        \n        # REQUIREMENTS #: \n        1. the generated task steps and task nodes can resolve the given user request # USER REQUEST # perfectly. Task name must be selected from # TASK LIST #;\n\n        2. the task steps should strictly aligned with the task nodes, and the number of task steps should be same with the task nodes;\n\n        3. the dependencies among task steps should align with the argument dependencies of the task nodes;\n\n        4. the tool arguments should be align with the input-type field of # TASK LIST #;\n\n        5. The task links (task_links) should reflect the temporal dependencies among task nodes, i.e. the order in which the APIs are invoked;\n\n        \nHere are provided examples for your reference.\n\n# EXAMPLE #:\n# USER REQUEST #: Please create a panorama using two images 'example1.jpg' and 'example2.jpg'.\n# RESULT #: {\"task_steps\": [\"Step 1: Use Image Stitcher to stitch together two images.\"], \"task_nodes\": [{\"task\": \"Image Stitcher\", \"arguments\": [\"example1.jpg\", \"example2.jpg\"]}], \"task_links\": []}\n    \n\n\n    # USER REQUEST #: Please download the audio file from this URL: 'example.wav', then reduce the background noise or unwanted sounds from the downloaded audio. Finally, combine the noise-reduced audio with another existing audio file 'example2.wav'.\n    now please generate your result in a strict JSON format:\n    # RESULT #:\n\n    Below is an example of step-by-step tool calls for planning a task to decompose a complex request into sub-tasks:\n\n    ```json\n    [\n    {\"Step 1\": \"Call tool 1 with input: 'input 1 name and content' and output: 'output 1 name and content'\"}\n    {\"Step 2\": \"Call tool 2 with input: 'input 2 name and content' and output: 'output 2 name and content'\"}\n    {\"Step 3\": \"Finish\"}\n    ]\n    ```\n    Based on this example, generate step-by-step tool calls to solve the given problem by breaking it down into sub-tasks and forming a connected path.\n\n    -----Tool Calls-----\n    \n", "value": 0.0}, "2": {"state": "\n    You are tasked with breaking down a complex user request into solvable sub-tasks by creating a task plan.\n\n    Problem Description:\n\n    # TASK LIST #:\n{\"id\": \"Image Downloader\", \"desc\": \"Downloads an image from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"image\"]}\n{\"id\": \"Video Downloader\", \"desc\": \"Downloads a video from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"video\"]}\n{\"id\": \"Audio Downloader\", \"desc\": \"Downloads an audio file from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Text Downloader\", \"desc\": \"Downloads the text content from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Search\", \"desc\": \"Searches for a specific text or keyword on the internet.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Image Search\", \"desc\": \"Searches for images on the internet based on a given query.\", \"input-type\": [\"text\"], \"output-type\": [\"Image\"]}\n{\"id\": \"Image Search (by Image)\", \"desc\": \"Performs a similar image search using an input image.\", \"input-type\": [\"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"URL Extractor\", \"desc\": \"Extracts URL from text\", \"input-type\": [\"text\"], \"output-type\": [\"url\"]}\n{\"id\": \"Video Search\", \"desc\": \"Searches for videos on the internet based on a given query.\", \"input-type\": [\"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Text-to-Image\", \"desc\": \"Generates an image based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"image\"]}\n{\"id\": \"Text-to-Video\", \"desc\": \"Generates a video based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Text-to-Audio\", \"desc\": \"Generates an audio file based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Image-to-Text\", \"desc\": \"Extracts text from an input image using Optical Character Recognition (OCR).\", \"input-type\": [\"image\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio-to-Text\", \"desc\": \"Transcribes speech from an audio file into text.\", \"input-type\": [\"audio\"], \"output-type\": [\"text\"]}\n{\"id\": \"Video-to-Text\", \"desc\": \"Transcribes speech from a video file into text.\", \"input-type\": [\"video\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio Noise Reduction\", \"desc\": \"Reduces background noise or unwanted sounds from a given audio file.\", \"input-type\": [\"audio\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Audio Effects\", \"desc\": \"Applies various audio effects to a given audio file according to human instruction, such as reverb, chorus, or equalization.\", \"input-type\": [\"audio\", \"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Audio Splicer\", \"desc\": \"Combines two audio files into a single output file.\", \"input-type\": [\"audio\", \"audio\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Voice Changer\", \"desc\": \"Modifies the characteristics of a recorded voice according to human instruction, such as tone, pitch, or gender.\", \"input-type\": [\"audio\", \"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Text Summarizer\", \"desc\": \"Summarizes a given text into a shorter version while retaining the main points.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Translator\", \"desc\": \"Translates a given text from one language to english.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Sentiment Analysis\", \"desc\": \"Analyzes the sentiment of a given text, identifying if it is positive, negative, or neutral.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Grammar Checker\", \"desc\": \"Checks a given text for grammatical errors and suggests corrections.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Simplifier\", \"desc\": \"Rewrites a given text in a simpler and more understandable manner.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Expander\", \"desc\": \"Expands a given short text into a more detailed and descriptive version.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Keyword Extractor\", \"desc\": \"Extracts the most important keywords and phrases from a given text.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Paraphraser\", \"desc\": \"Rewrites a given text using different words while maintaining its original meaning.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Article Spinner\", \"desc\": \"Rewrites a given article using synonyms and syntax changes to create a new, unique version.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Topic Generator\", \"desc\": \"Generates a list of relevant topics or ideas based on a given input.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio-to-Image\", \"desc\": \"Generates an image that visually represents a given audio, such as a waveform or spectrogram.\", \"input-type\": [\"audio\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image-to-Video\", \"desc\": \"Creates a slideshow video using two input images.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video-to-Audio\", \"desc\": \"Extracts the audio track from a given video file.\", \"input-type\": [\"video\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Video-to-Image\", \"desc\": \"Extracts a still image from a given video.\", \"input-type\": [\"video\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Stitcher\", \"desc\": \"Stitches together two input images to create a panorama or collage.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Colorizer\", \"desc\": \"Adds color to a black and white input image using deep learning techniques.\", \"input-type\": [\"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Style Transfer\", \"desc\": \"Applies the visual style of one image (style) to the content of another image (content) using neural style transfer techniques.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Video Stabilizer\", \"desc\": \"Stabilizes a shaky input video to produce a smoother output video.\", \"input-type\": [\"video\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Speed Changer\", \"desc\": \"Adjusts the playback speed of a given video according to human instruction, either speeding it up or slowing it down.\", \"input-type\": [\"video\", \"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Synchronization\", \"desc\": \"Synchronizes the timing of an existing voiceover or audio file with the visuals of a given video.\", \"input-type\": [\"video\", \"audio\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Voiceover\", \"desc\": \"Adds a voiceover to a given video using a provided script or text.\", \"input-type\": [\"video\", \"text\"], \"output-type\": [\"video\"]}\n\n        \n# GOAL #: Based on the above tools, I want you generate task steps and task nodes to solve the # USER REQUEST #. \n        The format must in a strict JSON format, like: {\"task_steps\": [one or more concrete steps, format as Step x: step description], \"task_nodes\": [{\"task\": \"tool name must be from # TASK LIST #\", \"arguments\": [ a concise list of arguments for the tool. Either original text, or user-mentioned filename, or tag '<node-j>' (start from 0) to refer to the output of the j-th node. ]}], \"task_links\": [{\"source\": \"task name i\", \"target\": \"task name j\"}]} \n        \n        # REQUIREMENTS #: \n        1. the generated task steps and task nodes can resolve the given user request # USER REQUEST # perfectly. Task name must be selected from # TASK LIST #;\n\n        2. the task steps should strictly aligned with the task nodes, and the number of task steps should be same with the task nodes;\n\n        3. the dependencies among task steps should align with the argument dependencies of the task nodes;\n\n        4. the tool arguments should be align with the input-type field of # TASK LIST #;\n\n        5. The task links (task_links) should reflect the temporal dependencies among task nodes, i.e. the order in which the APIs are invoked;\n\n        \nHere are provided examples for your reference.\n\n# EXAMPLE #:\n# USER REQUEST #: Please create a panorama using two images 'example1.jpg' and 'example2.jpg'.\n# RESULT #: {\"task_steps\": [\"Step 1: Use Image Stitcher to stitch together two images.\"], \"task_nodes\": [{\"task\": \"Image Stitcher\", \"arguments\": [\"example1.jpg\", \"example2.jpg\"]}], \"task_links\": []}\n    \n\n\n    # USER REQUEST #: Please download the audio file from this URL: 'example.wav', then reduce the background noise or unwanted sounds from the downloaded audio. Finally, combine the noise-reduced audio with another existing audio file 'example2.wav'.\n    now please generate your result in a strict JSON format:\n    # RESULT #:\n\n    Below is an example of step-by-step tool calls for planning a task to decompose a complex request into sub-tasks:\n\n    ```json\n    [\n    {\"Step 1\": \"Call tool 1 with input: 'input 1 name and content' and output: 'output 1 name and content'\"}\n    {\"Step 2\": \"Call tool 2 with input: 'input 2 name and content' and output: 'output 2 name and content'\"}\n    {\"Step 3\": \"Finish\"}\n    ]\n    ```\n    Based on this example, generate step-by-step tool calls to solve the given problem by breaking it down into sub-tasks and forming a connected path.\n\n    -----Tool Calls-----\n    \n", "value": 0.0}, "3": {"state": "\n    You are tasked with breaking down a complex user request into solvable sub-tasks by creating a task plan.\n\n    Problem Description:\n\n    # TASK LIST #:\n{\"id\": \"Image Downloader\", \"desc\": \"Downloads an image from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"image\"]}\n{\"id\": \"Video Downloader\", \"desc\": \"Downloads a video from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"video\"]}\n{\"id\": \"Audio Downloader\", \"desc\": \"Downloads an audio file from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Text Downloader\", \"desc\": \"Downloads the text content from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Search\", \"desc\": \"Searches for a specific text or keyword on the internet.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Image Search\", \"desc\": \"Searches for images on the internet based on a given query.\", \"input-type\": [\"text\"], \"output-type\": [\"Image\"]}\n{\"id\": \"Image Search (by Image)\", \"desc\": \"Performs a similar image search using an input image.\", \"input-type\": [\"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"URL Extractor\", \"desc\": \"Extracts URL from text\", \"input-type\": [\"text\"], \"output-type\": [\"url\"]}\n{\"id\": \"Video Search\", \"desc\": \"Searches for videos on the internet based on a given query.\", \"input-type\": [\"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Text-to-Image\", \"desc\": \"Generates an image based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"image\"]}\n{\"id\": \"Text-to-Video\", \"desc\": \"Generates a video based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Text-to-Audio\", \"desc\": \"Generates an audio file based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Image-to-Text\", \"desc\": \"Extracts text from an input image using Optical Character Recognition (OCR).\", \"input-type\": [\"image\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio-to-Text\", \"desc\": \"Transcribes speech from an audio file into text.\", \"input-type\": [\"audio\"], \"output-type\": [\"text\"]}\n{\"id\": \"Video-to-Text\", \"desc\": \"Transcribes speech from a video file into text.\", \"input-type\": [\"video\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio Noise Reduction\", \"desc\": \"Reduces background noise or unwanted sounds from a given audio file.\", \"input-type\": [\"audio\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Audio Effects\", \"desc\": \"Applies various audio effects to a given audio file according to human instruction, such as reverb, chorus, or equalization.\", \"input-type\": [\"audio\", \"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Audio Splicer\", \"desc\": \"Combines two audio files into a single output file.\", \"input-type\": [\"audio\", \"audio\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Voice Changer\", \"desc\": \"Modifies the characteristics of a recorded voice according to human instruction, such as tone, pitch, or gender.\", \"input-type\": [\"audio\", \"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Text Summarizer\", \"desc\": \"Summarizes a given text into a shorter version while retaining the main points.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Translator\", \"desc\": \"Translates a given text from one language to english.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Sentiment Analysis\", \"desc\": \"Analyzes the sentiment of a given text, identifying if it is positive, negative, or neutral.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Grammar Checker\", \"desc\": \"Checks a given text for grammatical errors and suggests corrections.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Simplifier\", \"desc\": \"Rewrites a given text in a simpler and more understandable manner.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Expander\", \"desc\": \"Expands a given short text into a more detailed and descriptive version.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Keyword Extractor\", \"desc\": \"Extracts the most important keywords and phrases from a given text.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Paraphraser\", \"desc\": \"Rewrites a given text using different words while maintaining its original meaning.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Article Spinner\", \"desc\": \"Rewrites a given article using synonyms and syntax changes to create a new, unique version.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Topic Generator\", \"desc\": \"Generates a list of relevant topics or ideas based on a given input.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio-to-Image\", \"desc\": \"Generates an image that visually represents a given audio, such as a waveform or spectrogram.\", \"input-type\": [\"audio\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image-to-Video\", \"desc\": \"Creates a slideshow video using two input images.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video-to-Audio\", \"desc\": \"Extracts the audio track from a given video file.\", \"input-type\": [\"video\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Video-to-Image\", \"desc\": \"Extracts a still image from a given video.\", \"input-type\": [\"video\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Stitcher\", \"desc\": \"Stitches together two input images to create a panorama or collage.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Colorizer\", \"desc\": \"Adds color to a black and white input image using deep learning techniques.\", \"input-type\": [\"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Style Transfer\", \"desc\": \"Applies the visual style of one image (style) to the content of another image (content) using neural style transfer techniques.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Video Stabilizer\", \"desc\": \"Stabilizes a shaky input video to produce a smoother output video.\", \"input-type\": [\"video\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Speed Changer\", \"desc\": \"Adjusts the playback speed of a given video according to human instruction, either speeding it up or slowing it down.\", \"input-type\": [\"video\", \"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Synchronization\", \"desc\": \"Synchronizes the timing of an existing voiceover or audio file with the visuals of a given video.\", \"input-type\": [\"video\", \"audio\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Voiceover\", \"desc\": \"Adds a voiceover to a given video using a provided script or text.\", \"input-type\": [\"video\", \"text\"], \"output-type\": [\"video\"]}\n\n        \n# GOAL #: Based on the above tools, I want you generate task steps and task nodes to solve the # USER REQUEST #. \n        The format must in a strict JSON format, like: {\"task_steps\": [one or more concrete steps, format as Step x: step description], \"task_nodes\": [{\"task\": \"tool name must be from # TASK LIST #\", \"arguments\": [ a concise list of arguments for the tool. Either original text, or user-mentioned filename, or tag '<node-j>' (start from 0) to refer to the output of the j-th node. ]}], \"task_links\": [{\"source\": \"task name i\", \"target\": \"task name j\"}]} \n        \n        # REQUIREMENTS #: \n        1. the generated task steps and task nodes can resolve the given user request # USER REQUEST # perfectly. Task name must be selected from # TASK LIST #;\n\n        2. the task steps should strictly aligned with the task nodes, and the number of task steps should be same with the task nodes;\n\n        3. the dependencies among task steps should align with the argument dependencies of the task nodes;\n\n        4. the tool arguments should be align with the input-type field of # TASK LIST #;\n\n        5. The task links (task_links) should reflect the temporal dependencies among task nodes, i.e. the order in which the APIs are invoked;\n\n        \nHere are provided examples for your reference.\n\n# EXAMPLE #:\n# USER REQUEST #: Please create a panorama using two images 'example1.jpg' and 'example2.jpg'.\n# RESULT #: {\"task_steps\": [\"Step 1: Use Image Stitcher to stitch together two images.\"], \"task_nodes\": [{\"task\": \"Image Stitcher\", \"arguments\": [\"example1.jpg\", \"example2.jpg\"]}], \"task_links\": []}\n    \n\n\n    # USER REQUEST #: Please download the audio file from this URL: 'example.wav', then reduce the background noise or unwanted sounds from the downloaded audio. Finally, combine the noise-reduced audio with another existing audio file 'example2.wav'.\n    now please generate your result in a strict JSON format:\n    # RESULT #:\n\n    Below is an example of step-by-step tool calls for planning a task to decompose a complex request into sub-tasks:\n\n    ```json\n    [\n    {\"Step 1\": \"Call tool 1 with input: 'input 1 name and content' and output: 'output 1 name and content'\"}\n    {\"Step 2\": \"Call tool 2 with input: 'input 2 name and content' and output: 'output 2 name and content'\"}\n    {\"Step 3\": \"Finish\"}\n    ]\n    ```\n    Based on this example, generate step-by-step tool calls to solve the given problem by breaking it down into sub-tasks and forming a connected path.\n\n    -----Tool Calls-----\n    \n", "value": 0.0}, "4": {"state": "\n    You are tasked with breaking down a complex user request into solvable sub-tasks by creating a task plan.\n\n    Problem Description:\n\n    # TASK LIST #:\n{\"id\": \"Image Downloader\", \"desc\": \"Downloads an image from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"image\"]}\n{\"id\": \"Video Downloader\", \"desc\": \"Downloads a video from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"video\"]}\n{\"id\": \"Audio Downloader\", \"desc\": \"Downloads an audio file from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Text Downloader\", \"desc\": \"Downloads the text content from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Search\", \"desc\": \"Searches for a specific text or keyword on the internet.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Image Search\", \"desc\": \"Searches for images on the internet based on a given query.\", \"input-type\": [\"text\"], \"output-type\": [\"Image\"]}\n{\"id\": \"Image Search (by Image)\", \"desc\": \"Performs a similar image search using an input image.\", \"input-type\": [\"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"URL Extractor\", \"desc\": \"Extracts URL from text\", \"input-type\": [\"text\"], \"output-type\": [\"url\"]}\n{\"id\": \"Video Search\", \"desc\": \"Searches for videos on the internet based on a given query.\", \"input-type\": [\"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Text-to-Image\", \"desc\": \"Generates an image based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"image\"]}\n{\"id\": \"Text-to-Video\", \"desc\": \"Generates a video based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Text-to-Audio\", \"desc\": \"Generates an audio file based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Image-to-Text\", \"desc\": \"Extracts text from an input image using Optical Character Recognition (OCR).\", \"input-type\": [\"image\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio-to-Text\", \"desc\": \"Transcribes speech from an audio file into text.\", \"input-type\": [\"audio\"], \"output-type\": [\"text\"]}\n{\"id\": \"Video-to-Text\", \"desc\": \"Transcribes speech from a video file into text.\", \"input-type\": [\"video\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio Noise Reduction\", \"desc\": \"Reduces background noise or unwanted sounds from a given audio file.\", \"input-type\": [\"audio\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Audio Effects\", \"desc\": \"Applies various audio effects to a given audio file according to human instruction, such as reverb, chorus, or equalization.\", \"input-type\": [\"audio\", \"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Audio Splicer\", \"desc\": \"Combines two audio files into a single output file.\", \"input-type\": [\"audio\", \"audio\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Voice Changer\", \"desc\": \"Modifies the characteristics of a recorded voice according to human instruction, such as tone, pitch, or gender.\", \"input-type\": [\"audio\", \"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Text Summarizer\", \"desc\": \"Summarizes a given text into a shorter version while retaining the main points.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Translator\", \"desc\": \"Translates a given text from one language to english.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Sentiment Analysis\", \"desc\": \"Analyzes the sentiment of a given text, identifying if it is positive, negative, or neutral.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Grammar Checker\", \"desc\": \"Checks a given text for grammatical errors and suggests corrections.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Simplifier\", \"desc\": \"Rewrites a given text in a simpler and more understandable manner.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Expander\", \"desc\": \"Expands a given short text into a more detailed and descriptive version.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Keyword Extractor\", \"desc\": \"Extracts the most important keywords and phrases from a given text.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Paraphraser\", \"desc\": \"Rewrites a given text using different words while maintaining its original meaning.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Article Spinner\", \"desc\": \"Rewrites a given article using synonyms and syntax changes to create a new, unique version.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Topic Generator\", \"desc\": \"Generates a list of relevant topics or ideas based on a given input.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio-to-Image\", \"desc\": \"Generates an image that visually represents a given audio, such as a waveform or spectrogram.\", \"input-type\": [\"audio\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image-to-Video\", \"desc\": \"Creates a slideshow video using two input images.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video-to-Audio\", \"desc\": \"Extracts the audio track from a given video file.\", \"input-type\": [\"video\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Video-to-Image\", \"desc\": \"Extracts a still image from a given video.\", \"input-type\": [\"video\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Stitcher\", \"desc\": \"Stitches together two input images to create a panorama or collage.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Colorizer\", \"desc\": \"Adds color to a black and white input image using deep learning techniques.\", \"input-type\": [\"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Style Transfer\", \"desc\": \"Applies the visual style of one image (style) to the content of another image (content) using neural style transfer techniques.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Video Stabilizer\", \"desc\": \"Stabilizes a shaky input video to produce a smoother output video.\", \"input-type\": [\"video\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Speed Changer\", \"desc\": \"Adjusts the playback speed of a given video according to human instruction, either speeding it up or slowing it down.\", \"input-type\": [\"video\", \"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Synchronization\", \"desc\": \"Synchronizes the timing of an existing voiceover or audio file with the visuals of a given video.\", \"input-type\": [\"video\", \"audio\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Voiceover\", \"desc\": \"Adds a voiceover to a given video using a provided script or text.\", \"input-type\": [\"video\", \"text\"], \"output-type\": [\"video\"]}\n\n        \n# GOAL #: Based on the above tools, I want you generate task steps and task nodes to solve the # USER REQUEST #. \n        The format must in a strict JSON format, like: {\"task_steps\": [one or more concrete steps, format as Step x: step description], \"task_nodes\": [{\"task\": \"tool name must be from # TASK LIST #\", \"arguments\": [ a concise list of arguments for the tool. Either original text, or user-mentioned filename, or tag '<node-j>' (start from 0) to refer to the output of the j-th node. ]}], \"task_links\": [{\"source\": \"task name i\", \"target\": \"task name j\"}]} \n        \n        # REQUIREMENTS #: \n        1. the generated task steps and task nodes can resolve the given user request # USER REQUEST # perfectly. Task name must be selected from # TASK LIST #;\n\n        2. the task steps should strictly aligned with the task nodes, and the number of task steps should be same with the task nodes;\n\n        3. the dependencies among task steps should align with the argument dependencies of the task nodes;\n\n        4. the tool arguments should be align with the input-type field of # TASK LIST #;\n\n        5. The task links (task_links) should reflect the temporal dependencies among task nodes, i.e. the order in which the APIs are invoked;\n\n        \nHere are provided examples for your reference.\n\n# EXAMPLE #:\n# USER REQUEST #: Please create a panorama using two images 'example1.jpg' and 'example2.jpg'.\n# RESULT #: {\"task_steps\": [\"Step 1: Use Image Stitcher to stitch together two images.\"], \"task_nodes\": [{\"task\": \"Image Stitcher\", \"arguments\": [\"example1.jpg\", \"example2.jpg\"]}], \"task_links\": []}\n    \n\n\n    # USER REQUEST #: Please download the audio file from this URL: 'example.wav', then reduce the background noise or unwanted sounds from the downloaded audio. Finally, combine the noise-reduced audio with another existing audio file 'example2.wav'.\n    now please generate your result in a strict JSON format:\n    # RESULT #:\n\n    Below is an example of step-by-step tool calls for planning a task to decompose a complex request into sub-tasks:\n\n    ```json\n    [\n    {\"Step 1\": \"Call tool 1 with input: 'input 1 name and content' and output: 'output 1 name and content'\"}\n    {\"Step 2\": \"Call tool 2 with input: 'input 2 name and content' and output: 'output 2 name and content'\"}\n    {\"Step 3\": \"Finish\"}\n    ]\n    ```\n    Based on this example, generate step-by-step tool calls to solve the given problem by breaking it down into sub-tasks and forming a connected path.\n\n    -----Tool Calls-----\n    \n\n", "value": 0.0}}]
[[[0, 0], [0, 1], [0, 2], [1, 3], [1, 4], [1, 5], [2, 6], [2, 7], [2, 8], [3, 9], [3, 10], [3, 11], [4, 12], [4, 13], [4, 14]], [[0, 1], [1, 2], [2, 3], [3, 4]], {"0": {"ucb": 1.9915149877893594, "p_ucb": 1.8223634889654234, "var_p_ucb": 2.0012425802295364, "action": "Tool Call of Step 1:Call Video Speed Changer tool with input: 'example.mp4' and output: '<node-0>'\n", "prob": 0.9}, "1": {"ucb": 2.8372724819090394, "p_ucb": 2.456681609555183, "var_p_ucb": 2.7100936555126767, "action": "Tool Call of Step 1:Call Text-to-Audio tool with input: 'example.mp4' and output: '<node-1>'\n", "prob": 0.85}, "2": {"ucb": 2.537272482359039, "p_ucb": 2.0298179858872314, "var_p_ucb": 2.268323440906048, "action": "", "prob": 0.8}, "3": {"ucb": 2.39629414748641, "p_ucb": 2.39629414748641, "var_p_ucb": 2.5726303426294415, "action": "\n", "prob": 1.0}, "4": {"ucb": 4.19258829587282, "p_ucb": 4.19258829587282, "var_p_ucb": 4.5452606861588825, "action": "\n", "prob": 1.0}, "5": {"ucb": 4.19258829587282, "p_ucb": 4.19258829587282, "var_p_ucb": 4.5452606861588825, "action": "\n", "prob": 1.0}, "6": {"ucb": 3.3302184446307908, "p_ucb": 3.3302184446307908, "var_p_ucb": 3.5486510228161983, "action": "\n", "prob": 1.0}, "7": {"ucb": 3.3302184446307908, "p_ucb": 3.3302184446307908, "var_p_ucb": 3.5486510228161983, "action": "\n", "prob": 1.0}, "8": {"ucb": 3.3302184446307908, "p_ucb": 3.3302184446307908, "var_p_ucb": 3.5486510228161983, "action": "\n", "prob": 1.0}, "9": {"ucb": 3.3302184446307908, "p_ucb": 2.9971966001677117, "var_p_ucb": 3.193785920534579, "action": "Tool Call of Step 2:Call Video Speed Changer tool with input: 'example.mp4' and output: '<node-0>'\n", "prob": 0.9}, "10": {"ucb": 3.3302184446307908, "p_ucb": 2.830685677936172, "var_p_ucb": 3.0163533693937685, "action": "Tool Call of Step 2:Call Text-to-Audio tool with input: 'script.txt' and output: 'audio_script.mp3'\n", "prob": 0.85}, "11": {"ucb": 3.3302184446307908, "p_ucb": 2.6641747557046327, "var_p_ucb": 2.8389208182529586, "action": "Tool Call of Step 2:Call Video Synchronization tool with input: '<node-0>', '<node-1>' and output: 'synchronized_video.mp4'\n", "prob": 0.8}, "12": {"ucb": 3.3302184446307908, "p_ucb": 3.3302184446307908, "var_p_ucb": 3.5486510228161983, "action": "\n", "prob": 1.0}, "13": {"ucb": 3.3302184446307908, "p_ucb": 3.3302184446307908, "var_p_ucb": 3.5486510228161983, "action": "\n", "prob": 1.0}, "14": {"ucb": 3.3302184446307908, "p_ucb": 3.3302184446307908, "var_p_ucb": 3.5486510228161983, "action": "\n", "prob": 1.0}}, {"0": {"state": "\n    You are tasked with breaking down a complex user request into solvable sub-tasks by creating a task plan.\n\n    Problem Description:\n\n    # TASK LIST #:\n{\"id\": \"Image Downloader\", \"desc\": \"Downloads an image from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"image\"]}\n{\"id\": \"Video Downloader\", \"desc\": \"Downloads a video from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"video\"]}\n{\"id\": \"Audio Downloader\", \"desc\": \"Downloads an audio file from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Text Downloader\", \"desc\": \"Downloads the text content from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Search\", \"desc\": \"Searches for a specific text or keyword on the internet.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Image Search\", \"desc\": \"Searches for images on the internet based on a given query.\", \"input-type\": [\"text\"], \"output-type\": [\"Image\"]}\n{\"id\": \"Image Search (by Image)\", \"desc\": \"Performs a similar image search using an input image.\", \"input-type\": [\"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"URL Extractor\", \"desc\": \"Extracts URL from text\", \"input-type\": [\"text\"], \"output-type\": [\"url\"]}\n{\"id\": \"Video Search\", \"desc\": \"Searches for videos on the internet based on a given query.\", \"input-type\": [\"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Text-to-Image\", \"desc\": \"Generates an image based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"image\"]}\n{\"id\": \"Text-to-Video\", \"desc\": \"Generates a video based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Text-to-Audio\", \"desc\": \"Generates an audio file based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Image-to-Text\", \"desc\": \"Extracts text from an input image using Optical Character Recognition (OCR).\", \"input-type\": [\"image\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio-to-Text\", \"desc\": \"Transcribes speech from an audio file into text.\", \"input-type\": [\"audio\"], \"output-type\": [\"text\"]}\n{\"id\": \"Video-to-Text\", \"desc\": \"Transcribes speech from a video file into text.\", \"input-type\": [\"video\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio Noise Reduction\", \"desc\": \"Reduces background noise or unwanted sounds from a given audio file.\", \"input-type\": [\"audio\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Audio Effects\", \"desc\": \"Applies various audio effects to a given audio file according to human instruction, such as reverb, chorus, or equalization.\", \"input-type\": [\"audio\", \"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Audio Splicer\", \"desc\": \"Combines two audio files into a single output file.\", \"input-type\": [\"audio\", \"audio\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Voice Changer\", \"desc\": \"Modifies the characteristics of a recorded voice according to human instruction, such as tone, pitch, or gender.\", \"input-type\": [\"audio\", \"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Text Summarizer\", \"desc\": \"Summarizes a given text into a shorter version while retaining the main points.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Translator\", \"desc\": \"Translates a given text from one language to english.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Sentiment Analysis\", \"desc\": \"Analyzes the sentiment of a given text, identifying if it is positive, negative, or neutral.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Grammar Checker\", \"desc\": \"Checks a given text for grammatical errors and suggests corrections.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Simplifier\", \"desc\": \"Rewrites a given text in a simpler and more understandable manner.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Expander\", \"desc\": \"Expands a given short text into a more detailed and descriptive version.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Keyword Extractor\", \"desc\": \"Extracts the most important keywords and phrases from a given text.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Paraphraser\", \"desc\": \"Rewrites a given text using different words while maintaining its original meaning.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Article Spinner\", \"desc\": \"Rewrites a given article using synonyms and syntax changes to create a new, unique version.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Topic Generator\", \"desc\": \"Generates a list of relevant topics or ideas based on a given input.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio-to-Image\", \"desc\": \"Generates an image that visually represents a given audio, such as a waveform or spectrogram.\", \"input-type\": [\"audio\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image-to-Video\", \"desc\": \"Creates a slideshow video using two input images.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video-to-Audio\", \"desc\": \"Extracts the audio track from a given video file.\", \"input-type\": [\"video\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Video-to-Image\", \"desc\": \"Extracts a still image from a given video.\", \"input-type\": [\"video\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Stitcher\", \"desc\": \"Stitches together two input images to create a panorama or collage.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Colorizer\", \"desc\": \"Adds color to a black and white input image using deep learning techniques.\", \"input-type\": [\"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Style Transfer\", \"desc\": \"Applies the visual style of one image (style) to the content of another image (content) using neural style transfer techniques.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Video Stabilizer\", \"desc\": \"Stabilizes a shaky input video to produce a smoother output video.\", \"input-type\": [\"video\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Speed Changer\", \"desc\": \"Adjusts the playback speed of a given video according to human instruction, either speeding it up or slowing it down.\", \"input-type\": [\"video\", \"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Synchronization\", \"desc\": \"Synchronizes the timing of an existing voiceover or audio file with the visuals of a given video.\", \"input-type\": [\"video\", \"audio\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Voiceover\", \"desc\": \"Adds a voiceover to a given video using a provided script or text.\", \"input-type\": [\"video\", \"text\"], \"output-type\": [\"video\"]}\n\n        \n# GOAL #: Based on the above tools, I want you generate task steps and task nodes to solve the # USER REQUEST #. \n        The format must in a strict JSON format, like: {\"task_steps\": [one or more concrete steps, format as Step x: step description], \"task_nodes\": [{\"task\": \"tool name must be from # TASK LIST #\", \"arguments\": [ a concise list of arguments for the tool. Either original text, or user-mentioned filename, or tag '<node-j>' (start from 0) to refer to the output of the j-th node. ]}], \"task_links\": [{\"source\": \"task name i\", \"target\": \"task name j\"}]} \n        \n        # REQUIREMENTS #: \n        1. the generated task steps and task nodes can resolve the given user request # USER REQUEST # perfectly. Task name must be selected from # TASK LIST #;\n\n        2. the task steps should strictly aligned with the task nodes, and the number of task steps should be same with the task nodes;\n\n        3. the dependencies among task steps should align with the argument dependencies of the task nodes;\n\n        4. the tool arguments should be align with the input-type field of # TASK LIST #;\n\n        5. The task links (task_links) should reflect the temporal dependencies among task nodes, i.e. the order in which the APIs are invoked;\n\n        \nHere are provided examples for your reference.\n\n# EXAMPLE #:\n# USER REQUEST #: Please create a panorama using two images 'example1.jpg' and 'example2.jpg'.\n# RESULT #: {\"task_steps\": [\"Step 1: Use Image Stitcher to stitch together two images.\"], \"task_nodes\": [{\"task\": \"Image Stitcher\", \"arguments\": [\"example1.jpg\", \"example2.jpg\"]}], \"task_links\": []}\n    \n\n\n    # USER REQUEST #: Please adjust the playback speed of the video 'example.mp4' to twice its current speed.\n    now please generate your result in a strict JSON format:\n    # RESULT #:\n\n    Below is an example of step-by-step tool calls for planning a task to decompose a complex request into sub-tasks:\n\n    ```json\n    [\n    {\"Step 1\": \"Call tool 1 with input: 'input 1 name and content' and output: 'output 1 name and content'\"}\n    {\"Step 2\": \"Call tool 2 with input: 'input 2 name and content' and output: 'output 2 name and content'\"}\n    {\"Step 3\": \"Finish\"}\n    ]\n    ```\n    Based on this example, generate step-by-step tool calls to solve the given problem by breaking it down into sub-tasks and forming a connected path.\n\n    -----Tool Calls-----\n    ", "value": null}, "1": {"state": "\n    You are tasked with breaking down a complex user request into solvable sub-tasks by creating a task plan.\n\n    Problem Description:\n\n    # TASK LIST #:\n{\"id\": \"Image Downloader\", \"desc\": \"Downloads an image from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"image\"]}\n{\"id\": \"Video Downloader\", \"desc\": \"Downloads a video from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"video\"]}\n{\"id\": \"Audio Downloader\", \"desc\": \"Downloads an audio file from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Text Downloader\", \"desc\": \"Downloads the text content from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Search\", \"desc\": \"Searches for a specific text or keyword on the internet.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Image Search\", \"desc\": \"Searches for images on the internet based on a given query.\", \"input-type\": [\"text\"], \"output-type\": [\"Image\"]}\n{\"id\": \"Image Search (by Image)\", \"desc\": \"Performs a similar image search using an input image.\", \"input-type\": [\"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"URL Extractor\", \"desc\": \"Extracts URL from text\", \"input-type\": [\"text\"], \"output-type\": [\"url\"]}\n{\"id\": \"Video Search\", \"desc\": \"Searches for videos on the internet based on a given query.\", \"input-type\": [\"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Text-to-Image\", \"desc\": \"Generates an image based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"image\"]}\n{\"id\": \"Text-to-Video\", \"desc\": \"Generates a video based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Text-to-Audio\", \"desc\": \"Generates an audio file based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Image-to-Text\", \"desc\": \"Extracts text from an input image using Optical Character Recognition (OCR).\", \"input-type\": [\"image\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio-to-Text\", \"desc\": \"Transcribes speech from an audio file into text.\", \"input-type\": [\"audio\"], \"output-type\": [\"text\"]}\n{\"id\": \"Video-to-Text\", \"desc\": \"Transcribes speech from a video file into text.\", \"input-type\": [\"video\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio Noise Reduction\", \"desc\": \"Reduces background noise or unwanted sounds from a given audio file.\", \"input-type\": [\"audio\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Audio Effects\", \"desc\": \"Applies various audio effects to a given audio file according to human instruction, such as reverb, chorus, or equalization.\", \"input-type\": [\"audio\", \"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Audio Splicer\", \"desc\": \"Combines two audio files into a single output file.\", \"input-type\": [\"audio\", \"audio\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Voice Changer\", \"desc\": \"Modifies the characteristics of a recorded voice according to human instruction, such as tone, pitch, or gender.\", \"input-type\": [\"audio\", \"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Text Summarizer\", \"desc\": \"Summarizes a given text into a shorter version while retaining the main points.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Translator\", \"desc\": \"Translates a given text from one language to english.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Sentiment Analysis\", \"desc\": \"Analyzes the sentiment of a given text, identifying if it is positive, negative, or neutral.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Grammar Checker\", \"desc\": \"Checks a given text for grammatical errors and suggests corrections.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Simplifier\", \"desc\": \"Rewrites a given text in a simpler and more understandable manner.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Expander\", \"desc\": \"Expands a given short text into a more detailed and descriptive version.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Keyword Extractor\", \"desc\": \"Extracts the most important keywords and phrases from a given text.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Paraphraser\", \"desc\": \"Rewrites a given text using different words while maintaining its original meaning.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Article Spinner\", \"desc\": \"Rewrites a given article using synonyms and syntax changes to create a new, unique version.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Topic Generator\", \"desc\": \"Generates a list of relevant topics or ideas based on a given input.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio-to-Image\", \"desc\": \"Generates an image that visually represents a given audio, such as a waveform or spectrogram.\", \"input-type\": [\"audio\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image-to-Video\", \"desc\": \"Creates a slideshow video using two input images.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video-to-Audio\", \"desc\": \"Extracts the audio track from a given video file.\", \"input-type\": [\"video\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Video-to-Image\", \"desc\": \"Extracts a still image from a given video.\", \"input-type\": [\"video\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Stitcher\", \"desc\": \"Stitches together two input images to create a panorama or collage.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Colorizer\", \"desc\": \"Adds color to a black and white input image using deep learning techniques.\", \"input-type\": [\"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Style Transfer\", \"desc\": \"Applies the visual style of one image (style) to the content of another image (content) using neural style transfer techniques.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Video Stabilizer\", \"desc\": \"Stabilizes a shaky input video to produce a smoother output video.\", \"input-type\": [\"video\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Speed Changer\", \"desc\": \"Adjusts the playback speed of a given video according to human instruction, either speeding it up or slowing it down.\", \"input-type\": [\"video\", \"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Synchronization\", \"desc\": \"Synchronizes the timing of an existing voiceover or audio file with the visuals of a given video.\", \"input-type\": [\"video\", \"audio\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Voiceover\", \"desc\": \"Adds a voiceover to a given video using a provided script or text.\", \"input-type\": [\"video\", \"text\"], \"output-type\": [\"video\"]}\n\n        \n# GOAL #: Based on the above tools, I want you generate task steps and task nodes to solve the # USER REQUEST #. \n        The format must in a strict JSON format, like: {\"task_steps\": [one or more concrete steps, format as Step x: step description], \"task_nodes\": [{\"task\": \"tool name must be from # TASK LIST #\", \"arguments\": [ a concise list of arguments for the tool. Either original text, or user-mentioned filename, or tag '<node-j>' (start from 0) to refer to the output of the j-th node. ]}], \"task_links\": [{\"source\": \"task name i\", \"target\": \"task name j\"}]} \n        \n        # REQUIREMENTS #: \n        1. the generated task steps and task nodes can resolve the given user request # USER REQUEST # perfectly. Task name must be selected from # TASK LIST #;\n\n        2. the task steps should strictly aligned with the task nodes, and the number of task steps should be same with the task nodes;\n\n        3. the dependencies among task steps should align with the argument dependencies of the task nodes;\n\n        4. the tool arguments should be align with the input-type field of # TASK LIST #;\n\n        5. The task links (task_links) should reflect the temporal dependencies among task nodes, i.e. the order in which the APIs are invoked;\n\n        \nHere are provided examples for your reference.\n\n# EXAMPLE #:\n# USER REQUEST #: Please create a panorama using two images 'example1.jpg' and 'example2.jpg'.\n# RESULT #: {\"task_steps\": [\"Step 1: Use Image Stitcher to stitch together two images.\"], \"task_nodes\": [{\"task\": \"Image Stitcher\", \"arguments\": [\"example1.jpg\", \"example2.jpg\"]}], \"task_links\": []}\n    \n\n\n    # USER REQUEST #: Please adjust the playback speed of the video 'example.mp4' to twice its current speed.\n    now please generate your result in a strict JSON format:\n    # RESULT #:\n\n    Below is an example of step-by-step tool calls for planning a task to decompose a complex request into sub-tasks:\n\n    ```json\n    [\n    {\"Step 1\": \"Call tool 1 with input: 'input 1 name and content' and output: 'output 1 name and content'\"}\n    {\"Step 2\": \"Call tool 2 with input: 'input 2 name and content' and output: 'output 2 name and content'\"}\n    {\"Step 3\": \"Finish\"}\n    ]\n    ```\n    Based on this example, generate step-by-step tool calls to solve the given problem by breaking it down into sub-tasks and forming a connected path.\n\n    -----Tool Calls-----\n    Tool Call of Step 1:Call Video Speed Changer tool with input: 'example.mp4' and output: '<node-0>'\n", "value": 0.33333333283333333}, "2": {"state": "\n    You are tasked with breaking down a complex user request into solvable sub-tasks by creating a task plan.\n\n    Problem Description:\n\n    # TASK LIST #:\n{\"id\": \"Image Downloader\", \"desc\": \"Downloads an image from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"image\"]}\n{\"id\": \"Video Downloader\", \"desc\": \"Downloads a video from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"video\"]}\n{\"id\": \"Audio Downloader\", \"desc\": \"Downloads an audio file from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Text Downloader\", \"desc\": \"Downloads the text content from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Search\", \"desc\": \"Searches for a specific text or keyword on the internet.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Image Search\", \"desc\": \"Searches for images on the internet based on a given query.\", \"input-type\": [\"text\"], \"output-type\": [\"Image\"]}\n{\"id\": \"Image Search (by Image)\", \"desc\": \"Performs a similar image search using an input image.\", \"input-type\": [\"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"URL Extractor\", \"desc\": \"Extracts URL from text\", \"input-type\": [\"text\"], \"output-type\": [\"url\"]}\n{\"id\": \"Video Search\", \"desc\": \"Searches for videos on the internet based on a given query.\", \"input-type\": [\"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Text-to-Image\", \"desc\": \"Generates an image based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"image\"]}\n{\"id\": \"Text-to-Video\", \"desc\": \"Generates a video based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Text-to-Audio\", \"desc\": \"Generates an audio file based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Image-to-Text\", \"desc\": \"Extracts text from an input image using Optical Character Recognition (OCR).\", \"input-type\": [\"image\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio-to-Text\", \"desc\": \"Transcribes speech from an audio file into text.\", \"input-type\": [\"audio\"], \"output-type\": [\"text\"]}\n{\"id\": \"Video-to-Text\", \"desc\": \"Transcribes speech from a video file into text.\", \"input-type\": [\"video\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio Noise Reduction\", \"desc\": \"Reduces background noise or unwanted sounds from a given audio file.\", \"input-type\": [\"audio\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Audio Effects\", \"desc\": \"Applies various audio effects to a given audio file according to human instruction, such as reverb, chorus, or equalization.\", \"input-type\": [\"audio\", \"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Audio Splicer\", \"desc\": \"Combines two audio files into a single output file.\", \"input-type\": [\"audio\", \"audio\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Voice Changer\", \"desc\": \"Modifies the characteristics of a recorded voice according to human instruction, such as tone, pitch, or gender.\", \"input-type\": [\"audio\", \"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Text Summarizer\", \"desc\": \"Summarizes a given text into a shorter version while retaining the main points.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Translator\", \"desc\": \"Translates a given text from one language to english.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Sentiment Analysis\", \"desc\": \"Analyzes the sentiment of a given text, identifying if it is positive, negative, or neutral.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Grammar Checker\", \"desc\": \"Checks a given text for grammatical errors and suggests corrections.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Simplifier\", \"desc\": \"Rewrites a given text in a simpler and more understandable manner.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Expander\", \"desc\": \"Expands a given short text into a more detailed and descriptive version.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Keyword Extractor\", \"desc\": \"Extracts the most important keywords and phrases from a given text.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Paraphraser\", \"desc\": \"Rewrites a given text using different words while maintaining its original meaning.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Article Spinner\", \"desc\": \"Rewrites a given article using synonyms and syntax changes to create a new, unique version.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Topic Generator\", \"desc\": \"Generates a list of relevant topics or ideas based on a given input.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio-to-Image\", \"desc\": \"Generates an image that visually represents a given audio, such as a waveform or spectrogram.\", \"input-type\": [\"audio\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image-to-Video\", \"desc\": \"Creates a slideshow video using two input images.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video-to-Audio\", \"desc\": \"Extracts the audio track from a given video file.\", \"input-type\": [\"video\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Video-to-Image\", \"desc\": \"Extracts a still image from a given video.\", \"input-type\": [\"video\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Stitcher\", \"desc\": \"Stitches together two input images to create a panorama or collage.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Colorizer\", \"desc\": \"Adds color to a black and white input image using deep learning techniques.\", \"input-type\": [\"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Style Transfer\", \"desc\": \"Applies the visual style of one image (style) to the content of another image (content) using neural style transfer techniques.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Video Stabilizer\", \"desc\": \"Stabilizes a shaky input video to produce a smoother output video.\", \"input-type\": [\"video\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Speed Changer\", \"desc\": \"Adjusts the playback speed of a given video according to human instruction, either speeding it up or slowing it down.\", \"input-type\": [\"video\", \"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Synchronization\", \"desc\": \"Synchronizes the timing of an existing voiceover or audio file with the visuals of a given video.\", \"input-type\": [\"video\", \"audio\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Voiceover\", \"desc\": \"Adds a voiceover to a given video using a provided script or text.\", \"input-type\": [\"video\", \"text\"], \"output-type\": [\"video\"]}\n\n        \n# GOAL #: Based on the above tools, I want you generate task steps and task nodes to solve the # USER REQUEST #. \n        The format must in a strict JSON format, like: {\"task_steps\": [one or more concrete steps, format as Step x: step description], \"task_nodes\": [{\"task\": \"tool name must be from # TASK LIST #\", \"arguments\": [ a concise list of arguments for the tool. Either original text, or user-mentioned filename, or tag '<node-j>' (start from 0) to refer to the output of the j-th node. ]}], \"task_links\": [{\"source\": \"task name i\", \"target\": \"task name j\"}]} \n        \n        # REQUIREMENTS #: \n        1. the generated task steps and task nodes can resolve the given user request # USER REQUEST # perfectly. Task name must be selected from # TASK LIST #;\n\n        2. the task steps should strictly aligned with the task nodes, and the number of task steps should be same with the task nodes;\n\n        3. the dependencies among task steps should align with the argument dependencies of the task nodes;\n\n        4. the tool arguments should be align with the input-type field of # TASK LIST #;\n\n        5. The task links (task_links) should reflect the temporal dependencies among task nodes, i.e. the order in which the APIs are invoked;\n\n        \nHere are provided examples for your reference.\n\n# EXAMPLE #:\n# USER REQUEST #: Please create a panorama using two images 'example1.jpg' and 'example2.jpg'.\n# RESULT #: {\"task_steps\": [\"Step 1: Use Image Stitcher to stitch together two images.\"], \"task_nodes\": [{\"task\": \"Image Stitcher\", \"arguments\": [\"example1.jpg\", \"example2.jpg\"]}], \"task_links\": []}\n    \n\n\n    # USER REQUEST #: Please adjust the playback speed of the video 'example.mp4' to twice its current speed.\n    now please generate your result in a strict JSON format:\n    # RESULT #:\n\n    Below is an example of step-by-step tool calls for planning a task to decompose a complex request into sub-tasks:\n\n    ```json\n    [\n    {\"Step 1\": \"Call tool 1 with input: 'input 1 name and content' and output: 'output 1 name and content'\"}\n    {\"Step 2\": \"Call tool 2 with input: 'input 2 name and content' and output: 'output 2 name and content'\"}\n    {\"Step 3\": \"Finish\"}\n    ]\n    ```\n    Based on this example, generate step-by-step tool calls to solve the given problem by breaking it down into sub-tasks and forming a connected path.\n\n    -----Tool Calls-----\n    Tool Call of Step 1:Call Text-to-Audio tool with input: 'example.mp4' and output: '<node-1>'\n", "value": 0.33333333283333333}, "3": {"state": "\n    You are tasked with breaking down a complex user request into solvable sub-tasks by creating a task plan.\n\n    Problem Description:\n\n    # TASK LIST #:\n{\"id\": \"Image Downloader\", \"desc\": \"Downloads an image from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"image\"]}\n{\"id\": \"Video Downloader\", \"desc\": \"Downloads a video from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"video\"]}\n{\"id\": \"Audio Downloader\", \"desc\": \"Downloads an audio file from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Text Downloader\", \"desc\": \"Downloads the text content from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Search\", \"desc\": \"Searches for a specific text or keyword on the internet.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Image Search\", \"desc\": \"Searches for images on the internet based on a given query.\", \"input-type\": [\"text\"], \"output-type\": [\"Image\"]}\n{\"id\": \"Image Search (by Image)\", \"desc\": \"Performs a similar image search using an input image.\", \"input-type\": [\"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"URL Extractor\", \"desc\": \"Extracts URL from text\", \"input-type\": [\"text\"], \"output-type\": [\"url\"]}\n{\"id\": \"Video Search\", \"desc\": \"Searches for videos on the internet based on a given query.\", \"input-type\": [\"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Text-to-Image\", \"desc\": \"Generates an image based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"image\"]}\n{\"id\": \"Text-to-Video\", \"desc\": \"Generates a video based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Text-to-Audio\", \"desc\": \"Generates an audio file based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Image-to-Text\", \"desc\": \"Extracts text from an input image using Optical Character Recognition (OCR).\", \"input-type\": [\"image\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio-to-Text\", \"desc\": \"Transcribes speech from an audio file into text.\", \"input-type\": [\"audio\"], \"output-type\": [\"text\"]}\n{\"id\": \"Video-to-Text\", \"desc\": \"Transcribes speech from a video file into text.\", \"input-type\": [\"video\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio Noise Reduction\", \"desc\": \"Reduces background noise or unwanted sounds from a given audio file.\", \"input-type\": [\"audio\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Audio Effects\", \"desc\": \"Applies various audio effects to a given audio file according to human instruction, such as reverb, chorus, or equalization.\", \"input-type\": [\"audio\", \"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Audio Splicer\", \"desc\": \"Combines two audio files into a single output file.\", \"input-type\": [\"audio\", \"audio\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Voice Changer\", \"desc\": \"Modifies the characteristics of a recorded voice according to human instruction, such as tone, pitch, or gender.\", \"input-type\": [\"audio\", \"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Text Summarizer\", \"desc\": \"Summarizes a given text into a shorter version while retaining the main points.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Translator\", \"desc\": \"Translates a given text from one language to english.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Sentiment Analysis\", \"desc\": \"Analyzes the sentiment of a given text, identifying if it is positive, negative, or neutral.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Grammar Checker\", \"desc\": \"Checks a given text for grammatical errors and suggests corrections.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Simplifier\", \"desc\": \"Rewrites a given text in a simpler and more understandable manner.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Expander\", \"desc\": \"Expands a given short text into a more detailed and descriptive version.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Keyword Extractor\", \"desc\": \"Extracts the most important keywords and phrases from a given text.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Paraphraser\", \"desc\": \"Rewrites a given text using different words while maintaining its original meaning.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Article Spinner\", \"desc\": \"Rewrites a given article using synonyms and syntax changes to create a new, unique version.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Topic Generator\", \"desc\": \"Generates a list of relevant topics or ideas based on a given input.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio-to-Image\", \"desc\": \"Generates an image that visually represents a given audio, such as a waveform or spectrogram.\", \"input-type\": [\"audio\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image-to-Video\", \"desc\": \"Creates a slideshow video using two input images.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video-to-Audio\", \"desc\": \"Extracts the audio track from a given video file.\", \"input-type\": [\"video\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Video-to-Image\", \"desc\": \"Extracts a still image from a given video.\", \"input-type\": [\"video\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Stitcher\", \"desc\": \"Stitches together two input images to create a panorama or collage.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Colorizer\", \"desc\": \"Adds color to a black and white input image using deep learning techniques.\", \"input-type\": [\"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Style Transfer\", \"desc\": \"Applies the visual style of one image (style) to the content of another image (content) using neural style transfer techniques.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Video Stabilizer\", \"desc\": \"Stabilizes a shaky input video to produce a smoother output video.\", \"input-type\": [\"video\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Speed Changer\", \"desc\": \"Adjusts the playback speed of a given video according to human instruction, either speeding it up or slowing it down.\", \"input-type\": [\"video\", \"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Synchronization\", \"desc\": \"Synchronizes the timing of an existing voiceover or audio file with the visuals of a given video.\", \"input-type\": [\"video\", \"audio\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Voiceover\", \"desc\": \"Adds a voiceover to a given video using a provided script or text.\", \"input-type\": [\"video\", \"text\"], \"output-type\": [\"video\"]}\n\n        \n# GOAL #: Based on the above tools, I want you generate task steps and task nodes to solve the # USER REQUEST #. \n        The format must in a strict JSON format, like: {\"task_steps\": [one or more concrete steps, format as Step x: step description], \"task_nodes\": [{\"task\": \"tool name must be from # TASK LIST #\", \"arguments\": [ a concise list of arguments for the tool. Either original text, or user-mentioned filename, or tag '<node-j>' (start from 0) to refer to the output of the j-th node. ]}], \"task_links\": [{\"source\": \"task name i\", \"target\": \"task name j\"}]} \n        \n        # REQUIREMENTS #: \n        1. the generated task steps and task nodes can resolve the given user request # USER REQUEST # perfectly. Task name must be selected from # TASK LIST #;\n\n        2. the task steps should strictly aligned with the task nodes, and the number of task steps should be same with the task nodes;\n\n        3. the dependencies among task steps should align with the argument dependencies of the task nodes;\n\n        4. the tool arguments should be align with the input-type field of # TASK LIST #;\n\n        5. The task links (task_links) should reflect the temporal dependencies among task nodes, i.e. the order in which the APIs are invoked;\n\n        \nHere are provided examples for your reference.\n\n# EXAMPLE #:\n# USER REQUEST #: Please create a panorama using two images 'example1.jpg' and 'example2.jpg'.\n# RESULT #: {\"task_steps\": [\"Step 1: Use Image Stitcher to stitch together two images.\"], \"task_nodes\": [{\"task\": \"Image Stitcher\", \"arguments\": [\"example1.jpg\", \"example2.jpg\"]}], \"task_links\": []}\n    \n\n\n    # USER REQUEST #: Please adjust the playback speed of the video 'example.mp4' to twice its current speed.\n    now please generate your result in a strict JSON format:\n    # RESULT #:\n\n    Below is an example of step-by-step tool calls for planning a task to decompose a complex request into sub-tasks:\n\n    ```json\n    [\n    {\"Step 1\": \"Call tool 1 with input: 'input 1 name and content' and output: 'output 1 name and content'\"}\n    {\"Step 2\": \"Call tool 2 with input: 'input 2 name and content' and output: 'output 2 name and content'\"}\n    {\"Step 3\": \"Finish\"}\n    ]\n    ```\n    Based on this example, generate step-by-step tool calls to solve the given problem by breaking it down into sub-tasks and forming a connected path.\n\n    -----Tool Calls-----\n    ", "value": 0.0}, "4": {"state": "\n    You are tasked with breaking down a complex user request into solvable sub-tasks by creating a task plan.\n\n    Problem Description:\n\n    # TASK LIST #:\n{\"id\": \"Image Downloader\", \"desc\": \"Downloads an image from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"image\"]}\n{\"id\": \"Video Downloader\", \"desc\": \"Downloads a video from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"video\"]}\n{\"id\": \"Audio Downloader\", \"desc\": \"Downloads an audio file from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Text Downloader\", \"desc\": \"Downloads the text content from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Search\", \"desc\": \"Searches for a specific text or keyword on the internet.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Image Search\", \"desc\": \"Searches for images on the internet based on a given query.\", \"input-type\": [\"text\"], \"output-type\": [\"Image\"]}\n{\"id\": \"Image Search (by Image)\", \"desc\": \"Performs a similar image search using an input image.\", \"input-type\": [\"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"URL Extractor\", \"desc\": \"Extracts URL from text\", \"input-type\": [\"text\"], \"output-type\": [\"url\"]}\n{\"id\": \"Video Search\", \"desc\": \"Searches for videos on the internet based on a given query.\", \"input-type\": [\"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Text-to-Image\", \"desc\": \"Generates an image based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"image\"]}\n{\"id\": \"Text-to-Video\", \"desc\": \"Generates a video based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Text-to-Audio\", \"desc\": \"Generates an audio file based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Image-to-Text\", \"desc\": \"Extracts text from an input image using Optical Character Recognition (OCR).\", \"input-type\": [\"image\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio-to-Text\", \"desc\": \"Transcribes speech from an audio file into text.\", \"input-type\": [\"audio\"], \"output-type\": [\"text\"]}\n{\"id\": \"Video-to-Text\", \"desc\": \"Transcribes speech from a video file into text.\", \"input-type\": [\"video\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio Noise Reduction\", \"desc\": \"Reduces background noise or unwanted sounds from a given audio file.\", \"input-type\": [\"audio\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Audio Effects\", \"desc\": \"Applies various audio effects to a given audio file according to human instruction, such as reverb, chorus, or equalization.\", \"input-type\": [\"audio\", \"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Audio Splicer\", \"desc\": \"Combines two audio files into a single output file.\", \"input-type\": [\"audio\", \"audio\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Voice Changer\", \"desc\": \"Modifies the characteristics of a recorded voice according to human instruction, such as tone, pitch, or gender.\", \"input-type\": [\"audio\", \"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Text Summarizer\", \"desc\": \"Summarizes a given text into a shorter version while retaining the main points.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Translator\", \"desc\": \"Translates a given text from one language to english.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Sentiment Analysis\", \"desc\": \"Analyzes the sentiment of a given text, identifying if it is positive, negative, or neutral.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Grammar Checker\", \"desc\": \"Checks a given text for grammatical errors and suggests corrections.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Simplifier\", \"desc\": \"Rewrites a given text in a simpler and more understandable manner.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Expander\", \"desc\": \"Expands a given short text into a more detailed and descriptive version.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Keyword Extractor\", \"desc\": \"Extracts the most important keywords and phrases from a given text.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Paraphraser\", \"desc\": \"Rewrites a given text using different words while maintaining its original meaning.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Article Spinner\", \"desc\": \"Rewrites a given article using synonyms and syntax changes to create a new, unique version.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Topic Generator\", \"desc\": \"Generates a list of relevant topics or ideas based on a given input.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio-to-Image\", \"desc\": \"Generates an image that visually represents a given audio, such as a waveform or spectrogram.\", \"input-type\": [\"audio\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image-to-Video\", \"desc\": \"Creates a slideshow video using two input images.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video-to-Audio\", \"desc\": \"Extracts the audio track from a given video file.\", \"input-type\": [\"video\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Video-to-Image\", \"desc\": \"Extracts a still image from a given video.\", \"input-type\": [\"video\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Stitcher\", \"desc\": \"Stitches together two input images to create a panorama or collage.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Colorizer\", \"desc\": \"Adds color to a black and white input image using deep learning techniques.\", \"input-type\": [\"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Style Transfer\", \"desc\": \"Applies the visual style of one image (style) to the content of another image (content) using neural style transfer techniques.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Video Stabilizer\", \"desc\": \"Stabilizes a shaky input video to produce a smoother output video.\", \"input-type\": [\"video\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Speed Changer\", \"desc\": \"Adjusts the playback speed of a given video according to human instruction, either speeding it up or slowing it down.\", \"input-type\": [\"video\", \"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Synchronization\", \"desc\": \"Synchronizes the timing of an existing voiceover or audio file with the visuals of a given video.\", \"input-type\": [\"video\", \"audio\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Voiceover\", \"desc\": \"Adds a voiceover to a given video using a provided script or text.\", \"input-type\": [\"video\", \"text\"], \"output-type\": [\"video\"]}\n\n        \n# GOAL #: Based on the above tools, I want you generate task steps and task nodes to solve the # USER REQUEST #. \n        The format must in a strict JSON format, like: {\"task_steps\": [one or more concrete steps, format as Step x: step description], \"task_nodes\": [{\"task\": \"tool name must be from # TASK LIST #\", \"arguments\": [ a concise list of arguments for the tool. Either original text, or user-mentioned filename, or tag '<node-j>' (start from 0) to refer to the output of the j-th node. ]}], \"task_links\": [{\"source\": \"task name i\", \"target\": \"task name j\"}]} \n        \n        # REQUIREMENTS #: \n        1. the generated task steps and task nodes can resolve the given user request # USER REQUEST # perfectly. Task name must be selected from # TASK LIST #;\n\n        2. the task steps should strictly aligned with the task nodes, and the number of task steps should be same with the task nodes;\n\n        3. the dependencies among task steps should align with the argument dependencies of the task nodes;\n\n        4. the tool arguments should be align with the input-type field of # TASK LIST #;\n\n        5. The task links (task_links) should reflect the temporal dependencies among task nodes, i.e. the order in which the APIs are invoked;\n\n        \nHere are provided examples for your reference.\n\n# EXAMPLE #:\n# USER REQUEST #: Please create a panorama using two images 'example1.jpg' and 'example2.jpg'.\n# RESULT #: {\"task_steps\": [\"Step 1: Use Image Stitcher to stitch together two images.\"], \"task_nodes\": [{\"task\": \"Image Stitcher\", \"arguments\": [\"example1.jpg\", \"example2.jpg\"]}], \"task_links\": []}\n    \n\n\n    # USER REQUEST #: Please adjust the playback speed of the video 'example.mp4' to twice its current speed.\n    now please generate your result in a strict JSON format:\n    # RESULT #:\n\n    Below is an example of step-by-step tool calls for planning a task to decompose a complex request into sub-tasks:\n\n    ```json\n    [\n    {\"Step 1\": \"Call tool 1 with input: 'input 1 name and content' and output: 'output 1 name and content'\"}\n    {\"Step 2\": \"Call tool 2 with input: 'input 2 name and content' and output: 'output 2 name and content'\"}\n    {\"Step 3\": \"Finish\"}\n    ]\n    ```\n    Based on this example, generate step-by-step tool calls to solve the given problem by breaking it down into sub-tasks and forming a connected path.\n\n    -----Tool Calls-----\n    Tool Call of Step 1:Call Video Speed Changer tool with input: 'example.mp4' and output: '<node-0>'\n\n", "value": 0.33333333283333333}}]
[[[0, 0], [0, 1], [0, 2], [1, 3], [1, 4], [1, 5], [3, 6], [3, 7], [3, 8], [2, 9], [2, 10], [2, 11], [4, 12], [4, 13], [4, 14]], [[0, 1], [1, 3], [2, 2], [3, 4]], {"0": {"ucb": 1.9915149877893594, "p_ucb": 1.8223634889654234, "var_p_ucb": 2.0012425802295364, "action": "Tool Call of Step 1:Call Image Colorizer tool with input: 'example.jpg' and output: 'colored_example.jpg'\n", "prob": 0.9}, "1": {"ucb": 2.8372724819090394, "p_ucb": 2.3298179854372316, "var_p_ucb": 2.568323440456048, "action": "Tool Call of Step 1:Call Audio Noise Reduction tool with input: 'example.jpg' and output: 'noisy_example.jpg' to remove background noise\n", "prob": 0.8}, "2": {"ucb": 2.8372724819090394, "p_ucb": 2.583545233673135, "var_p_ucb": 2.8518638705693045, "action": "Tool Call of Step 1:Call Image Stitcher tool with input: 'noisy_example.jpg' and 'colored_example.jpg' and output: 'panorama.jpg'\n", "prob": 0.9}, "3": {"ucb": 2.39629414748641, "p_ucb": 2.186664732692769, "var_p_ucb": 2.3453673083214968, "action": "Tool Call of Step 2:Call Image Colorizer tool with input: 'example.jpg' and output: 'colored_example.jpg'\n", "prob": 0.9}, "4": {"ucb": 4.19258829587282, "p_ucb": 3.3540706366982564, "var_p_ucb": 3.636208548927106, "action": "Tool Call of Step 2:Call Text-to-Image tool with input: 'colored_example.jpg' and output: 'colored_image_description.jpg'\n", "prob": 0.8}, "5": {"ucb": 4.19258829587282, "p_ucb": 2.934811807110974, "var_p_ucb": 3.1816824803112174, "action": "", "prob": 0.7}, "6": {"ucb": 3.3302184446307908, "p_ucb": 3.3302184446307908, "var_p_ucb": 3.5486510228161983, "action": "\n", "prob": 1.0}, "7": {"ucb": 3.3302184446307908, "p_ucb": 3.3302184446307908, "var_p_ucb": 3.5486510228161983, "action": "\n", "prob": 1.0}, "8": {"ucb": 3.3302184446307908, "p_ucb": 3.3302184446307908, "var_p_ucb": 3.5486510228161983, "action": "\n", "prob": 1.0}, "9": {"ucb": 3.3302184446307908, "p_ucb": 3.3302184446307908, "var_p_ucb": 3.5486510228161983, "action": "\n", "prob": 1.0}, "10": {"ucb": 3.3302184446307908, "p_ucb": 3.3302184446307908, "var_p_ucb": 3.5486510228161983, "action": "\n", "prob": 1.0}, "11": {"ucb": 3.3302184446307908, "p_ucb": 3.3302184446307908, "var_p_ucb": 3.5486510228161983, "action": "\n", "prob": 1.0}, "12": {"ucb": 3.3302184446307908, "p_ucb": 3.3302184446307908, "var_p_ucb": 3.5486510228161983, "action": "\n", "prob": 1.0}, "13": {"ucb": 3.3302184446307908, "p_ucb": 3.3302184446307908, "var_p_ucb": 3.5486510228161983, "action": "\n", "prob": 1.0}, "14": {"ucb": 3.3302184446307908, "p_ucb": 3.3302184446307908, "var_p_ucb": 3.5486510228161983, "action": "\n", "prob": 1.0}}, {"0": {"state": "\n    You are tasked with breaking down a complex user request into solvable sub-tasks by creating a task plan.\n\n    Problem Description:\n\n    # TASK LIST #:\n{\"id\": \"Image Downloader\", \"desc\": \"Downloads an image from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"image\"]}\n{\"id\": \"Video Downloader\", \"desc\": \"Downloads a video from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"video\"]}\n{\"id\": \"Audio Downloader\", \"desc\": \"Downloads an audio file from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Text Downloader\", \"desc\": \"Downloads the text content from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Search\", \"desc\": \"Searches for a specific text or keyword on the internet.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Image Search\", \"desc\": \"Searches for images on the internet based on a given query.\", \"input-type\": [\"text\"], \"output-type\": [\"Image\"]}\n{\"id\": \"Image Search (by Image)\", \"desc\": \"Performs a similar image search using an input image.\", \"input-type\": [\"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"URL Extractor\", \"desc\": \"Extracts URL from text\", \"input-type\": [\"text\"], \"output-type\": [\"url\"]}\n{\"id\": \"Video Search\", \"desc\": \"Searches for videos on the internet based on a given query.\", \"input-type\": [\"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Text-to-Image\", \"desc\": \"Generates an image based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"image\"]}\n{\"id\": \"Text-to-Video\", \"desc\": \"Generates a video based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Text-to-Audio\", \"desc\": \"Generates an audio file based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Image-to-Text\", \"desc\": \"Extracts text from an input image using Optical Character Recognition (OCR).\", \"input-type\": [\"image\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio-to-Text\", \"desc\": \"Transcribes speech from an audio file into text.\", \"input-type\": [\"audio\"], \"output-type\": [\"text\"]}\n{\"id\": \"Video-to-Text\", \"desc\": \"Transcribes speech from a video file into text.\", \"input-type\": [\"video\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio Noise Reduction\", \"desc\": \"Reduces background noise or unwanted sounds from a given audio file.\", \"input-type\": [\"audio\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Audio Effects\", \"desc\": \"Applies various audio effects to a given audio file according to human instruction, such as reverb, chorus, or equalization.\", \"input-type\": [\"audio\", \"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Audio Splicer\", \"desc\": \"Combines two audio files into a single output file.\", \"input-type\": [\"audio\", \"audio\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Voice Changer\", \"desc\": \"Modifies the characteristics of a recorded voice according to human instruction, such as tone, pitch, or gender.\", \"input-type\": [\"audio\", \"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Text Summarizer\", \"desc\": \"Summarizes a given text into a shorter version while retaining the main points.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Translator\", \"desc\": \"Translates a given text from one language to english.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Sentiment Analysis\", \"desc\": \"Analyzes the sentiment of a given text, identifying if it is positive, negative, or neutral.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Grammar Checker\", \"desc\": \"Checks a given text for grammatical errors and suggests corrections.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Simplifier\", \"desc\": \"Rewrites a given text in a simpler and more understandable manner.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Expander\", \"desc\": \"Expands a given short text into a more detailed and descriptive version.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Keyword Extractor\", \"desc\": \"Extracts the most important keywords and phrases from a given text.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Paraphraser\", \"desc\": \"Rewrites a given text using different words while maintaining its original meaning.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Article Spinner\", \"desc\": \"Rewrites a given article using synonyms and syntax changes to create a new, unique version.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Topic Generator\", \"desc\": \"Generates a list of relevant topics or ideas based on a given input.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio-to-Image\", \"desc\": \"Generates an image that visually represents a given audio, such as a waveform or spectrogram.\", \"input-type\": [\"audio\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image-to-Video\", \"desc\": \"Creates a slideshow video using two input images.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video-to-Audio\", \"desc\": \"Extracts the audio track from a given video file.\", \"input-type\": [\"video\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Video-to-Image\", \"desc\": \"Extracts a still image from a given video.\", \"input-type\": [\"video\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Stitcher\", \"desc\": \"Stitches together two input images to create a panorama or collage.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Colorizer\", \"desc\": \"Adds color to a black and white input image using deep learning techniques.\", \"input-type\": [\"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Style Transfer\", \"desc\": \"Applies the visual style of one image (style) to the content of another image (content) using neural style transfer techniques.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Video Stabilizer\", \"desc\": \"Stabilizes a shaky input video to produce a smoother output video.\", \"input-type\": [\"video\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Speed Changer\", \"desc\": \"Adjusts the playback speed of a given video according to human instruction, either speeding it up or slowing it down.\", \"input-type\": [\"video\", \"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Synchronization\", \"desc\": \"Synchronizes the timing of an existing voiceover or audio file with the visuals of a given video.\", \"input-type\": [\"video\", \"audio\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Voiceover\", \"desc\": \"Adds a voiceover to a given video using a provided script or text.\", \"input-type\": [\"video\", \"text\"], \"output-type\": [\"video\"]}\n\n        \n# GOAL #: Based on the above tools, I want you generate task steps and task nodes to solve the # USER REQUEST #. \n        The format must in a strict JSON format, like: {\"task_steps\": [one or more concrete steps, format as Step x: step description], \"task_nodes\": [{\"task\": \"tool name must be from # TASK LIST #\", \"arguments\": [ a concise list of arguments for the tool. Either original text, or user-mentioned filename, or tag '<node-j>' (start from 0) to refer to the output of the j-th node. ]}], \"task_links\": [{\"source\": \"task name i\", \"target\": \"task name j\"}]} \n        \n        # REQUIREMENTS #: \n        1. the generated task steps and task nodes can resolve the given user request # USER REQUEST # perfectly. Task name must be selected from # TASK LIST #;\n\n        2. the task steps should strictly aligned with the task nodes, and the number of task steps should be same with the task nodes;\n\n        3. the dependencies among task steps should align with the argument dependencies of the task nodes;\n\n        4. the tool arguments should be align with the input-type field of # TASK LIST #;\n\n        5. The task links (task_links) should reflect the temporal dependencies among task nodes, i.e. the order in which the APIs are invoked;\n\n        \nHere are provided examples for your reference.\n\n# EXAMPLE #:\n# USER REQUEST #: Please create a panorama using two images 'example1.jpg' and 'example2.jpg'.\n# RESULT #: {\"task_steps\": [\"Step 1: Use Image Stitcher to stitch together two images.\"], \"task_nodes\": [{\"task\": \"Image Stitcher\", \"arguments\": [\"example1.jpg\", \"example2.jpg\"]}], \"task_links\": []}\n    \n\n\n    # USER REQUEST #: I have a black and white image 'example.jpg' that I would like to colorize using an AI tool.\n    now please generate your result in a strict JSON format:\n    # RESULT #:\n\n    Below is an example of step-by-step tool calls for planning a task to decompose a complex request into sub-tasks:\n\n    ```json\n    [\n    {\"Step 1\": \"Call tool 1 with input: 'input 1 name and content' and output: 'output 1 name and content'\"}\n    {\"Step 2\": \"Call tool 2 with input: 'input 2 name and content' and output: 'output 2 name and content'\"}\n    {\"Step 3\": \"Finish\"}\n    ]\n    ```\n    Based on this example, generate step-by-step tool calls to solve the given problem by breaking it down into sub-tasks and forming a connected path.\n\n    -----Tool Calls-----\n    ", "value": null}, "1": {"state": "\n    You are tasked with breaking down a complex user request into solvable sub-tasks by creating a task plan.\n\n    Problem Description:\n\n    # TASK LIST #:\n{\"id\": \"Image Downloader\", \"desc\": \"Downloads an image from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"image\"]}\n{\"id\": \"Video Downloader\", \"desc\": \"Downloads a video from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"video\"]}\n{\"id\": \"Audio Downloader\", \"desc\": \"Downloads an audio file from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Text Downloader\", \"desc\": \"Downloads the text content from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Search\", \"desc\": \"Searches for a specific text or keyword on the internet.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Image Search\", \"desc\": \"Searches for images on the internet based on a given query.\", \"input-type\": [\"text\"], \"output-type\": [\"Image\"]}\n{\"id\": \"Image Search (by Image)\", \"desc\": \"Performs a similar image search using an input image.\", \"input-type\": [\"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"URL Extractor\", \"desc\": \"Extracts URL from text\", \"input-type\": [\"text\"], \"output-type\": [\"url\"]}\n{\"id\": \"Video Search\", \"desc\": \"Searches for videos on the internet based on a given query.\", \"input-type\": [\"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Text-to-Image\", \"desc\": \"Generates an image based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"image\"]}\n{\"id\": \"Text-to-Video\", \"desc\": \"Generates a video based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Text-to-Audio\", \"desc\": \"Generates an audio file based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Image-to-Text\", \"desc\": \"Extracts text from an input image using Optical Character Recognition (OCR).\", \"input-type\": [\"image\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio-to-Text\", \"desc\": \"Transcribes speech from an audio file into text.\", \"input-type\": [\"audio\"], \"output-type\": [\"text\"]}\n{\"id\": \"Video-to-Text\", \"desc\": \"Transcribes speech from a video file into text.\", \"input-type\": [\"video\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio Noise Reduction\", \"desc\": \"Reduces background noise or unwanted sounds from a given audio file.\", \"input-type\": [\"audio\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Audio Effects\", \"desc\": \"Applies various audio effects to a given audio file according to human instruction, such as reverb, chorus, or equalization.\", \"input-type\": [\"audio\", \"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Audio Splicer\", \"desc\": \"Combines two audio files into a single output file.\", \"input-type\": [\"audio\", \"audio\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Voice Changer\", \"desc\": \"Modifies the characteristics of a recorded voice according to human instruction, such as tone, pitch, or gender.\", \"input-type\": [\"audio\", \"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Text Summarizer\", \"desc\": \"Summarizes a given text into a shorter version while retaining the main points.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Translator\", \"desc\": \"Translates a given text from one language to english.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Sentiment Analysis\", \"desc\": \"Analyzes the sentiment of a given text, identifying if it is positive, negative, or neutral.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Grammar Checker\", \"desc\": \"Checks a given text for grammatical errors and suggests corrections.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Simplifier\", \"desc\": \"Rewrites a given text in a simpler and more understandable manner.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Expander\", \"desc\": \"Expands a given short text into a more detailed and descriptive version.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Keyword Extractor\", \"desc\": \"Extracts the most important keywords and phrases from a given text.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Paraphraser\", \"desc\": \"Rewrites a given text using different words while maintaining its original meaning.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Article Spinner\", \"desc\": \"Rewrites a given article using synonyms and syntax changes to create a new, unique version.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Topic Generator\", \"desc\": \"Generates a list of relevant topics or ideas based on a given input.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio-to-Image\", \"desc\": \"Generates an image that visually represents a given audio, such as a waveform or spectrogram.\", \"input-type\": [\"audio\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image-to-Video\", \"desc\": \"Creates a slideshow video using two input images.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video-to-Audio\", \"desc\": \"Extracts the audio track from a given video file.\", \"input-type\": [\"video\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Video-to-Image\", \"desc\": \"Extracts a still image from a given video.\", \"input-type\": [\"video\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Stitcher\", \"desc\": \"Stitches together two input images to create a panorama or collage.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Colorizer\", \"desc\": \"Adds color to a black and white input image using deep learning techniques.\", \"input-type\": [\"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Style Transfer\", \"desc\": \"Applies the visual style of one image (style) to the content of another image (content) using neural style transfer techniques.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Video Stabilizer\", \"desc\": \"Stabilizes a shaky input video to produce a smoother output video.\", \"input-type\": [\"video\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Speed Changer\", \"desc\": \"Adjusts the playback speed of a given video according to human instruction, either speeding it up or slowing it down.\", \"input-type\": [\"video\", \"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Synchronization\", \"desc\": \"Synchronizes the timing of an existing voiceover or audio file with the visuals of a given video.\", \"input-type\": [\"video\", \"audio\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Voiceover\", \"desc\": \"Adds a voiceover to a given video using a provided script or text.\", \"input-type\": [\"video\", \"text\"], \"output-type\": [\"video\"]}\n\n        \n# GOAL #: Based on the above tools, I want you generate task steps and task nodes to solve the # USER REQUEST #. \n        The format must in a strict JSON format, like: {\"task_steps\": [one or more concrete steps, format as Step x: step description], \"task_nodes\": [{\"task\": \"tool name must be from # TASK LIST #\", \"arguments\": [ a concise list of arguments for the tool. Either original text, or user-mentioned filename, or tag '<node-j>' (start from 0) to refer to the output of the j-th node. ]}], \"task_links\": [{\"source\": \"task name i\", \"target\": \"task name j\"}]} \n        \n        # REQUIREMENTS #: \n        1. the generated task steps and task nodes can resolve the given user request # USER REQUEST # perfectly. Task name must be selected from # TASK LIST #;\n\n        2. the task steps should strictly aligned with the task nodes, and the number of task steps should be same with the task nodes;\n\n        3. the dependencies among task steps should align with the argument dependencies of the task nodes;\n\n        4. the tool arguments should be align with the input-type field of # TASK LIST #;\n\n        5. The task links (task_links) should reflect the temporal dependencies among task nodes, i.e. the order in which the APIs are invoked;\n\n        \nHere are provided examples for your reference.\n\n# EXAMPLE #:\n# USER REQUEST #: Please create a panorama using two images 'example1.jpg' and 'example2.jpg'.\n# RESULT #: {\"task_steps\": [\"Step 1: Use Image Stitcher to stitch together two images.\"], \"task_nodes\": [{\"task\": \"Image Stitcher\", \"arguments\": [\"example1.jpg\", \"example2.jpg\"]}], \"task_links\": []}\n    \n\n\n    # USER REQUEST #: I have a black and white image 'example.jpg' that I would like to colorize using an AI tool.\n    now please generate your result in a strict JSON format:\n    # RESULT #:\n\n    Below is an example of step-by-step tool calls for planning a task to decompose a complex request into sub-tasks:\n\n    ```json\n    [\n    {\"Step 1\": \"Call tool 1 with input: 'input 1 name and content' and output: 'output 1 name and content'\"}\n    {\"Step 2\": \"Call tool 2 with input: 'input 2 name and content' and output: 'output 2 name and content'\"}\n    {\"Step 3\": \"Finish\"}\n    ]\n    ```\n    Based on this example, generate step-by-step tool calls to solve the given problem by breaking it down into sub-tasks and forming a connected path.\n\n    -----Tool Calls-----\n    Tool Call of Step 1:Call Image Colorizer tool with input: 'example.jpg' and output: 'colored_example.jpg'\n", "value": 0.33333333283333333}, "3": {"state": "\n    You are tasked with breaking down a complex user request into solvable sub-tasks by creating a task plan.\n\n    Problem Description:\n\n    # TASK LIST #:\n{\"id\": \"Image Downloader\", \"desc\": \"Downloads an image from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"image\"]}\n{\"id\": \"Video Downloader\", \"desc\": \"Downloads a video from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"video\"]}\n{\"id\": \"Audio Downloader\", \"desc\": \"Downloads an audio file from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Text Downloader\", \"desc\": \"Downloads the text content from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Search\", \"desc\": \"Searches for a specific text or keyword on the internet.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Image Search\", \"desc\": \"Searches for images on the internet based on a given query.\", \"input-type\": [\"text\"], \"output-type\": [\"Image\"]}\n{\"id\": \"Image Search (by Image)\", \"desc\": \"Performs a similar image search using an input image.\", \"input-type\": [\"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"URL Extractor\", \"desc\": \"Extracts URL from text\", \"input-type\": [\"text\"], \"output-type\": [\"url\"]}\n{\"id\": \"Video Search\", \"desc\": \"Searches for videos on the internet based on a given query.\", \"input-type\": [\"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Text-to-Image\", \"desc\": \"Generates an image based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"image\"]}\n{\"id\": \"Text-to-Video\", \"desc\": \"Generates a video based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Text-to-Audio\", \"desc\": \"Generates an audio file based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Image-to-Text\", \"desc\": \"Extracts text from an input image using Optical Character Recognition (OCR).\", \"input-type\": [\"image\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio-to-Text\", \"desc\": \"Transcribes speech from an audio file into text.\", \"input-type\": [\"audio\"], \"output-type\": [\"text\"]}\n{\"id\": \"Video-to-Text\", \"desc\": \"Transcribes speech from a video file into text.\", \"input-type\": [\"video\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio Noise Reduction\", \"desc\": \"Reduces background noise or unwanted sounds from a given audio file.\", \"input-type\": [\"audio\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Audio Effects\", \"desc\": \"Applies various audio effects to a given audio file according to human instruction, such as reverb, chorus, or equalization.\", \"input-type\": [\"audio\", \"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Audio Splicer\", \"desc\": \"Combines two audio files into a single output file.\", \"input-type\": [\"audio\", \"audio\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Voice Changer\", \"desc\": \"Modifies the characteristics of a recorded voice according to human instruction, such as tone, pitch, or gender.\", \"input-type\": [\"audio\", \"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Text Summarizer\", \"desc\": \"Summarizes a given text into a shorter version while retaining the main points.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Translator\", \"desc\": \"Translates a given text from one language to english.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Sentiment Analysis\", \"desc\": \"Analyzes the sentiment of a given text, identifying if it is positive, negative, or neutral.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Grammar Checker\", \"desc\": \"Checks a given text for grammatical errors and suggests corrections.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Simplifier\", \"desc\": \"Rewrites a given text in a simpler and more understandable manner.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Expander\", \"desc\": \"Expands a given short text into a more detailed and descriptive version.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Keyword Extractor\", \"desc\": \"Extracts the most important keywords and phrases from a given text.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Paraphraser\", \"desc\": \"Rewrites a given text using different words while maintaining its original meaning.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Article Spinner\", \"desc\": \"Rewrites a given article using synonyms and syntax changes to create a new, unique version.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Topic Generator\", \"desc\": \"Generates a list of relevant topics or ideas based on a given input.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio-to-Image\", \"desc\": \"Generates an image that visually represents a given audio, such as a waveform or spectrogram.\", \"input-type\": [\"audio\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image-to-Video\", \"desc\": \"Creates a slideshow video using two input images.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video-to-Audio\", \"desc\": \"Extracts the audio track from a given video file.\", \"input-type\": [\"video\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Video-to-Image\", \"desc\": \"Extracts a still image from a given video.\", \"input-type\": [\"video\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Stitcher\", \"desc\": \"Stitches together two input images to create a panorama or collage.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Colorizer\", \"desc\": \"Adds color to a black and white input image using deep learning techniques.\", \"input-type\": [\"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Style Transfer\", \"desc\": \"Applies the visual style of one image (style) to the content of another image (content) using neural style transfer techniques.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Video Stabilizer\", \"desc\": \"Stabilizes a shaky input video to produce a smoother output video.\", \"input-type\": [\"video\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Speed Changer\", \"desc\": \"Adjusts the playback speed of a given video according to human instruction, either speeding it up or slowing it down.\", \"input-type\": [\"video\", \"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Synchronization\", \"desc\": \"Synchronizes the timing of an existing voiceover or audio file with the visuals of a given video.\", \"input-type\": [\"video\", \"audio\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Voiceover\", \"desc\": \"Adds a voiceover to a given video using a provided script or text.\", \"input-type\": [\"video\", \"text\"], \"output-type\": [\"video\"]}\n\n        \n# GOAL #: Based on the above tools, I want you generate task steps and task nodes to solve the # USER REQUEST #. \n        The format must in a strict JSON format, like: {\"task_steps\": [one or more concrete steps, format as Step x: step description], \"task_nodes\": [{\"task\": \"tool name must be from # TASK LIST #\", \"arguments\": [ a concise list of arguments for the tool. Either original text, or user-mentioned filename, or tag '<node-j>' (start from 0) to refer to the output of the j-th node. ]}], \"task_links\": [{\"source\": \"task name i\", \"target\": \"task name j\"}]} \n        \n        # REQUIREMENTS #: \n        1. the generated task steps and task nodes can resolve the given user request # USER REQUEST # perfectly. Task name must be selected from # TASK LIST #;\n\n        2. the task steps should strictly aligned with the task nodes, and the number of task steps should be same with the task nodes;\n\n        3. the dependencies among task steps should align with the argument dependencies of the task nodes;\n\n        4. the tool arguments should be align with the input-type field of # TASK LIST #;\n\n        5. The task links (task_links) should reflect the temporal dependencies among task nodes, i.e. the order in which the APIs are invoked;\n\n        \nHere are provided examples for your reference.\n\n# EXAMPLE #:\n# USER REQUEST #: Please create a panorama using two images 'example1.jpg' and 'example2.jpg'.\n# RESULT #: {\"task_steps\": [\"Step 1: Use Image Stitcher to stitch together two images.\"], \"task_nodes\": [{\"task\": \"Image Stitcher\", \"arguments\": [\"example1.jpg\", \"example2.jpg\"]}], \"task_links\": []}\n    \n\n\n    # USER REQUEST #: I have a black and white image 'example.jpg' that I would like to colorize using an AI tool.\n    now please generate your result in a strict JSON format:\n    # RESULT #:\n\n    Below is an example of step-by-step tool calls for planning a task to decompose a complex request into sub-tasks:\n\n    ```json\n    [\n    {\"Step 1\": \"Call tool 1 with input: 'input 1 name and content' and output: 'output 1 name and content'\"}\n    {\"Step 2\": \"Call tool 2 with input: 'input 2 name and content' and output: 'output 2 name and content'\"}\n    {\"Step 3\": \"Finish\"}\n    ]\n    ```\n    Based on this example, generate step-by-step tool calls to solve the given problem by breaking it down into sub-tasks and forming a connected path.\n\n    -----Tool Calls-----\n    Tool Call of Step 1:Call Audio Noise Reduction tool with input: 'example.jpg' and output: 'noisy_example.jpg' to remove background noise\n", "value": 0.33333333283333333}, "2": {"state": "\n    You are tasked with breaking down a complex user request into solvable sub-tasks by creating a task plan.\n\n    Problem Description:\n\n    # TASK LIST #:\n{\"id\": \"Image Downloader\", \"desc\": \"Downloads an image from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"image\"]}\n{\"id\": \"Video Downloader\", \"desc\": \"Downloads a video from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"video\"]}\n{\"id\": \"Audio Downloader\", \"desc\": \"Downloads an audio file from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Text Downloader\", \"desc\": \"Downloads the text content from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Search\", \"desc\": \"Searches for a specific text or keyword on the internet.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Image Search\", \"desc\": \"Searches for images on the internet based on a given query.\", \"input-type\": [\"text\"], \"output-type\": [\"Image\"]}\n{\"id\": \"Image Search (by Image)\", \"desc\": \"Performs a similar image search using an input image.\", \"input-type\": [\"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"URL Extractor\", \"desc\": \"Extracts URL from text\", \"input-type\": [\"text\"], \"output-type\": [\"url\"]}\n{\"id\": \"Video Search\", \"desc\": \"Searches for videos on the internet based on a given query.\", \"input-type\": [\"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Text-to-Image\", \"desc\": \"Generates an image based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"image\"]}\n{\"id\": \"Text-to-Video\", \"desc\": \"Generates a video based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Text-to-Audio\", \"desc\": \"Generates an audio file based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Image-to-Text\", \"desc\": \"Extracts text from an input image using Optical Character Recognition (OCR).\", \"input-type\": [\"image\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio-to-Text\", \"desc\": \"Transcribes speech from an audio file into text.\", \"input-type\": [\"audio\"], \"output-type\": [\"text\"]}\n{\"id\": \"Video-to-Text\", \"desc\": \"Transcribes speech from a video file into text.\", \"input-type\": [\"video\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio Noise Reduction\", \"desc\": \"Reduces background noise or unwanted sounds from a given audio file.\", \"input-type\": [\"audio\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Audio Effects\", \"desc\": \"Applies various audio effects to a given audio file according to human instruction, such as reverb, chorus, or equalization.\", \"input-type\": [\"audio\", \"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Audio Splicer\", \"desc\": \"Combines two audio files into a single output file.\", \"input-type\": [\"audio\", \"audio\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Voice Changer\", \"desc\": \"Modifies the characteristics of a recorded voice according to human instruction, such as tone, pitch, or gender.\", \"input-type\": [\"audio\", \"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Text Summarizer\", \"desc\": \"Summarizes a given text into a shorter version while retaining the main points.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Translator\", \"desc\": \"Translates a given text from one language to english.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Sentiment Analysis\", \"desc\": \"Analyzes the sentiment of a given text, identifying if it is positive, negative, or neutral.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Grammar Checker\", \"desc\": \"Checks a given text for grammatical errors and suggests corrections.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Simplifier\", \"desc\": \"Rewrites a given text in a simpler and more understandable manner.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Expander\", \"desc\": \"Expands a given short text into a more detailed and descriptive version.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Keyword Extractor\", \"desc\": \"Extracts the most important keywords and phrases from a given text.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Paraphraser\", \"desc\": \"Rewrites a given text using different words while maintaining its original meaning.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Article Spinner\", \"desc\": \"Rewrites a given article using synonyms and syntax changes to create a new, unique version.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Topic Generator\", \"desc\": \"Generates a list of relevant topics or ideas based on a given input.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio-to-Image\", \"desc\": \"Generates an image that visually represents a given audio, such as a waveform or spectrogram.\", \"input-type\": [\"audio\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image-to-Video\", \"desc\": \"Creates a slideshow video using two input images.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video-to-Audio\", \"desc\": \"Extracts the audio track from a given video file.\", \"input-type\": [\"video\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Video-to-Image\", \"desc\": \"Extracts a still image from a given video.\", \"input-type\": [\"video\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Stitcher\", \"desc\": \"Stitches together two input images to create a panorama or collage.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Colorizer\", \"desc\": \"Adds color to a black and white input image using deep learning techniques.\", \"input-type\": [\"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Style Transfer\", \"desc\": \"Applies the visual style of one image (style) to the content of another image (content) using neural style transfer techniques.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Video Stabilizer\", \"desc\": \"Stabilizes a shaky input video to produce a smoother output video.\", \"input-type\": [\"video\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Speed Changer\", \"desc\": \"Adjusts the playback speed of a given video according to human instruction, either speeding it up or slowing it down.\", \"input-type\": [\"video\", \"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Synchronization\", \"desc\": \"Synchronizes the timing of an existing voiceover or audio file with the visuals of a given video.\", \"input-type\": [\"video\", \"audio\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Voiceover\", \"desc\": \"Adds a voiceover to a given video using a provided script or text.\", \"input-type\": [\"video\", \"text\"], \"output-type\": [\"video\"]}\n\n        \n# GOAL #: Based on the above tools, I want you generate task steps and task nodes to solve the # USER REQUEST #. \n        The format must in a strict JSON format, like: {\"task_steps\": [one or more concrete steps, format as Step x: step description], \"task_nodes\": [{\"task\": \"tool name must be from # TASK LIST #\", \"arguments\": [ a concise list of arguments for the tool. Either original text, or user-mentioned filename, or tag '<node-j>' (start from 0) to refer to the output of the j-th node. ]}], \"task_links\": [{\"source\": \"task name i\", \"target\": \"task name j\"}]} \n        \n        # REQUIREMENTS #: \n        1. the generated task steps and task nodes can resolve the given user request # USER REQUEST # perfectly. Task name must be selected from # TASK LIST #;\n\n        2. the task steps should strictly aligned with the task nodes, and the number of task steps should be same with the task nodes;\n\n        3. the dependencies among task steps should align with the argument dependencies of the task nodes;\n\n        4. the tool arguments should be align with the input-type field of # TASK LIST #;\n\n        5. The task links (task_links) should reflect the temporal dependencies among task nodes, i.e. the order in which the APIs are invoked;\n\n        \nHere are provided examples for your reference.\n\n# EXAMPLE #:\n# USER REQUEST #: Please create a panorama using two images 'example1.jpg' and 'example2.jpg'.\n# RESULT #: {\"task_steps\": [\"Step 1: Use Image Stitcher to stitch together two images.\"], \"task_nodes\": [{\"task\": \"Image Stitcher\", \"arguments\": [\"example1.jpg\", \"example2.jpg\"]}], \"task_links\": []}\n    \n\n\n    # USER REQUEST #: I have a black and white image 'example.jpg' that I would like to colorize using an AI tool.\n    now please generate your result in a strict JSON format:\n    # RESULT #:\n\n    Below is an example of step-by-step tool calls for planning a task to decompose a complex request into sub-tasks:\n\n    ```json\n    [\n    {\"Step 1\": \"Call tool 1 with input: 'input 1 name and content' and output: 'output 1 name and content'\"}\n    {\"Step 2\": \"Call tool 2 with input: 'input 2 name and content' and output: 'output 2 name and content'\"}\n    {\"Step 3\": \"Finish\"}\n    ]\n    ```\n    Based on this example, generate step-by-step tool calls to solve the given problem by breaking it down into sub-tasks and forming a connected path.\n\n    -----Tool Calls-----\n    Tool Call of Step 1:Call Image Stitcher tool with input: 'noisy_example.jpg' and 'colored_example.jpg' and output: 'panorama.jpg'\n", "value": 0.33333333283333333}, "4": {"state": "\n    You are tasked with breaking down a complex user request into solvable sub-tasks by creating a task plan.\n\n    Problem Description:\n\n    # TASK LIST #:\n{\"id\": \"Image Downloader\", \"desc\": \"Downloads an image from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"image\"]}\n{\"id\": \"Video Downloader\", \"desc\": \"Downloads a video from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"video\"]}\n{\"id\": \"Audio Downloader\", \"desc\": \"Downloads an audio file from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Text Downloader\", \"desc\": \"Downloads the text content from a given URL.\", \"input-type\": [\"url\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Search\", \"desc\": \"Searches for a specific text or keyword on the internet.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Image Search\", \"desc\": \"Searches for images on the internet based on a given query.\", \"input-type\": [\"text\"], \"output-type\": [\"Image\"]}\n{\"id\": \"Image Search (by Image)\", \"desc\": \"Performs a similar image search using an input image.\", \"input-type\": [\"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"URL Extractor\", \"desc\": \"Extracts URL from text\", \"input-type\": [\"text\"], \"output-type\": [\"url\"]}\n{\"id\": \"Video Search\", \"desc\": \"Searches for videos on the internet based on a given query.\", \"input-type\": [\"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Text-to-Image\", \"desc\": \"Generates an image based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"image\"]}\n{\"id\": \"Text-to-Video\", \"desc\": \"Generates a video based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Text-to-Audio\", \"desc\": \"Generates an audio file based on a given text description.\", \"input-type\": [\"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Image-to-Text\", \"desc\": \"Extracts text from an input image using Optical Character Recognition (OCR).\", \"input-type\": [\"image\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio-to-Text\", \"desc\": \"Transcribes speech from an audio file into text.\", \"input-type\": [\"audio\"], \"output-type\": [\"text\"]}\n{\"id\": \"Video-to-Text\", \"desc\": \"Transcribes speech from a video file into text.\", \"input-type\": [\"video\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio Noise Reduction\", \"desc\": \"Reduces background noise or unwanted sounds from a given audio file.\", \"input-type\": [\"audio\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Audio Effects\", \"desc\": \"Applies various audio effects to a given audio file according to human instruction, such as reverb, chorus, or equalization.\", \"input-type\": [\"audio\", \"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Audio Splicer\", \"desc\": \"Combines two audio files into a single output file.\", \"input-type\": [\"audio\", \"audio\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Voice Changer\", \"desc\": \"Modifies the characteristics of a recorded voice according to human instruction, such as tone, pitch, or gender.\", \"input-type\": [\"audio\", \"text\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Text Summarizer\", \"desc\": \"Summarizes a given text into a shorter version while retaining the main points.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Translator\", \"desc\": \"Translates a given text from one language to english.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Sentiment Analysis\", \"desc\": \"Analyzes the sentiment of a given text, identifying if it is positive, negative, or neutral.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Grammar Checker\", \"desc\": \"Checks a given text for grammatical errors and suggests corrections.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Simplifier\", \"desc\": \"Rewrites a given text in a simpler and more understandable manner.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Expander\", \"desc\": \"Expands a given short text into a more detailed and descriptive version.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Keyword Extractor\", \"desc\": \"Extracts the most important keywords and phrases from a given text.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Text Paraphraser\", \"desc\": \"Rewrites a given text using different words while maintaining its original meaning.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Article Spinner\", \"desc\": \"Rewrites a given article using synonyms and syntax changes to create a new, unique version.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Topic Generator\", \"desc\": \"Generates a list of relevant topics or ideas based on a given input.\", \"input-type\": [\"text\"], \"output-type\": [\"text\"]}\n{\"id\": \"Audio-to-Image\", \"desc\": \"Generates an image that visually represents a given audio, such as a waveform or spectrogram.\", \"input-type\": [\"audio\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image-to-Video\", \"desc\": \"Creates a slideshow video using two input images.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video-to-Audio\", \"desc\": \"Extracts the audio track from a given video file.\", \"input-type\": [\"video\"], \"output-type\": [\"audio\"]}\n{\"id\": \"Video-to-Image\", \"desc\": \"Extracts a still image from a given video.\", \"input-type\": [\"video\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Stitcher\", \"desc\": \"Stitches together two input images to create a panorama or collage.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Colorizer\", \"desc\": \"Adds color to a black and white input image using deep learning techniques.\", \"input-type\": [\"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Image Style Transfer\", \"desc\": \"Applies the visual style of one image (style) to the content of another image (content) using neural style transfer techniques.\", \"input-type\": [\"image\", \"image\"], \"output-type\": [\"image\"]}\n{\"id\": \"Video Stabilizer\", \"desc\": \"Stabilizes a shaky input video to produce a smoother output video.\", \"input-type\": [\"video\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Speed Changer\", \"desc\": \"Adjusts the playback speed of a given video according to human instruction, either speeding it up or slowing it down.\", \"input-type\": [\"video\", \"text\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Synchronization\", \"desc\": \"Synchronizes the timing of an existing voiceover or audio file with the visuals of a given video.\", \"input-type\": [\"video\", \"audio\"], \"output-type\": [\"video\"]}\n{\"id\": \"Video Voiceover\", \"desc\": \"Adds a voiceover to a given video using a provided script or text.\", \"input-type\": [\"video\", \"text\"], \"output-type\": [\"video\"]}\n\n        \n# GOAL #: Based on the above tools, I want you generate task steps and task nodes to solve the # USER REQUEST #. \n        The format must in a strict JSON format, like: {\"task_steps\": [one or more concrete steps, format as Step x: step description], \"task_nodes\": [{\"task\": \"tool name must be from # TASK LIST #\", \"arguments\": [ a concise list of arguments for the tool. Either original text, or user-mentioned filename, or tag '<node-j>' (start from 0) to refer to the output of the j-th node. ]}], \"task_links\": [{\"source\": \"task name i\", \"target\": \"task name j\"}]} \n        \n        # REQUIREMENTS #: \n        1. the generated task steps and task nodes can resolve the given user request # USER REQUEST # perfectly. Task name must be selected from # TASK LIST #;\n\n        2. the task steps should strictly aligned with the task nodes, and the number of task steps should be same with the task nodes;\n\n        3. the dependencies among task steps should align with the argument dependencies of the task nodes;\n\n        4. the tool arguments should be align with the input-type field of # TASK LIST #;\n\n        5. The task links (task_links) should reflect the temporal dependencies among task nodes, i.e. the order in which the APIs are invoked;\n\n        \nHere are provided examples for your reference.\n\n# EXAMPLE #:\n# USER REQUEST #: Please create a panorama using two images 'example1.jpg' and 'example2.jpg'.\n# RESULT #: {\"task_steps\": [\"Step 1: Use Image Stitcher to stitch together two images.\"], \"task_nodes\": [{\"task\": \"Image Stitcher\", \"arguments\": [\"example1.jpg\", \"example2.jpg\"]}], \"task_links\": []}\n    \n\n\n    # USER REQUEST #: I have a black and white image 'example.jpg' that I would like to colorize using an AI tool.\n    now please generate your result in a strict JSON format:\n    # RESULT #:\n\n    Below is an example of step-by-step tool calls for planning a task to decompose a complex request into sub-tasks:\n\n    ```json\n    [\n    {\"Step 1\": \"Call tool 1 with input: 'input 1 name and content' and output: 'output 1 name and content'\"}\n    {\"Step 2\": \"Call tool 2 with input: 'input 2 name and content' and output: 'output 2 name and content'\"}\n    {\"Step 3\": \"Finish\"}\n    ]\n    ```\n    Based on this example, generate step-by-step tool calls to solve the given problem by breaking it down into sub-tasks and forming a connected path.\n\n    -----Tool Calls-----\n    Tool Call of Step 1:Call Image Colorizer tool with input: 'example.jpg' and output: 'colored_example.jpg'\nTool Call of Step 2:Call Image Colorizer tool with input: 'example.jpg' and output: 'colored_example.jpg'\n", "value": 0.33333333283333333}}]
